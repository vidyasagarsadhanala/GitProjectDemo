

--20140206 BN - Adding Person's Email Address
--20141008 BN - added phone number for aci report
--20140102 bn - Adding a flag for if the account is on auto pay AND there are no active SAs
--			  - This is for the Auto Pay with No Active SA report.	
--20160428 BN - LARGE METER AUDIT REPORT
CREATE OR REPLACE VIEW WC_CCB_ACCOUNT_DS_V(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ACCOUNT_ID,
SETUP_DATE,
ALERT_INFO,
BILL_AFTER_DATE,
PROTECT_BILL_CYCLE_SW,
CIS_DIVISION,
MAILING_PREMISE_ID,
PROTECT_MAILING_PREMISE,
LAST_CREDIT_REVIEW_DATE,
POSTPONE_CREDIT_REVIEW_DATE,
INTERNAL_CREDIT_REVIEW_SW,
BILL_PRINT_INTERCEPT,
NO_DEPOSIT_REVIEW_SWITCH,
VERSION,
PROTECT_CIS_DIVISION_SW,
ACCOUNT_DATA_AREA,
COLLECTION_CLASS_CODE,
COLLECTION_CLASS_VERSION,
COLLECTION_METHOD_FLAG,
COLLECTION_CLASS_LANGUAGE_CODE,
COLLECTION_CLASS_DESCRIPTION,
COLLECTION_CLASS_L_VERSION,
ACCESS_GROUP_CODE,
ACCESS_GROUP_VERSION,
ACCESS_GROUP_LANGUAGE_CODE,
ACCESS_GROUP_DESCRIPTION,
ACCESS_GROUP_L_VERSION,
ACCOUNT_MGMT_GROUP_CODE,
ACCOUNT_MGMT_GROUP_VERSION,
ACCOUNT_MGMT_GROUP_LANGUAGE,
ACCOUNT_MGMT_GROUP_DESCRIPTION,
ACCOUNT_MGMT_GROUP_L_VERSION,
BILL_CYCLE_CODE,
BILL_CYCLE_VERSION,
BILL_CYCLE_LANGUAGE,
BILL_CYCLE_DESCRIPTION,
BILL_CYCLE_L_VERSION,
BUDGET_PLAN_CODE,
TRUE_UP_ALGORITHM_CODE,
MONTHS_FOR_TRUE_UP,
MONITOR_ALGORITHM_CODE,
CALCULATION_ALGORITHM_CODE,
BUDGET_PLAN_VERSION,
BUDGET_PLAN_LANGUAGE,
BUDGET_PLAN_DESCRIPTION,
BUDGET_PLAN_L_VERSION,
--CIS_DIVISION,
WORK_CALENDAR_CODE,
CIS_DIVISION_VERSION,
CIS_DIVISION_LANGUAGE,
CIS_DIVISION_DESCRIPTION,
CIS_DIVISION_L_VERSION,
SUNDAY,
MONDAY,
TUESDAY,
WEDNESDAY,
THURSDAY,
FRIDAY,
WORK_CALENDAR_VERSION,
SATURDAY,
WORK_CALENDAR_LANGUAGE,
WORK_CALENDAR_DESCRIPTION,
WORK_CALENDAR_L_VERSION,
CURRENCY_CODE,
CURRENCY_SYMBOL,
CURRENCY_VERSION,
DECIMAL_POSITIONS,
SCALE_POSITIONS,
CURRENCY_SYMBOL_POSITION_FLAG,
CURRENCY_LANGUAGE,
CURRENCY_DESCRIPTION,
CURRENCY_L_VERSION,
CUSTOMER_CLASS_CODE,
CUSTOMER_CLASS_VERSION,
--COLLECTION_CLASS_CODE,
NON_CIS_PAYMENT_SW,
BUSINESS_ACTIVITY_REQUIRED_SW,
OPEN_ITEM_ACCOUNTING_SW,
CUSTOMER_CLASS_LANGUAGE,
CUSTOMER_CLASS_DESCRIPTION,
CUSTOMER_CLASS_L_VERSION,
--Adding Mailing Premise Details - 20130625 BN - From here down
PREMISE_ID,
PREMISE_TYPE_CODE,
--CIS_DIVISION,
LANDLORD_AGREEMENT_ID,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
METER_READ_INSTRUCTION_CODE,
METER_READ_INSTRUCTION_DETAILS,
METER_READ_WARNING_CODE,
TREND_AREA_CODE,
ADDRESS1,
ADDRESS2,
ADDRESS3,
ADDRESS4,
MAILING_ADDRESS_SW,
CITY,
PREMISE_NUMBER,
NUMBER2,
COUNTRY,
POSTAL,
HOUSE_TYPE,
TAX_VENDOR_GEO_CODE,
IN_CITY_LIMIT,
STATE,
PREM_VERSION,
ADDRESS1_UPPERCASE,
CITY_UPPERCASE,
TIME_ZONE_CODE,
LIFE_SUPPORT_SENS_LOAD_FLAG,
LIFE_SUPPORT_SENS_LOAD_DESC,
PARENT_PRMISE_ID,
PREMISE_DATA_AREA,
PREM_CHARACTERISTIC_VALUE,
   PERSON_NAME,			--adding primary person name as well.
   PERSON_NAME_UPPERCASE,
   NAME_TYPE,
   PERSON_ID,
   PRIMARY_NAME_FLAG,
   SEQUENCE_NUMBER,
   PER_NAME_VERSION,
county, --20130903 bn - for account rebate eligibility report
EMAIL_ADDRESS, 		--20140206 BN - for dollar help corp comm report
PERSON_ID_NUMBER,  --20140521 BN - For payments on Bankruptcy Accounts
IN_SUIT_FLAG,	--20140609 BN - FOR AUTHORIZED IN SUIT REPORT
SEQ_1_PHONE_NUMBER,   --20141008 BN - FOR ACI REPORT.
AUTOPAY_WITH_NO_ACTIVE_SA_FLAG, --20150102 bn - for auto pay with no active sa report.
--20160428 BN - LARGE METER AUDIT REPORT
BILL_ADDRESS_SOURCE_FLAG,
MAILING_ADDRESS1,
MAILING_ADDRESS2,
MAILING_CITY,
MAILING_POSTAL
)
AS
SELECT
WC_CCB_ACCT_S.INTEGRATION_ID,
WC_CCB_ACCT_S.DATASOURCE_NUM_ID,
WC_CCB_ACCT_S.W_INSERT_DT,
WC_CCB_ACCT_S.W_UPDATE_DT,
WC_CCB_ACCT_S.W_LOAD_NUMBER,
WC_CCB_ACCT_S.ACCOUNT_ID,
WC_CCB_ACCT_S.SETUP_DATE,
WC_CCB_ACCT_S.ALERT_INFO,
WC_CCB_ACCT_S.BILL_AFTER_DATE,
WC_CCB_ACCT_S.PROTECT_BILL_CYCLE_SW,
WC_CCB_ACCT_S.CIS_DIVISION,
WC_CCB_ACCT_S.MAILING_PREMISE_ID,
WC_CCB_ACCT_S.PROTECT_MAILING_PREMISE,
WC_CCB_ACCT_S.LAST_CREDIT_REVIEW_DATE,
WC_CCB_ACCT_S.POSTPONE_CREDIT_REVIEW_DATE,
WC_CCB_ACCT_S.INTERNAL_CREDIT_REVIEW_SW,
WC_CCB_ACCT_S.BILL_PRINT_INTERCEPT,
WC_CCB_ACCT_S.NO_DEPOSIT_REVIEW_SWITCH,
WC_CCB_ACCT_S.VERSION,
WC_CCB_ACCT_S.PROTECT_CIS_DIVISION_SW,
WC_CCB_ACCT_S.ACCOUNT_DATA_AREA,
WC_CCB_COLL_CL_S.COLLECTION_CLASS_CODE,
WC_CCB_COLL_CL_S.COLLECTION_CLASS_VERSION,
WC_CCB_COLL_CL_S.COLLECTION_METHOD_FLAG,
WC_CCB_COLL_CL_S.COLLECTION_CLASS_LANGUAGE_CODE,
WC_CCB_COLL_CL_S.COLLECTION_CLASS_DESCRIPTION,
WC_CCB_COLL_CL_S.COLLECTION_CLASS_L_VERSION,
WC_CCB_ACC_GRP_S.ACCESS_GROUP_CODE,
WC_CCB_ACC_GRP_S.ACCESS_GROUP_VERSION,
WC_CCB_ACC_GRP_S.ACCESS_GROUP_LANGUAGE_CODE,
WC_CCB_ACC_GRP_S.ACCESS_GROUP_DESCRIPTION,
WC_CCB_ACC_GRP_S.ACCESS_GROUP_VERSION,
WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_CODE,
WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_VERSION,
WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_LANGUAGE,
WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_DESCRIPTION,
WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_L_VERSION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_CODE,
WC_CCB_BILL_CYC_S.BILL_CYCLE_VERSION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_LANGUAGE,
WC_CCB_BILL_CYC_S.BILL_CYCLE_DESCRIPTION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_L_VERSION,
WC_CCB_BUD_PLAN_S.BUDGET_PLAN_CODE,
WC_CCB_BUD_PLAN_S.TRUE_UP_ALGORITHM_CODE,
WC_CCB_BUD_PLAN_S.MONTHS_FOR_TRUE_UP,
WC_CCB_BUD_PLAN_S.MONITOR_ALGORITHM_CODE,
WC_CCB_BUD_PLAN_S.CALCULATION_ALGORITHM_CODE,
WC_CCB_BUD_PLAN_S.BUDGET_PLAN_VERSION,
WC_CCB_BUD_PLAN_S.BUDGET_PLAN_LANGUAGE,
WC_CCB_BUD_PLAN_S.BUDGET_PLAN_DESCRIPTION,
WC_CCB_BUD_PLAN_S.BUDGET_PLAN_L_VERSION,
--WC_CCB_CIS_DIVISION_S.CIS_DIVISION,
WC_CCB_CIS_DIVISION_S.WORK_CALENDAR_CODE,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_VERSION,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_LANGUAGE,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_DESCRIPTION,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_L_VERSION,
WC_CCB_CAL_WORK_S.SUNDAY,
WC_CCB_CAL_WORK_S.MONDAY,
WC_CCB_CAL_WORK_S.TUESDAY,
WC_CCB_CAL_WORK_S.WEDNESDAY,
WC_CCB_CAL_WORK_S.THURSDAY,
WC_CCB_CAL_WORK_S.FRIDAY,
WC_CCB_CAL_WORK_S.WORK_CALENDAR_VERSION,
WC_CCB_CAL_WORK_S.SATURDAY,
WC_CCB_CAL_WORK_S.WORK_CALENDAR_LANGUAGE,
WC_CCB_CAL_WORK_S.WORK_CALENDAR_DESCRIPTION,
WC_CCB_CAL_WORK_S.WORK_CALENDAR_VERSION,
WC_CCB_CURRENCY_CD_S.CURRENCY_CODE,
WC_CCB_CURRENCY_CD_S.CURRENCY_SYMBOL,
WC_CCB_CURRENCY_CD_S.CURRENCY_VERSION,
WC_CCB_CURRENCY_CD_S.DECIMAL_POSITIONS,
WC_CCB_CURRENCY_CD_S.SCALE_POSITIONS,
WC_CCB_CURRENCY_CD_S.CURRENCY_SYMBOL_POSITION_FLAG,
WC_CCB_CURRENCY_CD_S.CURRENCY_LANGUAGE,
WC_CCB_CURRENCY_CD_S.CURRENCY_DESCRIPTION,
WC_CCB_CURRENCY_CD_S.CURRENCY_L_VERSION,
WC_CCB_CUST_CL_S.CUSTOMER_CLASS_CODE,
WC_CCB_CUST_CL_S.CUSTOMER_CLASS_VERSION,
--WC_CCB_CUST_CL_S.COLLECTION_CLASS_CODE,
WC_CCB_CUST_CL_S.NON_CIS_PAYMENT_SW,
WC_CCB_CUST_CL_S.BUSINESS_ACTIVITY_REQUIRED_SW,
WC_CCB_CUST_CL_S.OPEN_ITEM_ACCOUNTING_SW,
WC_CCB_CUST_CL_S.CUSTOMER_CLASS_LANGUAGE,
WC_CCB_CUST_CL_S.CUSTOMER_CLASS_DESCRIPTION,
WC_CCB_CUST_CL_S.CUSTOMER_CLASS_L_VERSION,
--Adding Mailing Premise Information - 20130625 BN From here down
WC_CCB_PREM_S.PREMISE_ID,
WC_CCB_PREM_S.PREMISE_TYPE_CODE,
--WC_CCB_PREM_S.CIS_DIVISION,
WC_CCB_PREM_S.LANDLORD_AGREEMENT_ID,
WC_CCB_PREM_S.KEY_SW,
WC_CCB_PREM_S.KEY_ID,
WC_CCB_PREM_S.OK_TO_ENTER_SW,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_CODE,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_DETAILS,
WC_CCB_PREM_S.METER_READ_WARNING_CODE,
WC_CCB_PREM_S.TREND_AREA_CODE,
WC_CCB_PREM_S.ADDRESS1,
WC_CCB_PREM_S.ADDRESS2,
WC_CCB_PREM_S.ADDRESS3,
WC_CCB_PREM_S.ADDRESS4,
WC_CCB_PREM_S.MAILING_ADDRESS_SW,
WC_CCB_PREM_S.CITY,
WC_CCB_PREM_S.PREMISE_NUMBER,
WC_CCB_PREM_S.NUMBER2,
WC_CCB_PREM_S.COUNTRY,
WC_CCB_PREM_S.POSTAL,
WC_CCB_PREM_S.HOUSE_TYPE,
WC_CCB_PREM_S.TAX_VENDOR_GEO_CODE,
WC_CCB_PREM_S.IN_CITY_LIMIT,
WC_CCB_PREM_S.STATE,
WC_CCB_PREM_S.PREM_VERSION,
WC_CCB_PREM_S.ADDRESS1_UPPERCASE,
WC_CCB_PREM_S.CITY_UPPERCASE,
WC_CCB_PREM_S.TIME_ZONE_CODE,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_FLAG,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_DESC,
WC_CCB_PREM_S.PARENT_PRMISE_ID,
WC_CCB_PREM_S.PREMISE_DATA_AREA,
WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE,
 --CI_PER_NAME
          WC_CCB_PER_NAME_S.PERSON_NAME,
          WC_CCB_PER_NAME_S.PERSON_NAME_UPPERCASE,
          WC_CCB_PER_NAME_S.NAME_TYPE,
          WC_CCB_PER_NAME_S.PERSON_ID,
          WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG,
          WC_CCB_PER_NAME_S.SEQUENCE_NUMBER,
          WC_CCB_PER_NAME_S.PER_NAME_VERSION,
ltrim(rtrim(wc_ccb_prem_s.county)), --20130903 bn - for account rebate eligibility report
trim(wc_ccb_per_s.EMAIL_ADDRESS), 		--20140206 BN - for dollar help corp comm report
wc_ccb_per_id_s.PERSON_ID_NUMBER,  --20140521 BN - For payments on Bankruptcy Accounts
(CASE WHEN IN_SUIT_FLAG.ACCOUNT_ID IS NOT NULL THEN 'Y' ELSE 'N' END )IN_SUIT_FLAG,	--20140609 BN - FOR AUTHORIZED IN SUIT REPORT
WC_CCB_PER_PHONE_S.PHONE_NUMBER SEQ_1_PHONE_NUMBER,   --20141008 BN - FOR ACI REPORT.
(CASE WHEN WC_CCB_ACCT_APAY_S.ACCOUNT_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AUTOPAY_WITH_NO_ACTIVE_SA_FLAG, --20150102 bn - for auto pay with no active sa report.
--20160428 BN - FOR LARGE METER AUDIT REPORT.
WC_CCB_ACCT_PER_S.BILL_ADDRESS_SOURCE_FLAG,
DECODE (WC_CCB_ACCT_PER_S.BILL_ADDRESS_SOURCE_FLAG,
'ACOV',WC_CCB_PER_ADDR_OVRD_S.ADDRESS1,
'PER',WC_CCB_PER_S.ADDRESS1,
'PREM',WC_CCB_PREM_S.ADDRESS1,
NULL) AS MAILING_ADDRESS1,
DECODE (WC_CCB_ACCT_PER_S.BILL_ADDRESS_SOURCE_FLAG,
'ACOV',WC_CCB_PER_ADDR_OVRD_S.ADDRESS2,
'PER',WC_CCB_PER_S.ADDRESS2,
'PREM',WC_CCB_PREM_S.ADDRESS2,
NULL) AS MAILING_ADDRESS2,
DECODE (WC_CCB_ACCT_PER_S.BILL_ADDRESS_SOURCE_FLAG,
'ACOV',WC_CCB_PER_ADDR_OVRD_S.CITY,
'PER',WC_CCB_PER_S.CITY,
'PREM',WC_CCB_PREM_S.CITY,
NULL) AS MAILING_CITY,
DECODE (WC_CCB_ACCT_PER_S.BILL_ADDRESS_SOURCE_FLAG,
'ACOV',WC_CCB_PER_ADDR_OVRD_S.POSTAL,
'PER',WC_CCB_PER_S.POSTAL,
'PREM',WC_CCB_PREM_S.POSTAL,
NULL) AS MAILING_POSTAL

FROM
    WC_CCB_ACCT_S,
    WC_CCB_COLL_CL_S,
    WC_CCB_ACC_GRP_S,
    WC_CCB_ACCT_MGMT_GR_S,
    WC_CCB_BILL_CYC_S,
    WC_CCB_BUD_PLAN_S,
    WC_CCB_CIS_DIVISION_S,
    WC_CCB_CAL_WORK_S,
    WC_CCB_CURRENCY_CD_S,
    WC_CCB_CUST_CL_S,
    WC_CCB_PREM_S,  --20130625 BN
       (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC')
                AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
          ) WC_CCB_PREM_CHAR_S,    --20130625 BN
    WC_CCB_ACCT_PER_S,
    WC_CCB_PER_S,
    WC_CCB_PER_NAME_S,
	wc_ccb_per_id_s,  --20140521 BN - For payments on Bankruptcy Accounts
	(SELECT DISTINCT ACCOUNT_ID FROM WC_CCB_ACCT_ALERT_S WHERE ALERT_TYPE_CODE = 'IS' AND nvl(END_DATE, to_date('12/31/2099','mm/dd/yyyy')) >= trunc(sysdate)) IN_SUIT_FLAG, --20140609 BN - FOR AUTHORIZED IN SUIT REPORT - only want current In Suit
	--20140917 bn - new logic due to users populating the end date now.
	WC_CCB_PER_PHONE_S,	--20141008 BN - FOR ACI REPORT.
	(SELECT DISTINCT ACCOUNT_ID FROM WC_CCB_ACCT_APAY_S WHERE WC_CCB_ACCT_APAY_S.END_DATE IS NULL
		and not exists (select 1 from wc_ccb_sa_s
                    where sa_status_flag in ('10', '20', '30')--, '50')	--20140105 bn - per mike c.'s requirements
                        and wc_ccb_sa_s.ACCOUNT_ID = WC_CCB_ACCT_APAY_S.ACCOUNT_ID) ) WC_CCB_ACCT_APAY_S,	--20150102 BN - AUTO PAY REPORT
	WC_CCB_PER_ADDR_OVRD_S --20160428 BN - Large meter audit read
WHERE 1=1
    AND WC_CCB_ACCT_S.COLLECTION_CLASS_CODE = WC_CCB_COLL_CL_S.COLLECTION_CLASS_CODE (+)
    AND WC_CCB_ACCT_S.ACCESS_GROUP_CODE = WC_CCB_ACC_GRP_S.ACCESS_GROUP_CODE (+)
    AND WC_CCB_ACCT_S.ACCOUNT_MGMT_GROUP_CODE = WC_CCB_ACCT_MGMT_GR_S.ACCOUNT_MGMT_GROUP_CODE (+)
    AND WC_CCB_ACCT_S.BILL_CYCLE_CODE = WC_CCB_BILL_CYC_S.BILL_CYCLE_CODE (+)
    AND WC_CCB_ACCT_S.BUDGET_PLAN_CODE = WC_CCB_BUD_PLAN_S.BUDGET_PLAN_CODE (+)
    AND WC_CCB_ACCT_S.CIS_DIVISION = WC_CCB_CIS_DIVISION_S.CIS_DIVISION (+)
    AND WC_CCB_CIS_DIVISION_S.WORK_CALENDAR_CODE = WC_CCB_CAL_WORK_S.WORK_CALENDAR_CODE (+)
    AND WC_CCB_ACCT_S.CURRENCY_CODE = WC_CCB_CURRENCY_CD_S.CURRENCY_CODE (+)
    AND WC_CCB_ACCT_S.CUSTOMER_CLASS_CODE = WC_CCB_CUST_CL_S.CUSTOMER_CLASS_CODE (+)
    AND WC_CCB_ACCT_S.MAILING_PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID (+)
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
    AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
    AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
    AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_NAME_S.PERSON_ID(+)
    AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'
	and wc_ccb_per_s.integration_id = wc_ccb_per_id_s.person_id (+) --20140521 BN - For payments on Bankruptcy Accounts
	and wc_ccb_per_id_s.ID_TYPE_CODE(+) = 'SSN'  --20140521 BN - For payments on Bankruptcy Accounts
	AND WC_CCB_ACCT_S.INTEGRATION_ID = IN_SUIT_FLAG.ACCOUNT_ID (+)  --20140609 BN - FOR AUTHORIZED IN SUIT REPORT
	AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_PHONE_S.PERSON_ID (+)   --20141008 BN - FOR ACI REPORT.
	AND WC_CCB_PER_PHONE_S.SEQUENCE_NUMBER (+) = 1   --20141008 BN - FOR ACI REPORT.
	AND WC_CCB_ACCT_S.ACCOUNT_ID = WC_CCB_ACCT_APAY_S.ACCOUNT_ID (+)	--20150102 BN - AUTO PAY REPORT
	
	--20160428 BN - LARGE METER Audit
	AND WC_CCB_ACCT_PER_S.account_id  =WC_CCB_PER_ADDR_OVRD_S.account_id(+)
    AND WC_CCB_ACCT_PER_S.person_id =WC_CCB_PER_ADDR_OVRD_S.person_id(+)
;

CREATE OR REPLACE VIEW WC_CCB_BILL_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_ID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_SCHEDULE_CID,
BILL_CYCLE_CID,
ACCOUNT_CID
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_ID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_SCHEDULE_CID,
BILL_CYCLE_CID,
ACCOUNT_CID
FROM
	WC_CCB_BILL_S
;


CREATE OR REPLACE VIEW WC_CCB_BILL_MESSAGES_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_ID,
BILL_MESSAGE_CODE,
BILL_MESSAGES_VERSION,
MESSAGE_PRIORITY_FLAG,
BILL_MESSAGE_VERSION,
INSERT_CODE,
LANGUAGE_CODE,
DESCRIPTION,
MESSAGE_ON_BILL,
BILL_MESSAGE_L_VERSION
)
AS
SELECT
WC_CCB_BILL_MSGS_S.INTEGRATION_ID,
WC_CCB_BILL_MSGS_S.DATASOURCE_NUM_ID,
WC_CCB_BILL_MSGS_S.W_INSERT_DT,
WC_CCB_BILL_MSGS_S.W_UPDATE_DT,
WC_CCB_BILL_MSGS_S.W_LOAD_NUMBER,
WC_CCB_BILL_MSGS_S.BILL_ID,
WC_CCB_BILL_MSGS_S.BILL_MESSAGE_CODE,
WC_CCB_BILL_MSGS_S.BILL_MESSAGES_VERSION,
WC_CCB_BILL_MSG_S.MESSAGE_PRIORITY_FLAG,
WC_CCB_BILL_MSG_S.BILL_MESSAGE_VERSION,
WC_CCB_BILL_MSG_S.INSERT_CODE,
WC_CCB_BILL_MSG_S.LANGUAGE_CODE,
WC_CCB_BILL_MSG_S.DESCRIPTION,
WC_CCB_BILL_MSG_S.MESSAGE_ON_BILL,
WC_CCB_BILL_MSG_S.BILL_MESSAGE_L_VERSION
FROM
	WC_CCB_BILL_MSGS_S,
	WC_CCB_BILL_MSG_S
WHERE
	WC_CCB_BILL_MSGS_S.BILL_MESSAGE_CODE = WC_CCB_BILL_MSG_S.BILL_MESSAGE_CODE
;




CREATE OR REPLACE VIEW WC_CCB_BILL_CYCLE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_CYCLE_CODE,
BILL_CYCLE_VERSION,
BILL_CYCLE_LANGUAGE,
BILL_CYCLE_DESCRIPTION,
BILL_CYCLE_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_CYCLE_CODE,
BILL_CYCLE_VERSION,
BILL_CYCLE_LANGUAGE,
BILL_CYCLE_DESCRIPTION,
BILL_CYCLE_L_VERSION
FROM
	WC_CCB_BILL_CYC_S
;


/*--20130924 bn - adding columns for large volumne report for finance. */ --Not doing this now.
--20140115 BN - Changed logic for Account lookup to use SA's Account, not the Bill's
CREATE OR REPLACE VIEW WC_CCB_BILL_SA_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_ID,
SA_ID,
CURRENT_AMOUNT,
PAYOFF_AMOUNT,
CURRENCY_CODE,
BILL_SA_VERSION,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_SCHEDULE_CID,
BILL_CYCLE_CID,
ACCOUNT_CID,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID
)
AS
SELECT
WC_CCB_BILL_SA_S.INTEGRATION_ID,
WC_CCB_BILL_SA_S.DATASOURCE_NUM_ID,
WC_CCB_BILL_SA_S.W_INSERT_DT,
WC_CCB_BILL_SA_S.W_UPDATE_DT,
WC_CCB_BILL_SA_S.W_LOAD_NUMBER,
WC_CCB_BILL_SA_S.BILL_ID,
WC_CCB_BILL_SA_S.SA_ID,
WC_CCB_BILL_SA_S.CURRENT_AMOUNT,
WC_CCB_BILL_SA_S.PAYOFF_AMOUNT,
WC_CCB_BILL_SA_S.CURRENCY_CODE,
WC_CCB_BILL_SA_S.BILL_SA_VERSION,
WC_CCB_BILL_S.BILL_CYCLE_CODE,
WC_CCB_BILL_S.WINDOW_START_DATE,
WC_CCB_SA_S.ACCOUNT_ID, --20140115 BN - We should not use the Bill's Account ID since users can change the Accounts.
--WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.CREATE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_SA_S.ACCOUNT_ID, --20140115 BN - We should not use the Bill's Account ID since users can change the Accounts.
--WC_CCB_BILL_S.ACCOUNT_CID,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID
FROM
	WC_CCB_BILL_SA_S,
	WC_CCB_BILL_S,
	WC_CCB_SA_S,
	WC_CCB_SA_TYPE_S

/*	(SELECT *
          FROM CI_SA_CHAR
         WHERE     CI_SA_CHAR.EFFDT =
                      (SELECT MAX (TMP.EFFDT)
                         FROM CI_SA_CHAR TMP
                        WHERE     TMP.SA_ID = CI_SA_CHAR.SA_ID
                              AND TMP.CHAR_TYPE_CD = 'TRNSCNRT')
               AND CI_SA_CHAR.CHAR_TYPE_CD = 'TRNSCNRT'
	) CI_SA_CHAR, --20130924 bn - for large volume report

    (SELECT SUM (CI_FT_GL.AMOUNT) GRT_REVENUE, ci_ft.bill_id
            FROM
                 CI_FT,
                 CI_FT_GL
           WHERE     1=1
                 AND CI_FT_GL.FT_ID = CI_FT.FT_ID(+)
                 AND CI_FT_GL.DST_ID IN
                        (SELECT DISTINCT DST_ID
                           FROM CI_DST_CD_CHAR TMP
                          WHERE     TMP.CHAR_VAL = 'Y'
                                AND TMP.CHAR_TYPE_CD = 'GRTNR')
        GROUP BY ci_ft.bill_id
	) GRT_REV, --20130924 bn - for large volume report

	(SELECT *
          FROM CI_SA_CHAR
         WHERE     CI_SA_CHAR.EFFDT =
                      (SELECT MAX (TMP.EFFDT)
                         FROM CI_SA_CHAR TMP
                        WHERE     TMP.SA_ID = CI_SA_CHAR.SA_ID
                              AND TMP.CHAR_TYPE_CD = 'TRNSCNRT')
               AND CI_SA_CHAR.CHAR_TYPE_CD = 'TRNSCNRT'
	) CI_SA_CHAR,  --20130924 bn - for large volume report

    (SELECT sum(bill_sq) bill_sq, sum(init_sq) init_sq, bseg_id FROM CI_BSEG_SQ WHERE CI_BSEG_SQ.SQI_CD = 'GSBLK1' group by bseg_id) GSBLK1_BSEG_SQ ,
    (SELECT sum(bill_sq) bill_sq, sum(init_sq) init_sq, bseg_id FROM CI_BSEG_SQ WHERE CI_BSEG_SQ.SQI_CD = 'GS' group by bseg_id) GS_BSEG_SQ,
    (SELECT sum(bill_sq) bill_sq, sum(init_sq) init_sq, bseg_id FROM CI_BSEG_SQ WHERE CI_BSEG_SQ.SQI_CD = 'THDMX' group by bseg_id) THDMX_BSEG_SQ ,
    (SELECT sum(bill_sq) bill_sq, sum(init_sq) init_sq, bseg_id FROM CI_BSEG_SQ WHERE CI_BSEG_SQ.SQI_CD = 'OVRTH' group by bseg_id) OVRTH_BSEG_SQ,
    (SELECT sum(bill_sq) bill_sq, sum(init_sq) init_sq, bseg_id FROM CI_BSEG_SQ WHERE CI_BSEG_SQ.SQI_CD = 'TTH' group by bseg_id) TTH_BSEG_SQ,

    (select * from CI_BSEG_CALC_LN where dst_id in (SELECT DISTINCT DST_ID
                 FROM CI_DST_CD_CHAR
                WHERE CHAR_TYPE_CD = 'REVBLDTM' AND CHAR_VAL in ('BLK1S','BLK1W') and sqi_cd = 'TTH')
	) ci_bseg_calc_ln,
    ci_bseg_calc
	*/

WHERE 1=1
	AND WC_CCB_BILL_SA_S.BILL_ID = WC_CCB_BILL_S.INTEGRATION_ID (+)
	AND WC_CCB_BILL_SA_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID (+)
	AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
	AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
;


CREATE OR REPLACE VIEW WC_CCB_DIVISION_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CIS_DIVISION,
WORK_CALENDAR_CODE,
CIS_DIVISION_VERSION,
CIS_DIVISION_LANGUAGE,
CIS_DIVISION_DESCRIPTION,
CIS_DIVISION_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CIS_DIVISION,
WORK_CALENDAR_CODE,
CIS_DIVISION_VERSION,
CIS_DIVISION_LANGUAGE,
CIS_DIVISION_DESCRIPTION,
CIS_DIVISION_L_VERSION
FROM
	WC_CCB_CIS_DIVISION_S
;


CREATE OR REPLACE VIEW WC_CCB_CURRENCY_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CURRENCY_CODE,
CURRENCY_SYMBOL,
CURRENCY_VERSION,
DECIMAL_POSITIONS,
SCALE_POSITIONS,
CURRENCY_SYMBOL_POSITION_FLAG,
CURRENCY_LANGUAGE,
CURRENCY_DESCRIPTION,
CURRENCY_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CURRENCY_CODE,
CURRENCY_SYMBOL,
CURRENCY_VERSION,
DECIMAL_POSITIONS,
SCALE_POSITIONS,
CURRENCY_SYMBOL_POSITION_FLAG,
CURRENCY_LANGUAGE,
CURRENCY_DESCRIPTION,
CURRENCY_L_VERSION
FROM
	WC_CCB_CURRENCY_CD_S
;

/*  20130829 bn - this should not be a fact table...
CREATE OR REPLACE VIEW WC_CCB_SA_TYPE_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_UPDATE_DT,
W_INSERT_DT,
W_LOAD_NUMBER,
CIS_DIVISION,
SA_TYPE_CODE,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
ALLOW_ESTIMATES_SW,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID
)
AS
SELECT
SA_TYPE_CODE || '::' || CIS_DIVISION,
3000,
SYSDATE,
SYSDATE,
0,
CIS_DIVISION,
SA_TYPE_CODE,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
ALLOW_ESTIMATES_SW,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID
FROM
    WC_CCB_SA_TYPE_S
;
*/

CREATE OR REPLACE VIEW WC_CCB_GL_DIVISION_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CURRENCY_CODE,
GL_DIVISION,
CALENDAR_ID,
GL_DIVISION_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
GL_DIVISION_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CURRENCY_CODE,
GL_DIVISION,
CALENDAR_ID,
GL_DIVISION_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
GL_DIVISION_L_VERSION
FROM
	WC_CCB_GL_DIVISION_S
;


CREATE OR REPLACE VIEW WC_CCB_DEPOSIT_CLASS_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DEPOSIT_CLASS_CODE,
GOOD_CUSTOMER_ALG_CODE,
RECOMMENDATION_ALG_CODE,
REFUND_METHOD_ALG_CODE,
REFUND_CREITERIA_ALG_CODE,
INTEREST_REFUND_ALG_CODE,
REVIEW_TOLERANCE_PERCENTAGE,
DEPOSIT_CLASS_VERSION,
MONTHS_BETWEEN_INTEREST_REFUND,
REVIEW_METHOD_ALG_CODE,
LANGUAGE_CODE,
DESCRIPTION,
REFUND_DESCRIPTION_ON_BILL,
DEPOSIT_CLASS_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DEPOSIT_CLASS_CODE,
GOOD_CUSTOMER_ALG_CODE,
RECOMMENDATION_ALG_CODE,
REFUND_METHOD_ALG_CODE,
REFUND_CREITERIA_ALG_CODE,
INTEREST_REFUND_ALG_CODE,
REVIEW_TOLERANCE_PERCENTAGE,
DEPOSIT_CLASS_VERSION,
MONTHS_BETWEEN_INTEREST_REFUND,
REVIEW_METHOD_ALG_CODE,
LANGUAGE_CODE,
DESCRIPTION,
REFUND_DESCRIPTION_ON_BILL,
DEPOSIT_CLASS_L_VERSION
FROM
	WC_CCB_DEP_CL_S
;


CREATE OR REPLACE VIEW WC_CCB_REVENUE_CLASS_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
REVENUE_CLASS_VERSION,
REVENUE_CLASS_CODE,
LANGUAGE_CODE,
DESCRIPTION,
REVENUE_CLASS_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
REVENUE_CLASS_VERSION,
REVENUE_CLASS_CODE,
LANGUAGE_CODE,
DESCRIPTION,
REVENUE_CLASS_L_VERSION
FROM
	WC_CCB_REV_CL_S
;


CREATE OR REPLACE VIEW WC_CCB_ADJUSTMENT_TYPE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ADJUSTMENT_TYPE_CODE,
AP_REQUEST_TYPE_CODE,
DISTRIBUTION_CODE,
CURRENCY_CODE,
SYNC_CURRENT_AMOUNT_SW,
DEFAULT_AMOUNT,
AP_1099_FLAG,
ADJUSTMENT_TYPE_VERSION,
PRINT_BY_DEFAULT_SW,
ADJUSTMENT_FREEZE_OPTION_FLAG,
ADJUSTMENT_AMOUNT_TYPE_FLAG,
APPROVAL_PROFILE_CODE,
LANGUAGE_CODE,
DESCRIPTION,
DESCRIPTION_ON_BILL,
ADJUSTMENT_TYPE_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ADJUSTMENT_TYPE_CODE,
AP_REQUEST_TYPE_CODE,
DISTRIBUTION_CODE,
CURRENCY_CODE,
SYNC_CURRENT_AMOUNT_SW,
DEFAULT_AMOUNT,
AP_1099_FLAG,
ADJUSTMENT_TYPE_VERSION,
PRINT_BY_DEFAULT_SW,
ADJUSTMENT_FREEZE_OPTION_FLAG,
ADJUSTMENT_AMOUNT_TYPE_FLAG,
APPROVAL_PROFILE_CODE,
LANGUAGE_CODE,
DESCRIPTION,
DESCRIPTION_ON_BILL,
ADJUSTMENT_TYPE_L_VERSION
FROM
	WC_CCB_ADJ_TYPE_S
;


CREATE OR REPLACE VIEW WC_CCB_ADJUSTMENT_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ADJUSTMENT_ID,
SA_ID,
ADJUSTMENT_TYPE_CODE,
ADJUSTMENT_STATUS_FLAG,
CREATION_DATE,
CANCEL_REASON_CODE,
CURRENT_AMOUNT,
TRANSFER_ADJUSTMENT_ID,
CURRENCY_CODE,
COMMENTS,
ADJUSTMENT_VERSION,
ON_BEHALF_SA_ID,
BASE_AMOUNT,
CALCULATION_DATE,
APPROVAL_REQUEST_ID,
ADJUSTMENT_TYPE_CID,
ADJUST_CANCEL_REASON_CID,
CURRENCY_CID,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
ACCOUNT_CID,
PREMISE_CID
)
AS
SELECT
WC_CCB_ADJ_S.INTEGRATION_ID,
WC_CCB_ADJ_S.DATASOURCE_NUM_ID,
WC_CCB_ADJ_S.W_INSERT_DT,
WC_CCB_ADJ_S.W_UPDATE_DT,
WC_CCB_ADJ_S.W_LOAD_NUMBER,
WC_CCB_ADJ_S.ADJUSTMENT_ID,
WC_CCB_ADJ_S.SA_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CODE,
WC_CCB_ADJ_S.ADJUSTMENT_STATUS_FLAG,
WC_CCB_ADJ_S.CREATION_DATE,
WC_CCB_ADJ_S.CANCEL_REASON_CODE,
WC_CCB_ADJ_S.CURRENT_AMOUNT,
WC_CCB_ADJ_S.TRANSFER_ADJUSTMENT_ID,
WC_CCB_ADJ_S.CURRENCY_CODE,
WC_CCB_ADJ_S.COMMENTS,
WC_CCB_ADJ_S.ADJUSTMENT_VERSION,
WC_CCB_ADJ_S.ON_BEHALF_SA_ID,
WC_CCB_ADJ_S.BASE_AMOUNT,
WC_CCB_ADJ_S.CALCULATION_DATE,
WC_CCB_ADJ_S.APPROVAL_REQUEST_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CID,
WC_CCB_ADJ_S.ADJUST_CANCEL_REASON_CID,
WC_CCB_ADJ_S.CURRENCY_CID,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID
FROM
    WC_CCB_ADJ_S,
    WC_CCB_SA_S
WHERE
    WC_CCB_ADJ_S.SA_ID = WC_CCB_SA_S.SA_ID
;


CREATE OR REPLACE VIEW WC_CCB_ADJUST_CANCEL_RSN_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_VERSION,
CANCEL_REASON_CODE,
LANGUAGE_CODE,
DESCRIPTION,
CANCEL_REASON_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_VERSION,
CANCEL_REASON_CODE,
LANGUAGE_CODE,
DESCRIPTION,
CANCEL_REASON_L_VERSION
FROM
	WC_CCB_ADJ_CAN_RSN_S
;


--20130903 BN - Added rate class code and description for account rebate eligibility report.
--20140429 BN - New columns for Broken Payment Arrangement report. (BROKEN_PA_DATE and DOWNPAYMENT_AMOUNT)
CREATE OR REPLACE VIEW WC_CCB_SA_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CIS_DIVISION,
SA_TYPE_CODE,
SA_ID,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
ACCOUNT_CID,
PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
RATE_CLASS_CODE,  --20130903 BN - for account rebate eligibility report
RATE_CLASS_DESCRIPTION,  --20130903 BN - for account rebate eligibility report
BROKEN_PA_DATE,					--20140429 BN - For Broken Payment Arrangement report
DOWNPAYMENT_AMOUNT		--20140429 BN - For Broken Payment Arrangement report
)
AS
SELECT
WC_CCB_SA_S.INTEGRATION_ID,
WC_CCB_SA_S.DATASOURCE_NUM_ID,
WC_CCB_SA_S.W_INSERT_DT,
WC_CCB_SA_S.W_UPDATE_DT,
WC_CCB_SA_S.W_LOAD_NUMBER,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.SA_ID,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE RATE_CLASS_CODE,  --20130903 BN - for account rebate eligibility report
WC_CCB_CHAR_VAL_L_S.DESCRIPTION RATE_CLASS_DESCRIPTION,  --20130903 BN - for account rebate eligibility report
CASE WHEN BROKEN_PA.CHARACTERISTIC_VALUE = 'YES' THEN broken_pa.effective_date ELSE NULL END BROKEN_PA_DATE,					--20140429 BN - For Broken Payment Arrangement report
dwnpay.adhoc_characteristic_value DOWNPAYMENT_AMOUNT		--20140429 BN - For Broken Payment Arrangement report
FROM
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
	(SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S,  --20130903 BN - for account rebate eligibility report
	(select * from wc_ccb_char_val_l_s where CHARACTERISTIC_TYPE_CODE = 'RATECLS') wc_ccb_char_val_l_s, --20130903 BN - for account rebate eligibility report
	(SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'BROKENPA')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'BROKENPA') broken_pa,		--20140429 BN - For Broken Payment Arrangement report
	(SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'DWNPAY')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'DWNPAY') dwnpay			--20140429 BN - For Broken Payment Arrangement report
WHERE 1=1
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+)  --20130903 BN - for account rebate eligibility report
	AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE = wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE (+) --20130903 BN - for account rebate eligibility report
	AND WC_CCB_SA_S.INTEGRATION_ID = broken_pa.SA_ID (+)  	--20140429 BN - For Broken Payment Arrangement report
	AND WC_CCB_SA_S.INTEGRATION_ID = dwnpay.SA_ID (+)  		--20140429 BN - For Broken Payment Arrangement report
;


CREATE OR REPLACE VIEW WC_CCB_BILL_SEGMENT_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_SEGMENT_ID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
CANCEL_REASON_CODE,
CANCEL_BILL_SEGMENT_ID,
SA_ID,
BILL_ID,
START_DATE,
END_DATE,
ESTIMATE_DW,
CLOSING_BILL_SEGMENT_SW,
SQ_OVERRIDE_SW,
ITEM_OVERRIDE_SW,
PREMISE_ID,
BILL_SEGMENT_STATUS_FLAG,
CREATION_DATE,
STATUS_CHANGE_DATE,
REBILL_SEGMENT_ID,
BILL_SEGMENT_VERSION,
MASTER_BILL_SEGMENT_ID,
QUOTE_DETAIL_ID,
BILL_SCENARIO_ID,
MDM_START_DATE,
MDM_END_DATE,
BILL_CYCLE_SCHEDULE_CID,
BILL_CANCEL_REASON_CID,
BSEG_PREMISE_CID,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_CID,
BILL_ACCOUNT_CID,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
SA_STATUS_FLAG,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID
)
AS
SELECT
WC_CCB_BSEG_S.INTEGRATION_ID,
WC_CCB_BSEG_S.DATASOURCE_NUM_ID,
WC_CCB_BSEG_S.W_INSERT_DT,
WC_CCB_BSEG_S.W_UPDATE_DT,
WC_CCB_BSEG_S.W_LOAD_NUMBER,
WC_CCB_BSEG_S.BILL_SEGMENT_ID,
WC_CCB_BSEG_S.BILL_CYCLE_CODE,
WC_CCB_BSEG_S.WINDOW_START_DATE,
WC_CCB_BSEG_S.CANCEL_REASON_CODE,
WC_CCB_BSEG_S.CANCEL_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.SA_ID,
WC_CCB_BSEG_S.BILL_ID,
WC_CCB_BSEG_S.START_DATE,
WC_CCB_BSEG_S.END_DATE,
WC_CCB_BSEG_S.ESTIMATE_DW,
WC_CCB_BSEG_S.CLOSING_BILL_SEGMENT_SW,
WC_CCB_BSEG_S.SQ_OVERRIDE_SW,
WC_CCB_BSEG_S.ITEM_OVERRIDE_SW,
WC_CCB_BSEG_S.PREMISE_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_STATUS_FLAG,
WC_CCB_BSEG_S.CREATION_DATE,
WC_CCB_BSEG_S.STATUS_CHANGE_DATE,
WC_CCB_BSEG_S.REBILL_SEGMENT_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_VERSION,
WC_CCB_BSEG_S.MASTER_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.QUOTE_DETAIL_ID,
WC_CCB_BSEG_S.BILL_SCENARIO_ID,
WC_CCB_BSEG_S.MDM_START_DATE,
WC_CCB_BSEG_S.MDM_END_DATE,
WC_CCB_BSEG_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_BSEG_S.BILL_CANCEL_REASON_CID,
WC_CCB_BSEG_S.BSEG_PREMISE_CID,
WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.CREATE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.BILL_VERSION,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_BILL_S.ACCOUNT_CID,        --BILL_ACCOUNT_CID
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID
FROM
    WC_CCB_BSEG_S,
    WC_CCB_BILL_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S
WHERE 1=1
    AND WC_CCB_BSEG_S.BILL_ID = WC_CCB_BILL_S.BILL_ID (+)
    AND WC_CCB_BSEG_S.SA_ID = WC_CCB_SA_S.SA_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
;


CREATE OR REPLACE VIEW WC_CCB_BILL_CANCEL_REASON_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_CODE,
SYSTEM_DEFAULT_FLAG,
BILL_CANCEL_REASON_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
BILL_CANCEL_REASON_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_CODE,
SYSTEM_DEFAULT_FLAG,
BILL_CANCEL_REASON_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
BILL_CANCEL_REASON_L_VERSION
FROM
	WC_CCB_BILL_CAN_RSN_S
;


CREATE OR REPLACE VIEW WC_CCB_BILL_SEG_MSG_BRIDGE_BV
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_SEGMENT_ID,
MESSAGE_CODE,
BILL_SEGMENT_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_SEGMENT_ID,
MESSAGE_CODE,
BILL_SEGMENT_VERSION
FROM
	WC_CCB_BSEG_MSG_S
;


CREATE OR REPLACE VIEW WC_CCB_BILL_ROUTE_TYPE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BATCH_CONTROL_CODE,
BILL_ROUTE_TYPE_CODE,
BILL_ROUTING_METHOD_FLAG,
BILL_ROUTE_TYPE_VERSION,
EXTRACT_ALG_CODE,
LANGUAGE_CODE,
DESCRIPTION,
BILL_ROUTE_TYPE_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BATCH_CONTROL_CODE,
BILL_ROUTE_TYPE_CODE,
BILL_ROUTING_METHOD_FLAG,
BILL_ROUTE_TYPE_VERSION,
EXTRACT_ALG_CODE,
LANGUAGE_CODE,
DESCRIPTION,
BILL_ROUTE_TYPE_L_VERSION
FROM
	WC_CCB_BILL_RT_TYPE_S
;

--20130722 bn - Adding Town Code, Rate Class columns
--Adding logic to bring in the CSR who created the FT
--20130919 BN - adding adjustment_person_name for adjustment types report
--20130920 bn - added recurring charge amount
--20130927 BN - Added sa_account_id for finaled inactive report
CREATE OR REPLACE VIEW WC_CCB_FT_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FT_ID,
SIBLING_ID,
SA_ID,
PARENT_ID,
GL_DIVISION,
CIS_DIVISION,
CURRENCY_CODE,
FT_TYPE_FLAG,
CURRENT_AMOUNT,
PAYOFF_AMOUNT,
CREATE_DATE,
FROZEN_POSTED_TO_ACCOUNT_SW,
FROZEN_BY,
FREEZE_DATE,
ARREARS_DATE,
CORRECTION_DW,
REDUNDANT_DW,
NEW_CHARGE_SW,
SHOW_ON_BILL_SW,
NOT_IN_ARREARS_SW,
BILL_ID,
ACCOUNTING_DATE,
FT_VERSION,
TRANSFERRED_OUT_SW,
POST_TO_GL_ON_OR_AFTER_DATE,
GL_DISTRIBUTION_STATUS,
SCHEDULED_DISTRIBUTION_DATE,
BALANCE_CONTROL_GROUP_ID,
MATCH_EVENT_ID,
GL_DIVISION_CID,
DIVISION_CID,
CURRENCY_CID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
BILL_CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_CID,
BILL_ACCOUNT_CID,
BILL_CYCLE_SCHEDULE_CID,
ADJUSTMENT_ID,
ADJUSTMENT_TYPE_CODE,
ADJUSTMENT_STATUS_FLAG,
CREATION_DATE,
CANCEL_REASON_CODE,
ADJ_CURRENT_AMOUNT,
TRANSFER_ADJUSTMENT_ID,
ADJ_CURRENCY_CODE,
COMMENTS,
ADJUSTMENT_VERSION,
ON_BEHALF_SA_ID,
BASE_AMOUNT,
CALCULATION_DATE,
APPROVAL_REQUEST_ID,
ADJUSTMENT_TYPE_CID,
ADJUST_CANCEL_REASON_CID,
ADJ_CURRENCY_CID,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
   TOWN_CODE, --20130722 bn
   TOWN_CODE_DESCRIPTION, --20130722 bn
   RATE_CLASS, --20130722 bn
   RATE_CLASS_DESCRIPTION, --20130722 bn
   ADJUSTMENT_PERSON_NAME, --20130919 BN
   SC_USER_CID, --20130919 bn
   RECURRING_CHARGE_AMOUNT, --20130920 BN - For Budget and AR Balances Report
   SA_ACCOUNT_ID --20130927 BN - For finaled inactive report
)
AS
SELECT
WC_CCB_FT_S.INTEGRATION_ID,
WC_CCB_FT_S.DATASOURCE_NUM_ID,
WC_CCB_FT_S.W_INSERT_DT,
WC_CCB_FT_S.W_UPDATE_DT,
WC_CCB_FT_S.W_LOAD_NUMBER,
WC_CCB_FT_S.FT_ID,
WC_CCB_FT_S.SIBLING_ID,
WC_CCB_FT_S.SA_ID,
WC_CCB_FT_S.PARENT_ID,
WC_CCB_FT_S.GL_DIVISION,
WC_CCB_FT_S.CIS_DIVISION,
WC_CCB_FT_S.CURRENCY_CODE,
WC_CCB_FT_S.FT_TYPE_FLAG,
WC_CCB_FT_S.CURRENT_AMOUNT,
WC_CCB_FT_S.PAYOFF_AMOUNT,
WC_CCB_FT_S.CREATE_DATE,
WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW,
WC_CCB_FT_S.FROZEN_BY,
WC_CCB_FT_S.FREEZE_DATE,
WC_CCB_FT_S.ARREARS_DATE,
WC_CCB_FT_S.CORRECTION_DW,
WC_CCB_FT_S.REDUNDANT_DW,
WC_CCB_FT_S.NEW_CHARGE_SW,
WC_CCB_FT_S.SHOW_ON_BILL_SW,
WC_CCB_FT_S.NOT_IN_ARREARS_SW,
WC_CCB_FT_S.BILL_ID,
WC_CCB_FT_S.ACCOUNTING_DATE,
WC_CCB_FT_S.FT_VERSION,
WC_CCB_FT_S.TRANSFERRED_OUT_SW,
WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE,
WC_CCB_FT_S.GL_DISTRIBUTION_STATUS,
WC_CCB_FT_S.SCHEDULED_DISTRIBUTION_DATE,
WC_CCB_FT_S.BALANCE_CONTROL_GROUP_ID,
WC_CCB_FT_S.MATCH_EVENT_ID,
WC_CCB_FT_S.GL_DIVISION_CID,
WC_CCB_FT_S.DIVISION_CID,
WC_CCB_FT_S.CURRENCY_CID,
WC_CCB_BILL_S.BILL_CYCLE_CODE,
WC_CCB_BILL_S.WINDOW_START_DATE,
WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.CREATE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.BILL_VERSION,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_BILL_S.ACCOUNT_CID,
WC_CCB_BILL_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_ADJ_S.ADJUSTMENT_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CODE,
WC_CCB_ADJ_S.ADJUSTMENT_STATUS_FLAG,
WC_CCB_ADJ_S.CREATION_DATE,
WC_CCB_ADJ_S.CANCEL_REASON_CODE,
WC_CCB_ADJ_S.CURRENT_AMOUNT,
WC_CCB_ADJ_S.TRANSFER_ADJUSTMENT_ID,
WC_CCB_ADJ_S.CURRENCY_CODE,
WC_CCB_ADJ_S.COMMENTS,
WC_CCB_ADJ_S.ADJUSTMENT_VERSION,
WC_CCB_ADJ_S.ON_BEHALF_SA_ID,
WC_CCB_ADJ_S.BASE_AMOUNT,
WC_CCB_ADJ_S.CALCULATION_DATE,
WC_CCB_ADJ_S.APPROVAL_REQUEST_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CID,
WC_CCB_ADJ_S.ADJUST_CANCEL_REASON_CID,
WC_CCB_ADJ_S.CURRENCY_CID,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
   WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE TOWN_CODE, --20130722 bn
   PREM_CHAR_VAL.DESCRIPTION TOWN_CODE_DESCRIPTION, --20130722 bn
   WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE RATE_CLASS, --20130722 bn
   wc_ccb_char_val_l_s.DESCRIPTION RATE_CLASS_DESCRIPTION, --20130722 bn
   ADJ_AP_REQ_NAME.ENTITY_NAME, --20130919 BN - for adjustment types report
   WC_CCB_FT_S.FROZEN_BY SC_USER_CID, --20130919 BN - for adjustment types report (who created the FT)
    (
        SELECT  RECURRING_CHARGE_AMOUNT FROM WC_CCB_SA_RCHG_HIST_S, WC_CCB_FT_S FT
        WHERE 1=1
            AND WC_CCB_SA_RCHG_HIST_S.EFFECTIVE_DATE IN
                (SELECT MAX ( TMP.EFFECTIVE_DATE )
                  FROM WC_CCB_SA_RCHG_HIST_S TMP
                  WHERE  1=1
                    AND TMP.SA_ID = WC_CCB_SA_RCHG_HIST_S.SA_ID
                  AND TMP.EFFECTIVE_DATE <= FT.FREEZE_DATE)
                AND FT.SA_ID = WC_CCB_SA_RCHG_HIST_S.SA_ID
                AND FT.integration_id = wc_ccb_ft_s.integration_id)       RECURRING_CHAR_AMOUNT, --20130920 BN - For Budget and AR Balances Report
WC_CCB_SA_S.ACCOUNT_ID  --20130927 BN - For finaled inactive report
FROM
    WC_CCB_FT_S,
    WC_CCB_BILL_S,
    WC_CCB_ADJ_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
    (SELECT * FROM WC_CCB_SA_CHAR_S
           WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
            AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS'
          ) WC_CCB_SA_CHAR_S,  --20130722 BN
    wc_ccb_char_val_l_s, --20130722 BN
        (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD')
            AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
          ) WC_CCB_PREM_CHAR_S,  --20130722 BN
    WC_CCB_CHAR_VAL_L_S PREM_CHAR_VAL,  --20130722 BN
    (SELECT ADJ_ID ADJUSTMENT_ID, MAX(ENTITY_NAME) ENTITY_NAME FROM WC_CCB_ADJ_APREQ_S GROUP BY ADJ_ID) ADJ_AP_REQ_NAME  --20130919 bn

WHERE 1=1
    AND WC_CCB_FT_S.BILL_ID = WC_CCB_BILL_S.INTEGRATION_ID (+)
    AND CASE WHEN WC_CCB_FT_S.FT_TYPE_FLAG IN ('AD','AX') THEN WC_CCB_FT_S.SIBLING_ID ELSE NULL END
        = WC_CCB_ADJ_S.INTEGRATION_ID (+)
    AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+)
    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE = wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE (+)
    AND wc_ccb_char_val_l_s.CHARACTERISTIC_TYPE_CODE (+) = 'RATECLS'
    AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)
    AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE = PREM_CHAR_VAL.CHARACTERISTIC_VALUE (+)
    AND PREM_CHAR_VAL.CHARACTERISTIC_TYPE_CODE (+) = 'TWNCD'
    and WC_CCB_ADJ_S.INTEGRATION_ID = ADJ_AP_REQ_NAME.ADJUSTMENT_ID (+) --20130919 bn
    --AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_RCHG_HIST_S.SA_ID (+) --20130920 BN
;


CREATE OR REPLACE VIEW WC_CCB_FT_GL_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FT_ID,
GL_SEQUENCE_NUMBER,
DISTRIBUTION_CODE,
CHARACTERISTIC_TYPE_CODE,
AMOUNT,
CHARACTERISTIC_VALUE,
TOTAL_AMOUNT_SW,
FT_GL_VERSION,
STATISTIC_AMOUNT,
GL_ACCOUNT,
SIBLING_ID,
SA_ID,
PARENT_ID,
GL_DIVISION,
CIS_DIVISION,
CURRENCY_CODE,
FT_TYPE_FLAG,
CURRENT_AMOUNT,
PAYOFF_AMOUNT,
CREATE_DATE,
FROZEN_POSTED_TO_ACCOUNT_SW,
FROZEN_BY,
FREEZE_DATE,
ARREARS_DATE,
CORRECTION_DW,
REDUNDANT_DW,
NEW_CHARGE_SW,
SHOW_ON_BILL_SW,
NOT_IN_ARREARS_SW,
BILL_ID,
ACCOUNTING_DATE,
FT_VERSION,
TRANSFERRED_OUT_SW,
POST_TO_GL_ON_OR_AFTER_DATE,
GL_DISTRIBUTION_STATUS,
SCHEDULED_DISTRIBUTION_DATE,
BALANCE_CONTROL_GROUP_ID,
MATCH_EVENT_ID,
GL_DIVISION_CID,
DIVISION_CID,
CURRENCY_CID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_CID,
BILL_ACCOUNT_CID,
BILL_CYCLE_SCHEDULE_CID,
ADJUSTMENT_ID,
ADJUSTMENT_TYPE_CODE,
ADJUSTMENT_STATUS_FLAG,
CREATION_DATE,
CANCEL_REASON_CODE,
ADJ_CURRENT_AMOUNT,
TRANSFER_ADJUSTMENT_ID,
ADJ_CURRENCY_CODE,
COMMENTS,
ADJUSTMENT_VERSION,
ON_BEHALF_SA_ID,
BASE_AMOUNT,
CALCULATION_DATE,
APPROVAL_REQUEST_ID,
ADJUSTMENT_TYPE_CID,
ADJUST_CANCEL_REASON_CID,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
SERVICE_POINTS_REQUIRED_SW,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
SEQUENCE_NUMBER,
BATCH_CODE,
BATCH_NUMBER,
SERVICE_PROVIDER_CODE,
FT_PROC_VERSION,
GL_ACCOUNT_TYPE,  --20130702 BN - for gl accounting summary report
RATE_CLASS, --20130909 bn - For ISRS Report
RATE_CLASS_DESCRIPTION, --20130909 bn - For ISRS Report
REVENUE_BILL_DETERMINANT_VAL --20130909 bn - For ISRS Report
)
AS
SELECT  /*+ first_rows */
WC_CCB_FT_GL_S.INTEGRATION_ID,
WC_CCB_FT_GL_S.DATASOURCE_NUM_ID,
WC_CCB_FT_GL_S.W_INSERT_DT,
WC_CCB_FT_GL_S.W_UPDATE_DT,
WC_CCB_FT_GL_S.W_LOAD_NUMBER,
WC_CCB_FT_GL_S.FT_ID,
WC_CCB_FT_GL_S.GL_SEQUENCE_NUMBER,
WC_CCB_FT_GL_S.DISTRIBUTION_CODE,
WC_CCB_FT_GL_S.CHARACTERISTIC_TYPE_CODE,
WC_CCB_FT_GL_S.AMOUNT,
WC_CCB_FT_GL_S.CHARACTERISTIC_VALUE,
WC_CCB_FT_GL_S.TOTAL_AMOUNT_SW,
WC_CCB_FT_GL_S.FT_GL_VERSION,
WC_CCB_FT_GL_S.STATISTIC_AMOUNT,
WC_CCB_FT_GL_S.GL_ACCOUNT,
WC_CCB_FT_S.SIBLING_ID,
WC_CCB_FT_S.SA_ID,
WC_CCB_FT_S.PARENT_ID,
WC_CCB_FT_S.GL_DIVISION,
WC_CCB_FT_S.CIS_DIVISION,
WC_CCB_FT_S.CURRENCY_CODE,
WC_CCB_FT_S.FT_TYPE_FLAG,
WC_CCB_FT_S.CURRENT_AMOUNT,
WC_CCB_FT_S.PAYOFF_AMOUNT,
WC_CCB_FT_S.CREATE_DATE,
WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW,
WC_CCB_FT_S.FROZEN_BY,
WC_CCB_FT_S.FREEZE_DATE,
WC_CCB_FT_S.ARREARS_DATE,
WC_CCB_FT_S.CORRECTION_DW,
WC_CCB_FT_S.REDUNDANT_DW,
WC_CCB_FT_S.NEW_CHARGE_SW,
WC_CCB_FT_S.SHOW_ON_BILL_SW,
WC_CCB_FT_S.NOT_IN_ARREARS_SW,
WC_CCB_FT_S.BILL_ID,
WC_CCB_FT_S.ACCOUNTING_DATE,
WC_CCB_FT_S.FT_VERSION,
WC_CCB_FT_S.TRANSFERRED_OUT_SW,
WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE,
WC_CCB_FT_S.GL_DISTRIBUTION_STATUS,
WC_CCB_FT_S.SCHEDULED_DISTRIBUTION_DATE,
WC_CCB_FT_S.BALANCE_CONTROL_GROUP_ID,
WC_CCB_FT_S.MATCH_EVENT_ID,
WC_CCB_FT_S.GL_DIVISION_CID,
WC_CCB_FT_S.DIVISION_CID,
WC_CCB_FT_S.CURRENCY_CID,
WC_CCB_BILL_S.BILL_CYCLE_CODE,
WC_CCB_BILL_S.WINDOW_START_DATE,
WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.BILL_VERSION,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_BILL_S.ACCOUNT_CID,
WC_CCB_BILL_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_ADJ_S.ADJUSTMENT_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CODE,
WC_CCB_ADJ_S.ADJUSTMENT_STATUS_FLAG,
WC_CCB_ADJ_S.CREATION_DATE,
WC_CCB_ADJ_S.CANCEL_REASON_CODE,
WC_CCB_ADJ_S.CURRENT_AMOUNT,
WC_CCB_ADJ_S.TRANSFER_ADJUSTMENT_ID,
WC_CCB_ADJ_S.CURRENCY_CODE,
WC_CCB_ADJ_S.COMMENTS,
WC_CCB_ADJ_S.ADJUSTMENT_VERSION,
WC_CCB_ADJ_S.ON_BEHALF_SA_ID,
WC_CCB_ADJ_S.BASE_AMOUNT,
WC_CCB_ADJ_S.CALCULATION_DATE,
WC_CCB_ADJ_S.APPROVAL_REQUEST_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CID,
WC_CCB_ADJ_S.ADJUST_CANCEL_REASON_CID,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_FT_PROC_S.SEQUENCE_NUMBER,
WC_CCB_FT_PROC_S.BATCH_CODE,
WC_CCB_FT_PROC_S.BATCH_NUMBER,
WC_CCB_FT_PROC_S.SERVICE_PROVIDER_CODE,
WC_CCB_FT_PROC_S.FT_PROC_VERSION,
WC_CCB_CHAR_VAL_L_S.DESCRIPTION, --20130702 BN - for gl accounting summary report
   WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE RATE_CLASS, --20130909 bn - For ISRS Report
   sa_rateclass_char_val_l.DESCRIPTION RATE_CLASS_DESCRIPTION, --20130909 bn - For ISRS Report
   WC_CCB_DST_CD_CHAR_S_revbillde.characteristic_value REVENUE_BILL_DETERMINANT_VAL --20130909 bn - For ISRS Report
FROM
    WC_CCB_FT_GL_S,
    WC_CCB_FT_S,
    WC_CCB_BILL_S,
    WC_CCB_ADJ_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
    WC_CCB_FT_PROC_S,
           (SELECT * FROM WC_CCB_DST_CD_CHAR_S
           WHERE WC_CCB_DST_CD_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_DST_CD_CHAR_S TMP
                                                     WHERE TMP.DISTRIBUTION_CODE = WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'CI_GLTY')
                AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'CI_GLTY'
          ) WC_CCB_DST_CD_CHAR_S,  --20130702 BN - for gl accounting summary report
    WC_CCB_CHAR_VAL_L_S, --20130702 BN - for gl accounting summary report
		(SELECT * FROM WC_CCB_SA_CHAR_S
           WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
			AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS'
          ) WC_CCB_SA_CHAR_S,  --20130909 BN - for ISRS Finance Report
	wc_ccb_char_val_l_s sa_rateclass_char_val_l,  --20130909 BN - for ISRS Finance Report
           (SELECT * FROM WC_CCB_DST_CD_CHAR_S
           WHERE WC_CCB_DST_CD_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_DST_CD_CHAR_S TMP
                                                     WHERE TMP.DISTRIBUTION_CODE = WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'REVBLDTM')
                AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'REVBLDTM'
          ) WC_CCB_DST_CD_CHAR_S_revbillde  --20130909 bn - for ISRS report - we will use this to show only ISRS records
WHERE 1=1
    AND WC_CCB_FT_GL_S.FT_ID = WC_CCB_FT_S.INTEGRATION_ID (+)
    AND WC_CCB_FT_S.BILL_ID = WC_CCB_BILL_S.INTEGRATION_ID (+)
    --AND WC_CCB_FT_S.SIBLING_ID = WC_CCB_ADJ_S.INTEGRATION_ID (+)  --20130909 bn - logic is wrong
	AND CASE WHEN WC_CCB_FT_S.FT_TYPE_FLAG IN ('AD','AX') THEN WC_CCB_FT_S.SIBLING_ID ELSE NULL END
		= WC_CCB_ADJ_S.INTEGRATION_ID (+) --20130909 bn - new logic for adjustments
    AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
    AND WC_CCB_FT_GL_S.FT_ID = WC_CCB_FT_PROC_S.FT_ID (+)
    AND WC_CCB_FT_PROC_S.BATCH_CODE (+) = 'GLDL'
    AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE = WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE (+) --20130702 BN - for gl accounting summary report
    AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_VALUE = WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE (+) --20130702 BN - for gl accounting summary report
    AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_TYPE_CODE = WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_TYPE_CODE (+) --20130702 BN - for gl accounting summary report
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+)		--20130909 bn - For ISRS Report
	AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE = sa_rateclass_char_val_l.CHARACTERISTIC_VALUE (+)	--20130909 bn - For ISRS Report
	AND sa_rateclass_char_val_l.CHARACTERISTIC_TYPE_CODE (+) = 'RATECLS'	--20130909 bn - For ISRS Report
    AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE = WC_CCB_DST_CD_CHAR_S_revbillde.DISTRIBUTION_CODE (+) --20130909 bn - for ISRS report
;


CREATE OR REPLACE VIEW WC_CCB_PAY_EVENT_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
PAYMENT_EVENT_ID,
PAYMENT_DATE,
PAY_EVENT_VERSION,
CREATE_DATE,
DOCUMENT_NUMBER
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
PAYMENT_EVENT_ID,
TRUNC(PAYMENT_DATE),
PAY_EVENT_VERSION,
CREATE_DATE,
DOCUMENT_NUMBER
FROM
	WC_CCB_PAY_EVENT_S
;


CREATE OR REPLACE VIEW WC_CCB_PAY_CANCEL_REASON_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_CODE,
NSF_CHARGE_SW,
AFFECT_CREDIT_RATING_BY,
PAY_CAN_RSN_VERSION,
AFFECT_CASH_ONLY_SCORE_BY,
MONTHS_AFFECTING_CREDIT_RATING,
SYSTEM_DEFAULT_FLAG,
LANGUAGE_CODE,
DESCRIPTION,
PAY_CAN_RSN_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CANCEL_REASON_CODE,
NSF_CHARGE_SW,
AFFECT_CREDIT_RATING_BY,
PAY_CAN_RSN_VERSION,
AFFECT_CASH_ONLY_SCORE_BY,
MONTHS_AFFECTING_CREDIT_RATING,
SYSTEM_DEFAULT_FLAG,
LANGUAGE_CODE,
DESCRIPTION,
PAY_CAN_RSN_L_VERSION
FROM
	WC_CCB_PAY_CAN_RSN_S
;


CREATE OR REPLACE VIEW WC_CCB_TENDER_TYPE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
TENDER_TYPE_CODE,
TENDER_TYPE_VERSION,
LIKE_CASH_SW,
GENERATE_AUTO_PAY_SW,
EXTERNAL_TYPE_SW,
REQUIRE_EXTERNAL_SOURCE_ID_SW,
EXPIRATION_DATE_REQUIRED_SW,
ALLOW_CASH_BACK_SW,
BUSINESS_OBJECT_CODE,
TENDER_AUTHORIZATION_FLAG,
LANGUAGE_CODE,
DESCRIPTION,
TENDER_TYPE_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
TENDER_TYPE_CODE,
TENDER_TYPE_VERSION,
LIKE_CASH_SW,
GENERATE_AUTO_PAY_SW,
EXTERNAL_TYPE_SW,
REQUIRE_EXTERNAL_SOURCE_ID_SW,
EXPIRATION_DATE_REQUIRED_SW,
ALLOW_CASH_BACK_SW,
BUSINESS_OBJECT_CODE,
TENDER_AUTHORIZATION_FLAG,
LANGUAGE_CODE,
DESCRIPTION,
TENDER_TYPE_L_VERSION
FROM
	WC_CCB_TENDER_TYPE_S
;

--20130624 BN - Updated to include RTREMIT Char Type Value for Real-Time Payments
--20140321 bn - Update Non Real Time logic for Actual Payment Date
CREATE OR REPLACE VIEW WC_CCB_PAYMENT_TENDER_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
PAYMENT_TENDER_ID,
CURRENCY_CODE,
PAYOR_ACCOUNT_ID,
TENDER_TYPE_CODE,
PAYMENT_EVENT_ID,
TENDER_CONTROL_ID,
INCLUDED_IN_TENDER_CTL_BAL_SW,
TENDER_AMOUNT,
CHECK_NUMBER,
TENDER_STATUS_FLAG,
CANCEL_REASON_CODE,
ADJUSTMENT_ID,
CUSTOMER_ID,
MICR_ID,
NAME,
EXTERNAL_REFERENCE_ID,
PAY_TNDR_VERSION,
ALTERNATE_CURRENCY_CODE,
ALTERNAME_TENDER_AMOUNT,
CURRENCY_CID,
ACCOUNT_CID,
TENDER_TYPE_CID,
PAY_EVENT_CID,
PAY_CANCEL_REASON_CID,
--TENDER_CONTROL_ID,
TENDER_SOURCE_CODE,
TENDER_CONTROL_STATUS_FLAG,
USER_ID,
CREATE_DATE,
DEPOSIT_CONTROL_ID,
BALANCED_USER_ID,
BALANCED_DATE,
STARTING_BALANCE,
ENDING_BALANCE,
ALL_USERS_SW,
COMMENTS,
TNDR_CTL_VERSION,
ARCHIVED_TENDERS_SW,
BATCH_CONTROL_CODE,
BATCH_NUMBER,
EXTERNAL_TRANSMISSION_ID,
DEPOSIT_CONTROL_CID,
TENDER_SOURCE_TYPE_FLAG,
SA_ID,
EXTERNAL_SOURCE_ID,
BANK_ACCOUNT_KEY,
BANK_CODE,
TNDR_SRCE_VERSION,
DEFAULT_STARTING_BALANCE,
MAX_BALANCE_AMOUNT,
TNDR_SOURCE_LANGUAGE_CODE,
TENDER_SOURCE_DESCRIPTION,
TNDR_SRCE_L_VERSION,
ADJUSTMENT_TYPE_CODE,
ADJUSTMENT_STATUS_FLAG,
CREATION_DATE,
CURRENT_AMOUNT,
TRANSFER_ADJUSTMENT_ID,
ADJUSTMENT_VERSION,
ON_BEHALF_SA_ID,
BASE_AMOUNT,
CALCULATION_DATE,
APPROVAL_REQUEST_ID,
ADJUSTMENT_TYPE_CID,
ADJUST_CANCEL_REASON_CID,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
RT_EXTERNAL_TRANSMISSION_ID,
RT_CHAR_VALUE,
ACTUAL_PAYMENT_DATE --20130626 bn - for cash reconciliation report
)
AS
SELECT
WC_CCB_PAY_TNDR_S.INTEGRATION_ID,
WC_CCB_PAY_TNDR_S.DATASOURCE_NUM_ID,
WC_CCB_PAY_TNDR_S.W_INSERT_DT,
WC_CCB_PAY_TNDR_S.W_UPDATE_DT,
WC_CCB_PAY_TNDR_S.W_LOAD_NUMBER,
WC_CCB_PAY_TNDR_S.PAYMENT_TENDER_ID,
WC_CCB_PAY_TNDR_S.CURRENCY_CODE,
WC_CCB_PAY_TNDR_S.PAYOR_ACCOUNT_ID,
WC_CCB_PAY_TNDR_S.TENDER_TYPE_CODE,
WC_CCB_PAY_TNDR_S.PAYMENT_EVENT_ID,
WC_CCB_PAY_TNDR_S.TENDER_CONTROL_ID,
WC_CCB_PAY_TNDR_S.INCLUDED_IN_TENDER_CTL_BAL_SW,
WC_CCB_PAY_TNDR_S.TENDER_AMOUNT,
WC_CCB_PAY_TNDR_S.CHECK_NUMBER,
WC_CCB_PAY_TNDR_S.TENDER_STATUS_FLAG,
WC_CCB_PAY_TNDR_S.CANCEL_REASON_CODE,
WC_CCB_PAY_TNDR_S.ADJUSTMENT_ID,
WC_CCB_PAY_TNDR_S.CUSTOMER_ID,
WC_CCB_PAY_TNDR_S.MICR_ID,
WC_CCB_PAY_TNDR_S.NAME,
WC_CCB_PAY_TNDR_S.EXTERNAL_REFERENCE_ID,
WC_CCB_PAY_TNDR_S.PAY_TNDR_VERSION,
WC_CCB_PAY_TNDR_S.ALTERNATE_CURRENCY_CODE,
WC_CCB_PAY_TNDR_S.ALTERNAME_TENDER_AMOUNT,
WC_CCB_PAY_TNDR_S.CURRENCY_CID,
WC_CCB_PAY_TNDR_S.ACCOUNT_CID,
WC_CCB_PAY_TNDR_S.TENDER_TYPE_CID,
WC_CCB_PAY_TNDR_S.PAY_EVENT_CID,
WC_CCB_PAY_TNDR_S.PAY_CANCEL_REASON_CID,
--WC_CCB_TNDR_CTL_S.TENDER_CONTROL_ID,
WC_CCB_TNDR_CTL_S.TENDER_SOURCE_CODE,
WC_CCB_TNDR_CTL_S.TENDER_CONTROL_STATUS_FLAG,
WC_CCB_TNDR_CTL_S.USER_ID,
WC_CCB_TNDR_CTL_S.CREATE_DATE,
WC_CCB_TNDR_CTL_S.DEPOSIT_CONTROL_ID,
WC_CCB_TNDR_CTL_S.BALANCED_USER_ID,
WC_CCB_TNDR_CTL_S.BALANCED_DATE,
WC_CCB_TNDR_CTL_S.STARTING_BALANCE,
WC_CCB_TNDR_CTL_S.ENDING_BALANCE,
WC_CCB_TNDR_CTL_S.ALL_USERS_SW,
WC_CCB_TNDR_CTL_S.COMMENTS,
WC_CCB_TNDR_CTL_S.TNDR_CTL_VERSION,
WC_CCB_TNDR_CTL_S.ARCHIVED_TENDERS_SW,
WC_CCB_TNDR_CTL_S.BATCH_CONTROL_CODE,
WC_CCB_TNDR_CTL_S.BATCH_NUMBER,
WC_CCB_TNDR_CTL_S.EXTERNAL_TRANSMISSION_ID,
WC_CCB_TNDR_CTL_S.DEPOSIT_CONTROL_CID,
WC_CCB_TNDR_SRCE_S.TENDER_SOURCE_TYPE_FLAG,
WC_CCB_TNDR_SRCE_S.SA_ID,
WC_CCB_TNDR_SRCE_S.EXTERNAL_SOURCE_ID,
WC_CCB_TNDR_SRCE_S.BANK_ACCOUNT_KEY,
WC_CCB_TNDR_SRCE_S.BANK_CODE,
WC_CCB_TNDR_SRCE_S.TNDR_SRCE_VERSION,
WC_CCB_TNDR_SRCE_S.DEFAULT_STARTING_BALANCE,
WC_CCB_TNDR_SRCE_S.MAX_BALANCE_AMOUNT,
WC_CCB_TNDR_SRCE_S.TNDR_SOURCE_LANGUAGE_CODE,
WC_CCB_TNDR_SRCE_S.TENDER_SOURCE_DESCRIPTION,
WC_CCB_TNDR_SRCE_S.TNDR_SRCE_L_VERSION,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CODE,
WC_CCB_ADJ_S.ADJUSTMENT_STATUS_FLAG,
WC_CCB_ADJ_S.CREATION_DATE,
WC_CCB_ADJ_S.CURRENT_AMOUNT,
WC_CCB_ADJ_S.TRANSFER_ADJUSTMENT_ID,
WC_CCB_ADJ_S.ADJUSTMENT_VERSION,
WC_CCB_ADJ_S.ON_BEHALF_SA_ID,
WC_CCB_ADJ_S.BASE_AMOUNT,
WC_CCB_ADJ_S.CALCULATION_DATE,
WC_CCB_ADJ_S.APPROVAL_REQUEST_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CID,
WC_CCB_ADJ_S.ADJUST_CANCEL_REASON_CID,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_PAY_TNDR_CHAR_S.ADHOC_CHARACTERISTIC_VALUE RT_EXTERNAL_TRANSMISSION_ID,
WC_CCB_PAY_TNDR_CHAR_S.CHARACTERISTIC_VALUE RT_CHAR_VALUE,
--20130626 bn - for cash reconciliation report
CASE WHEN WC_CCB_PAY_TNDR_CHAR_S.ADHOC_CHARACTERISTIC_VALUE IS NOT NULL AND WC_CCB_TNDR_CTL_S.BALANCED_USER_ID = 'SYSUSER'  --Realtime
		THEN TO_DATE(SUBSTR(SUBSTR(wc_ccb_pay_tndr_char_s.ADHOC_CHARACTERISTIC_VALUE,1,15),1,8),'MM/DD/YYYY')
	 WHEN WC_CCB_TNDR_CTL_S.EXTERNAL_TRANSMISSION_ID IS NOT NULL AND WC_CCB_TNDR_CTL_S.BALANCED_USER_ID = 'SYSUSER' --non real time
		THEN
			TRUNC(WC_CCB_DEP_CTL_S.BALANCED_DATE) --20140321 BN - USE Deposit Control Dimension's Balanced Date whenever Actual Payment Date is null.
	--TO_DATE(SUBSTR(EXTERNAL_TRANSMISSION_ID,1,8),'MM/DD/YYYY')
	--20140321 bn - per email on 1/24/14 - 		CASE WHEN SUBSTR(EXTERNAL_TRANSMISSION_ID, 1, 3) = '201'  --20131222 bn - changed from 2013 to 201
	--20140321 bn - per email on 1/24/14 - 			THEN TO_DATE(SUBSTR(EXTERNAL_TRANSMISSION_ID, 1, 10), 'YYYY-MM-DD')  --20130905 BN -Production issue with formatting of external transmission id
	--20140321 bn - per email on 1/24/14 - 			 ELSE TO_DATE(SUBSTR(EXTERNAL_TRANSMISSION_ID,1,8),'MM/DD/YYYY')
	--20140321 bn - per email on 1/24/14 - 		END
	 WHEN (WC_CCB_TNDR_CTL_S.BALANCED_USER_ID <> 'SYSUSER' OR WC_CCB_TNDR_CTL_S.BALANCED_USER_ID IS NULL) AND WC_CCB_TNDR_CTL_S.EXTERNAL_TRANSMISSION_ID IS NULL --online
		THEN WC_CCB_PAY_EVENT_S.PAYMENT_DATE
	 ELSE NULL
END ACTUAL_PAYMENT_DATE  --Payment date for Real Time, Non-Real Time and Online
FROM
    WC_CCB_PAY_TNDR_S,
    WC_CCB_TNDR_CTL_S,
    WC_CCB_TNDR_SRCE_S,
    WC_CCB_ADJ_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
    (select *
        from wc_ccb_pay_tndr_char_s
        where CHARACTERISTIC_TYPE_CODE = 'RTREMIT'
            AND SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM WC_CCB_PAY_TNDR_CHAR_S TMP
                                    WHERE TMP.PAY_TENDER_ID = WC_CCB_PAY_TNDR_CHAR_S.PAY_TENDER_ID
                                    AND TMP.CHARACTERISTIC_TYPE_CODE = 'RTREMIT')
    ) WC_CCB_PAY_TNDR_CHAR_S,            --20130624 BN - Adding for Payments Received and Posted Report
	WC_CCB_PAY_EVENT_S, --20130626 BN - for cash reconciliation report
	WC_CCB_DEP_CTL_S	--20140321 BN - fixing prod issue
WHERE 1=1
    AND WC_CCB_PAY_TNDR_S.TENDER_CONTROL_ID = WC_CCB_TNDR_CTL_S.TENDER_CONTROL_ID (+)
    AND WC_CCB_TNDR_CTL_S.TENDER_SOURCE_CODE = WC_CCB_TNDR_SRCE_S.TENDER_SOURCE_CODE (+)
	AND WC_CCB_TNDR_CTL_S.DEPOSIT_CONTROL_ID = WC_CCB_DEP_CTL_S.INTEGRATION_ID (+)  --20140321 BN - fixing prod iss
    AND WC_CCB_PAY_TNDR_S.ADJUSTMENT_ID = WC_CCB_ADJ_S.ADJUSTMENT_ID (+)
    AND WC_CCB_ADJ_S.SA_ID = WC_CCB_SA_S.SA_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
    AND WC_CCB_PAY_TNDR_S.PAYMENT_TENDER_ID = WC_CCB_PAY_TNDR_CHAR_S.PAY_TENDER_ID (+)
	AND WC_CCB_PAY_TNDR_S.PAYMENT_EVENT_ID = WC_CCB_PAY_EVENT_S.INTEGRATION_ID (+) --20130626 BN - for cash reconciliation report
;


CREATE OR REPLACE VIEW WC_CCB_DEPOSIT_CONTROL_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DEPOSIT_CONTROL_ID,
TENDER_SOURCE_TYPE_FLAG,
DEPOSIT_CONTROL_STATUS_FLAG,
CREATE_DATE,
USER_ID,
CURRENCY_CODE,
BALANCED_USER_ID,
BALANCED_DATE,
ENDING_BALANCE,
COMMENTS,
DEP_CTL_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DEPOSIT_CONTROL_ID,
TENDER_SOURCE_TYPE_FLAG,
DEPOSIT_CONTROL_STATUS_FLAG,
CREATE_DATE,
USER_ID,
CURRENCY_CODE,
BALANCED_USER_ID,
BALANCED_DATE,
ENDING_BALANCE,
COMMENTS,
DEP_CTL_VERSION
FROM
	WC_CCB_DEP_CTL_S
;

--20140327 BN - for Dollar Help GRT report (added town code and description)
--20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
--20140702 bn - For Grunsky report, ADDING GRID_CODE
--20150508 BN - Adding columns for In/Out Leak Review G4 report.
--20150629 bn - now using ofcloc so just changing the view here.
CREATE OR REPLACE VIEW WC_CCB_PREMISE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
PREMISE_ID,
PREMISE_TYPE_CODE,
CIS_DIVISION,
LANDLORD_AGREEMENT_ID,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
METER_READ_INSTRUCTION_CODE,
METER_READ_INSTRUCTION_DETAILS,
METER_READ_WARNING_CODE,
TREND_AREA_CODE,
ADDRESS1,
ADDRESS2,
ADDRESS3,
ADDRESS4,
MAILING_ADDRESS_SW,
CITY,
PREMISE_NUMBER,
NUMBER2,
COUNTRY,
POSTAL,
HOUSE_TYPE,
TAX_VENDOR_GEO_CODE,
IN_CITY_LIMIT,
STATE,
PREM_VERSION,
ADDRESS1_UPPERCASE,
CITY_UPPERCASE,
TIME_ZONE_CODE,
LIFE_SUPPORT_SENS_LOAD_FLAG,
LIFE_SUPPORT_SENS_LOAD_DESC,
PARENT_PRMISE_ID,
PREMISE_DATA_AREA,
WORK_CALENDAR_CODE,
CIS_DIVISION_VERSION,
CIS_DIVISION_LANGUAGE,
CIS_DIVISION_DESCRIPTION,
CIS_DIVISION_L_VERSION,
ACCOUNT_ID,
LANDLORD_VERSION,
LANDLORD_DESCRIPTION,
LANDLORD_DESCRIPTION_UPPER,
MR_INSTR_VERSION,
MR_INSTR_LANGUAGE_CODE,
METER_READ_INSTR_DESCRIPTION,
MR_INSTR_L_VERSION,
MR_WARN_VERSION,
MR_WARN_LANGUAGE_CODE,
METER_READ_WARNING_DESCRIPTION,
MR_WARN_L_VERSION,
PREM_TYPE_VERSION,
PREM_TYPE_LANGUAGE_CODE,
PREMISE_TYPE_DESCRIPTION,
PREM_TYPE_L_VERSION,
STATE_VERSION,
STATE_LANGUAGE_CODE,
STATE_DESCRIPTION,
ADDRESS1_AVAILABLE_FLAG,
ADDRESS2_AVAILABLE_FLAG,
ADDRESS3_AVAILABLE_FLAG,
ADDRESS4_AVAILABLE_FLAG,
CITY_AVAILABLE_FLAG,
COUNTRY_VERSION,
NUMBER1_AVAILABLE_FLAG,
NUMBER2_AVAILABLE_FLAG,
HOUSE_TYPE_AVAILABLE_FLAG,
COUNTY_AVAILABLE_FLAG,
STATE_AVAILABLE_FLAG,
POSTAL_AVAILABLE_FLAG,
IN_CITY_LIMIT_AVAILABLE_FLAG,
GEOGRAPHIC_CODE_AVAILABLE_FLAG,
COUNTRY_LANGUAGE_CODE,
COUNTRY_DESCRIPTION,
ADDRESS1_LABEL,
ADDRESS2_LABEL,
ADDRESS3_LABEL,
ADDRESS4_LABEL,
CITY_LABEL,
NUMBER1_LABEL,
NUMBER2_LABEL,
HOUSE_TYPE_LABEL,
COUNTY_LABEL,
STATE_LABEL,
POSTAL_LABEL,
IN_CITY_LIMIT_LABEL,
GEOGRAPHIC_CODE_LABEL,
COUNTRY_L_VERSION,
TIME_ZONE_VERSION,
SEASONAL_TIME_SHIFT_CODE,
SHIFT_IN_MINUTES,
TIME_ZONE_LANGUAGE_CODE,
TIME_ZONE_DESCRIPTION,
TIME_ZONE_L_VERSION,
TREND_AREA_VERSION,
METER_READ_EST_ALG_CODE,
TREND_AREA_LANGUAGE_CODE,
TREND_AREA_DESCRIPTION,
TREND_AREA_L_VERSION,
COUNTY, --20130903 BN - for account rebate eligibility report
TOWN_CODE,                        --20140327 BN - for Dollar Help GRT report
TOWN_CODE_DESCRIPTION,            --20140327 BN - for Dollar Help GRT report
OFFICE_LOCATION,   --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
OFFICE_LOCATION_DESCRIPTION,    --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
GRID_CODE, --20140702 bn - For Grunsky report
OFFICE_LOC_OVRD, --20140327 BN - for Dollar Help GRT report
OFFICE_LOC_OVRD_DESCRIPTION, --20140327 BN - for Dollar Help GRT report
MGE_SERVING_OFFICE,        --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
MGE_SERVING_OFFICE_DESCRIPTION           --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
)
AS
SELECT
WC_CCB_PREM_S.INTEGRATION_ID,
WC_CCB_PREM_S.DATASOURCE_NUM_ID,
WC_CCB_PREM_S.W_INSERT_DT,
WC_CCB_PREM_S.W_UPDATE_DT,
WC_CCB_PREM_S.W_LOAD_NUMBER,
WC_CCB_PREM_S.PREMISE_ID,
WC_CCB_PREM_S.PREMISE_TYPE_CODE,
WC_CCB_PREM_S.CIS_DIVISION,
WC_CCB_PREM_S.LANDLORD_AGREEMENT_ID,
WC_CCB_PREM_S.KEY_SW,
WC_CCB_PREM_S.KEY_ID,
WC_CCB_PREM_S.OK_TO_ENTER_SW,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_CODE,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_DETAILS,
WC_CCB_PREM_S.METER_READ_WARNING_CODE,
WC_CCB_PREM_S.TREND_AREA_CODE,
WC_CCB_PREM_S.ADDRESS1,
WC_CCB_PREM_S.ADDRESS2,
WC_CCB_PREM_S.ADDRESS3,
WC_CCB_PREM_S.ADDRESS4,
WC_CCB_PREM_S.MAILING_ADDRESS_SW,
WC_CCB_PREM_S.CITY,
WC_CCB_PREM_S.PREMISE_NUMBER,
WC_CCB_PREM_S.NUMBER2,
WC_CCB_PREM_S.COUNTRY,
WC_CCB_PREM_S.POSTAL,
WC_CCB_PREM_S.HOUSE_TYPE,
WC_CCB_PREM_S.TAX_VENDOR_GEO_CODE,
WC_CCB_PREM_S.IN_CITY_LIMIT,
WC_CCB_PREM_S.STATE,
WC_CCB_PREM_S.PREM_VERSION,
WC_CCB_PREM_S.ADDRESS1_UPPERCASE,
WC_CCB_PREM_S.CITY_UPPERCASE,
WC_CCB_PREM_S.TIME_ZONE_CODE,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_FLAG,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_DESC,
WC_CCB_PREM_S.PARENT_PRMISE_ID,
WC_CCB_PREM_S.PREMISE_DATA_AREA,
WC_CCB_CIS_DIVISION_S.WORK_CALENDAR_CODE,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_VERSION,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_LANGUAGE,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_DESCRIPTION,
WC_CCB_CIS_DIVISION_S.CIS_DIVISION_L_VERSION,
WC_CCB_LANDLORD_S.ACCOUNT_ID,
WC_CCB_LANDLORD_S.LANDLORD_VERSION,
WC_CCB_LANDLORD_S.LANDLORD_DESCRIPTION,
WC_CCB_LANDLORD_S.LANDLORD_DESCRIPTION_UPPER,
WC_CCB_MR_INSTR_S.MR_INSTR_VERSION,
WC_CCB_MR_INSTR_S.MR_INSTR_LANGUAGE_CODE,
WC_CCB_MR_INSTR_S.METER_READ_INSTR_DESCRIPTION,
WC_CCB_MR_INSTR_S.MR_INSTR_L_VERSION,
WC_CCB_MR_WARN_S.MR_WARN_VERSION,
WC_CCB_MR_WARN_S.MR_WARN_LANGUAGE_CODE,
WC_CCB_MR_WARN_S.METER_READ_WARNING_DESCRIPTION,
WC_CCB_MR_WARN_S.MR_WARN_L_VERSION,
WC_CCB_PREM_TYPE_S.PREM_TYPE_VERSION,
WC_CCB_PREM_TYPE_S.PREM_TYPE_LANGUAGE_CODE,
WC_CCB_PREM_TYPE_S.PREMISE_TYPE_DESCRIPTION,
WC_CCB_PREM_TYPE_S.PREM_TYPE_L_VERSION,
WC_CCB_STATE_S.STATE_VERSION,
WC_CCB_STATE_S.STATE_LANGUAGE_CODE,
WC_CCB_STATE_S.STATE_DESCRIPTION,
WC_CCB_COUNTRY_S.ADDRESS1_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.ADDRESS2_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.ADDRESS3_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.ADDRESS4_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.CITY_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.COUNTRY_VERSION,
WC_CCB_COUNTRY_S.NUMBER1_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.NUMBER2_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.HOUSE_TYPE_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.COUNTY_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.STATE_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.POSTAL_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.IN_CITY_LIMIT_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.GEOGRAPHIC_CODE_AVAILABLE_FLAG,
WC_CCB_COUNTRY_S.COUNTRY_LANGUAGE_CODE,
WC_CCB_COUNTRY_S.COUNTRY_DESCRIPTION,
WC_CCB_COUNTRY_S.ADDRESS1_LABEL,
WC_CCB_COUNTRY_S.ADDRESS2_LABEL,
WC_CCB_COUNTRY_S.ADDRESS3_LABEL,
WC_CCB_COUNTRY_S.ADDRESS4_LABEL,
WC_CCB_COUNTRY_S.CITY_LABEL,
WC_CCB_COUNTRY_S.NUMBER1_LABEL,
WC_CCB_COUNTRY_S.NUMBER2_LABEL,
WC_CCB_COUNTRY_S.HOUSE_TYPE_LABEL,
WC_CCB_COUNTRY_S.COUNTY_LABEL,
WC_CCB_COUNTRY_S.STATE_LABEL,
WC_CCB_COUNTRY_S.POSTAL_LABEL,
WC_CCB_COUNTRY_S.IN_CITY_LIMIT_LABEL,
WC_CCB_COUNTRY_S.GEOGRAPHIC_CODE_LABEL,
WC_CCB_COUNTRY_S.COUNTRY_L_VERSION,
WC_CCB_TIME_ZONE_S.TIME_ZONE_VERSION,
WC_CCB_TIME_ZONE_S.SEASONAL_TIME_SHIFT_CODE,
WC_CCB_TIME_ZONE_S.SHIFT_IN_MINUTES,
WC_CCB_TIME_ZONE_S.TIME_ZONE_LANGUAGE_CODE,
WC_CCB_TIME_ZONE_S.TIME_ZONE_DESCRIPTION,
WC_CCB_TIME_ZONE_S.TIME_ZONE_L_VERSION,
WC_CCB_TREND_AREA_S.TREND_AREA_VERSION,
WC_CCB_TREND_AREA_S.METER_READ_EST_ALG_CODE,
WC_CCB_TREND_AREA_S.TREND_AREA_LANGUAGE_CODE,
WC_CCB_TREND_AREA_S.TREND_AREA_DESCRIPTION,
WC_CCB_TREND_AREA_S.TREND_AREA_L_VERSION,
WC_CCB_PREM_S.COUNTY, --20130903 BN - for account rebate eligibility report
WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE TOWN_CODE, --20140327 BN - for Dollar Help GRT report
PREM_CHAR_VAL.DESCRIPTION TOWN_CODE_DESCRIPTION, --20140327 BN - for Dollar Help GRT report
WC_CCB_PREM_CHAR_S_offloc.CHARACTERISTIC_VALUE OFFICE_LOCATION,  --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
PREM_CHAR_OFFLOC_VAL.DESCRIPTION OFFICE_LOCATION_DESCRIPTION,  --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
WC_CCB_PREM_GEO_S.GEOGRAPHIC_VALUE, --20140702 bn - For Grunsky report
WC_CCB_PREM_CHAR_S_offloc_ovrd.CHARACTERISTIC_VALUE OFFICE_LOC_OVRD,        --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
PREM_CHAR_OFFLOCOVRD_VAL.DESCRIPTION OFFICE_LOC_OVRD_DESCRIPTION,           --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
--20150629 bn - now using ofcloc so just changing the view here. WC_CCB_PREM_CHAR_S_mgeso.CHARACTERISTIC_VALUE MGE_SERVING_OFFICE,        --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
WC_CCB_PREM_CHAR_S_offloc.CHARACTERISTIC_VALUE MGE_SERVING_OFFICE, --20150629 bn - now using ofcloc so just changing the view here.
--20150629 bn - now using ofcloc so just changing the view here.PREM_CHAR_MGESO_VAL.DESCRIPTION MGE_SERVING_OFFICE_DESCRIPTION           --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
PREM_CHAR_OFFLOC_VAL.DESCRIPTION OFFICE_LOCATION_DESCRIPTION --20150629 bn - now using ofcloc so just changing the view here.
FROM
    WC_CCB_PREM_S,
    WC_CCB_CIS_DIVISION_S,
    WC_CCB_LANDLORD_S,
    WC_CCB_MR_INSTR_S,
    WC_CCB_MR_WARN_S,
    WC_CCB_PREM_TYPE_S,
    WC_CCB_STATE_S,
    WC_CCB_COUNTRY_S,
    WC_CCB_TIME_ZONE_S,
    WC_CCB_TREND_AREA_S,
        (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD')
            AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
          ) WC_CCB_PREM_CHAR_S,  --20140327 BN - for Dollar Help GRT report
    (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') PREM_CHAR_VAL  --20140327 BN - for Dollar Help GRT report
    ,
        (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC')
            AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
          ) WC_CCB_PREM_CHAR_S_offloc,  --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
    (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'OFCLOC') PREM_CHAR_OFFLOC_VAL,  --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
    (SELECT * FROM WC_CCB_PREM_GEO_S WHERE GEOGRAPHIC_TYPE_CODE = 'GRIDCODE') WC_CCB_PREM_GEO_S,
    (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOCOV')
            AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOCOV'
          ) WC_CCB_PREM_CHAR_S_offloc_ovrd,                         --20150508 BN - Adding columns for In/Out Leak Review G4 report.
     (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'OFCLOCOV') PREM_CHAR_OFFLOCOVRD_VAL      --20150508 BN - Adding columns for In/Out Leak Review G4 report.
   --20150629 bn - now using ofcloc so commenting this out. (SELECT * FROM WC_CCB_PREM_CHAR_S
   --20150629 bn - now using ofcloc so commenting this out.        WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
   --20150629 bn - now using ofcloc so commenting this out.                                                  WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
   --20150629 bn - now using ofcloc so commenting this out.                                                        AND TMP.CHARACTERISTIC_TYPE_CODE = 'MGESO')
   --20150629 bn - now using ofcloc so commenting this out.         AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MGESO'
   --20150629 bn - now using ofcloc so commenting this out.       ) WC_CCB_PREM_CHAR_S_mgeso,                         --20150508 BN - Adding columns for In/Out Leak Review G4 report.
   --20150629 bn - now using ofcloc so commenting this out.  (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MGESO') PREM_CHAR_MGESO_VAL      --20150508 BN - Adding columns for In/Out Leak Review G4 report.     
    
WHERE 1=1
    AND WC_CCB_PREM_S.CIS_DIVISION = WC_CCB_CIS_DIVISION_S.CIS_DIVISION (+)
    AND WC_CCB_PREM_S.LANDLORD_AGREEMENT_ID = WC_CCB_LANDLORD_S.LANDLORD_AGREEMENT_ID (+)
    AND WC_CCB_PREM_S.METER_READ_INSTRUCTION_CODE = WC_CCB_MR_INSTR_S.METER_READ_INSTRUCTION_CODE (+)
    AND WC_CCB_PREM_S.METER_READ_WARNING_CODE = WC_CCB_MR_WARN_S.METER_READ_WARNING_CODE (+)
    AND WC_CCB_PREM_S.PREMISE_TYPE_CODE = WC_CCB_PREM_TYPE_S.PREMISE_TYPE_CODE (+)
    AND WC_CCB_PREM_S.STATE = WC_CCB_STATE_S.STATE (+)
    AND WC_CCB_PREM_S.COUNTRY = WC_CCB_STATE_S.COUNTRY (+)
    AND WC_CCB_PREM_S.COUNTRY = WC_CCB_COUNTRY_S.COUNTRY (+)
    AND WC_CCB_PREM_S.TIME_ZONE_CODE = WC_CCB_TIME_ZONE_S.TIME_ZONE_CODE (+)
    AND WC_CCB_PREM_S.TREND_AREA_CODE = WC_CCB_TREND_AREA_S.TREND_AREA_CODE (+)
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)  --20140327 BN - for Dollar Help GRT report
    AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE = PREM_CHAR_VAL.CHARACTERISTIC_VALUE (+)     --20140327 BN - for Dollar Help GRT report
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S_offloc.PREMISE_ID (+)   --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
    AND WC_CCB_PREM_CHAR_S_offloc.CHARACTERISTIC_VALUE = PREM_CHAR_OFFLOC_VAL.CHARACTERISTIC_VALUE (+)    --20140605 BN - Adding Office Location for AMR Meter Install (Meter Count) report.
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_GEO_S.PREMISE_ID (+) --20140702 bn - For Grunsky report
    
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S_offloc_ovrd.PREMISE_ID (+)                                 --20150508 BN - Adding columns for In/Out Leak Review G4 report.
    AND WC_CCB_PREM_CHAR_S_offloc_ovrd.CHARACTERISTIC_VALUE = PREM_CHAR_OFFLOCOVRD_VAL.CHARACTERISTIC_VALUE (+)      --20150508 BN - Adding columns for In/Out Leak Review G4 report.
 --20150629 bn - now using ofcloc so commenting this out.   AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S_mgeso.PREMISE_ID (+)                                 --20150508 BN - Adding columns for In/Out Leak Review G4 report.
 --20150629 bn - now using ofcloc so commenting this out.   AND WC_CCB_PREM_CHAR_S_mgeso.CHARACTERISTIC_VALUE = PREM_CHAR_MGESO_VAL.CHARACTERISTIC_VALUE (+)      --20150508 BN - Adding columns for In/Out Leak Review G4 report.    
;





CREATE OR REPLACE VIEW WC_CCB_SA_SP_FA_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SA_SP_ID,
FA_ID,
SA_ID,
SP_ID,
FIELD_ACTIVITY_TYPE_FLAG,
SA_SP_FA_VERSION,
ACTIVITY_TYPE_CODE,
FA_CANCEL_REASON_CODE,
SERVICE_POINT_ID,
FA_PRIORITY_FLAG,
FA_CREATED_BY,
SCHEDULE_DATE,
FA_STATUS_FLAG,
ELIGIBLE_FOR_DISPATCH_SW,
DISPATCH_GROUP_CODE,
FIELD_ORDER_ID,
CREATE_DATE,
TEST_SELECTION_ID,
USER_ID,
INSTRUCTIONS,
LONG_DESCRIPTION,
FA_VERSION,
APPT_PERIOD_ID,
FA_EXTERNAL_ID,
FA_INTERMEDIATE_STATUS_FLAG,
FA_RESCHEDULE_REASON_CODE,
FA_DATA_AREA,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
DISCONNECTED_LOCATION_CODE,
SP_TYPE_CODE,
PREMISE_ID,
SP_STATUS_FLAG,
INSTALL_DATE,
SP_SOURCE_STATUS_FLAG,
MR_SERVICE_CYCLE_CODE,
MR_SERVICE_ROUTE_CODE,
METER_LOCATION_CODE,
MR_SERVICE_SYSCLE_ROUTE_SEQ,
FACILITY_LEVEL_1_CODE,
METER_LOCATION_DETAILS,
FACILITY_LEVEL_2_CODE,
FACILITY_LEVEL_3_CODE,
SP_VERSION,
SP_LONG_DESCRIPTION,
ABOLISHED_DATE,
OVERRIDE_PREMISE_FLD_INFO_FLAG,
MR_INSTRUCTION_CODE,
MR_WARNING_CODE,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
MR_INSTRUCTION_DETAILS,
SP_DATA_AREA,
DISCONNECTED_LOCATION_CID,
PREMISE_CID,
METER_READ_CYCLE_CID,
FA_STATUS_FLAG_DESCRIPTION --20141201 bn - added as it was missing when the column was put into the select statement.
)
AS
SELECT
WC_CCB_SA_SP_FA_S.INTEGRATION_ID,
WC_CCB_SA_SP_FA_S.DATASOURCE_NUM_ID,
WC_CCB_SA_SP_FA_S.W_INSERT_DT,
WC_CCB_SA_SP_FA_S.W_UPDATE_DT,
WC_CCB_SA_SP_FA_S.W_LOAD_NUMBER,
WC_CCB_SA_SP_FA_S.SA_SP_ID,
WC_CCB_SA_SP_FA_S.FA_ID,
WC_CCB_SA_SP_FA_S.SA_ID,
WC_CCB_SA_SP_FA_S.SP_ID,
WC_CCB_SA_SP_FA_S.FIELD_ACTIVITY_TYPE_FLAG,
WC_CCB_SA_SP_FA_S.SA_SP_FA_VERSION,
WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
WC_CCB_FA_S.SERVICE_POINT_ID,
WC_CCB_FA_S.FA_PRIORITY_FLAG,
WC_CCB_FA_S.FA_CREATED_BY,
WC_CCB_FA_S.SCHEDULE_DATE,
WC_CCB_FA_S.FA_STATUS_FLAG,
WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
WC_CCB_FA_S.DISPATCH_GROUP_CODE,
WC_CCB_FA_S.FIELD_ORDER_ID,
WC_CCB_FA_S.CREATE_DATE,
WC_CCB_FA_S.TEST_SELECTION_ID,
WC_CCB_FA_S.USER_ID,
WC_CCB_FA_S.INSTRUCTIONS,
WC_CCB_FA_S.LONG_DESCRIPTION,
WC_CCB_FA_S.FA_VERSION,
WC_CCB_FA_S.APPT_PERIOD_ID,
WC_CCB_FA_S.FA_EXTERNAL_ID,
WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
WC_CCB_FA_S.FA_DATA_AREA,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_SP_S.DISCONNECTED_LOCATION_CODE,
WC_CCB_SP_S.SP_TYPE_CODE,
WC_CCB_SP_S.PREMISE_ID,
WC_CCB_SP_S.SP_STATUS_FLAG,
WC_CCB_SP_S.INSTALL_DATE,
WC_CCB_SP_S.SP_SOURCE_STATUS_FLAG,
WC_CCB_SP_S.MR_SERVICE_CYCLE_CODE,
WC_CCB_SP_S.MR_SERVICE_ROUTE_CODE,
WC_CCB_SP_S.METER_LOCATION_CODE,
WC_CCB_SP_S.MR_SERVICE_SYSCLE_ROUTE_SEQ,
WC_CCB_SP_S.FACILITY_LEVEL_1_CODE,
WC_CCB_SP_S.METER_LOCATION_DETAILS,
WC_CCB_SP_S.FACILITY_LEVEL_2_CODE,
WC_CCB_SP_S.FACILITY_LEVEL_3_CODE,
WC_CCB_SP_S.SP_VERSION,
WC_CCB_SP_S.SP_LONG_DESCRIPTION,
WC_CCB_SP_S.ABOLISHED_DATE,
WC_CCB_SP_S.OVERRIDE_PREMISE_FLD_INFO_FLAG,
WC_CCB_SP_S.MR_INSTRUCTION_CODE,
WC_CCB_SP_S.MR_WARNING_CODE,
WC_CCB_SP_S.KEY_SW,
WC_CCB_SP_S.KEY_ID,
WC_CCB_SP_S.OK_TO_ENTER_SW,
WC_CCB_SP_S.MR_INSTRUCTION_DETAILS,
WC_CCB_SP_S.SP_DATA_AREA,
WC_CCB_SP_S.DISCONNECTED_LOCATION_CID,
WC_CCB_SP_S.PREMISE_CID,
WC_CCB_SP_S.METER_READ_CYCLE_CID,
DECODE(trim(WC_CCB_FA_S.FA_STATUS_FLAG),'C','Completed','P','Pending','H','Held','X','Canceled') FA_STATUS_FLAG_DESCRIPTION --20141006 BN - FOR ACI STATUS
FROM
    WC_CCB_SA_SP_FA_S,
    WC_CCB_FA_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
    WC_CCB_SP_S
WHERE 1=1
    AND WC_CCB_SA_SP_FA_S.FA_ID = WC_CCB_FA_S.FA_ID (+)
    AND WC_CCB_SA_SP_FA_S.SA_ID = WC_CCB_SA_S.SA_ID (+)
    AND WC_CCB_SA_SP_FA_S.SP_ID = WC_CCB_SP_S.SP_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
;


CREATE OR REPLACE VIEW WC_CCB_DISCONNECT_LOC_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DISCONNECT_LOCATION_CODE,
DISCON_LOC_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
DISCON_LOC_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
DISCONNECT_LOCATION_CODE,
DISCON_LOC_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
DISCON_LOC_L_VERSION
FROM
	WC_CCB_DISCON_LOC_S
;


CREATE OR REPLACE VIEW WC_CCB_METER_READ_CYCLE_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
MR_SERVICE_CYCLE_CODE,
MR_BILL_CYCLE_CODE,
SERVICE_PROVIDER_CODE,
MR_CYC_VERSION,
LANGUAGE_CODE,
DESCRIPTION,
MR_CYC_L_VERSION,
BILL_CYCLE_CODE,
BILL_CYCLE_VERSION,
BILL_CYCLE_LANGUAGE,
BILL_CYCLE_DESCRIPTION,
BILL_CYCLE_L_VERSION
)
AS
SELECT
WC_CCB_MR_CYC_S.INTEGRATION_ID,
WC_CCB_MR_CYC_S.DATASOURCE_NUM_ID,
WC_CCB_MR_CYC_S.W_INSERT_DT,
WC_CCB_MR_CYC_S.W_UPDATE_DT,
WC_CCB_MR_CYC_S.W_LOAD_NUMBER,
WC_CCB_MR_CYC_S.MR_SERVICE_CYCLE_CODE,
WC_CCB_MR_CYC_S.MR_BILL_CYCLE_CODE,
WC_CCB_MR_CYC_S.SERVICE_PROVIDER_CODE,
WC_CCB_MR_CYC_S.MR_CYC_VERSION,
WC_CCB_MR_CYC_S.LANGUAGE_CODE,
WC_CCB_MR_CYC_S.DESCRIPTION,
WC_CCB_MR_CYC_S.MR_CYC_L_VERSION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_CODE,
WC_CCB_BILL_CYC_S.BILL_CYCLE_VERSION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_LANGUAGE,
WC_CCB_BILL_CYC_S.BILL_CYCLE_DESCRIPTION,
WC_CCB_BILL_CYC_S.BILL_CYCLE_L_VERSION
FROM
	WC_CCB_MR_CYC_S,
	WC_CCB_BILL_CYC_S
WHERE
	WC_CCB_MR_CYC_S.MR_BILL_CYCLE_CODE = WC_CCB_BILL_CYC_S.BILL_CYCLE_CODE
;


CREATE OR REPLACE VIEW WC_CCB_SERVICE_PROVIDER_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SERVICE_PROVIDER_CODE,
SA_ID,
PERSON_ID,
NOTIFICATION_DL_PROFILE_CODE,
BILLING_RELATIONSHIP_FLAG,
PAYMENT_RELATIONSHIP_FLAG,
CONSUMPTION_RELATIONSHIP_FLAG,
PAY_SERVICE_PROVIDER_ALG_CODE,
TRANSFER_AR_ALG_CODE,
CONSUMPTION_DL_PROCESS_CODE,
BILLABLE_CHARGE_DL_PROC_CODE,
EXTERNAL_SYSTEM_CODE,
SPR_VERSION,
OVERRIDES_SERVICE_CYCLE_SW,
LANGUAGE_CODE,
DESCRIPTION,
SPR_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SERVICE_PROVIDER_CODE,
SA_ID,
PERSON_ID,
NOTIFICATION_DL_PROFILE_CODE,
BILLING_RELATIONSHIP_FLAG,
PAYMENT_RELATIONSHIP_FLAG,
CONSUMPTION_RELATIONSHIP_FLAG,
PAY_SERVICE_PROVIDER_ALG_CODE,
TRANSFER_AR_ALG_CODE,
CONSUMPTION_DL_PROCESS_CODE,
BILLABLE_CHARGE_DL_PROC_CODE,
EXTERNAL_SYSTEM_CODE,
SPR_VERSION,
OVERRIDES_SERVICE_CYCLE_SW,
LANGUAGE_CODE,
DESCRIPTION,
SPR_L_VERSION
FROM
	WC_CCB_SPR_S
;


CREATE OR REPLACE VIEW WC_CCB_BILL_SEGMENT_READ_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_SEGMENT_ID,
SP_ID,
REGISTER_CONSTANT,
SEQUENCE_NUMBER,
HOW_TO_USE_SP_FLAG,
USE_PERCENT,
HOW_TO_USE_FLAG,
MEASURES_PEAK_QTY_SW,
UNIT_OF_MEASURE_CODE,
TIME_OF_USE_CODE,
START_REGISTER_READ_ID,
START_READ_DATE,
START_REGISTER_READING,
END_REGISTER_READ_ID,
END_READ_DATE,
END_REGISTER_READING,
MEASURED_QUANTITY,
FINAL_UOM_CODE,
FINAL_TIME_OF_USE_CODE,
FINAL_REGISTER_QUANTITY,
BSEG_READ_VERSION,
SQI_CODE,
FINAL_SQI_CODE,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
CANCEL_REASON_CODE,
CANCEL_BILL_SEGMENT_ID,
SA_ID,
BILL_ID,
START_DATE,
END_DATE,
ESTIMATE_DW,
CLOSING_BILL_SEGMENT_SW,
SQ_OVERRIDE_SW,
ITEM_OVERRIDE_SW,
PREMISE_ID,
BILL_SEGMENT_STATUS_FLAG,
CREATION_DATE,
STATUS_CHANGE_DATE,
REBILL_SEGMENT_ID,
BILL_SEGMENT_VERSION,
MASTER_BILL_SEGMENT_ID,
QUOTE_DETAIL_ID,
BILL_SCENARIO_ID,
MDM_START_DATE,
MDM_END_DATE,
BILL_CYCLE_SCHEDULE_CID,
BILL_CANCEL_REASON_CID,
BSEG_PREMISE_CID,
START_REGISTER_READING_ID,
START_METER_READ_ID,
START_READ_SEQUENCE,
START_REGISTER_ID,
START_READ_TYPE_FLAG,
START_LOW_LIMIT,
START_HIGH_LIMIT,
START_REVIEW_HIGH_LOW_SW,
START_TRENDED_SW,
START_REG_READ_VERSION,
START_METER_CONFIGURATION_ID,
START_USE_ON_BILL_SW,
START_MR_VERSION,
START_MR_SOURCE_CODE,
START_METER_READER_ID,
START_MR_DATA_AREA
)
AS
SELECT
WC_CCB_BSEG_READ_S.INTEGRATION_ID,
WC_CCB_BSEG_READ_S.DATASOURCE_NUM_ID,
WC_CCB_BSEG_READ_S.W_INSERT_DT,
WC_CCB_BSEG_READ_S.W_UPDATE_DT,
WC_CCB_BSEG_READ_S.W_LOAD_NUMBER,
WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID,
WC_CCB_BSEG_READ_S.SP_ID,
WC_CCB_BSEG_READ_S.REGISTER_CONSTANT,
WC_CCB_BSEG_READ_S.SEQUENCE_NUMBER,
WC_CCB_BSEG_READ_S.HOW_TO_USE_SP_FLAG,
WC_CCB_BSEG_READ_S.USE_PERCENT,
WC_CCB_BSEG_READ_S.HOW_TO_USE_FLAG,
WC_CCB_BSEG_READ_S.MEASURES_PEAK_QTY_SW,
WC_CCB_BSEG_READ_S.UNIT_OF_MEASURE_CODE,
WC_CCB_BSEG_READ_S.TIME_OF_USE_CODE,
WC_CCB_BSEG_READ_S.START_REGISTER_READ_ID,
WC_CCB_BSEG_READ_S.START_READ_DATE,
WC_CCB_BSEG_READ_S.START_REGISTER_READING,
WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID,
WC_CCB_BSEG_READ_S.END_READ_DATE,
WC_CCB_BSEG_READ_S.END_REGISTER_READING,
WC_CCB_BSEG_READ_S.MEASURED_QUANTITY,
WC_CCB_BSEG_READ_S.FINAL_UOM_CODE,
WC_CCB_BSEG_READ_S.FINAL_TIME_OF_USE_CODE,
WC_CCB_BSEG_READ_S.FINAL_REGISTER_QUANTITY,
WC_CCB_BSEG_READ_S.BSEG_READ_VERSION,
WC_CCB_BSEG_READ_S.SQI_CODE,
WC_CCB_BSEG_READ_S.FINAL_SQI_CODE,
WC_CCB_BSEG_S.BILL_CYCLE_CODE,
WC_CCB_BSEG_S.WINDOW_START_DATE,
WC_CCB_BSEG_S.CANCEL_REASON_CODE,
WC_CCB_BSEG_S.CANCEL_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.SA_ID,
WC_CCB_BSEG_S.BILL_ID,
WC_CCB_BSEG_S.START_DATE,
WC_CCB_BSEG_S.END_DATE,
WC_CCB_BSEG_S.ESTIMATE_DW,
WC_CCB_BSEG_S.CLOSING_BILL_SEGMENT_SW,
WC_CCB_BSEG_S.SQ_OVERRIDE_SW,
WC_CCB_BSEG_S.ITEM_OVERRIDE_SW,
WC_CCB_BSEG_S.PREMISE_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_STATUS_FLAG,
WC_CCB_BSEG_S.CREATION_DATE,
WC_CCB_BSEG_S.STATUS_CHANGE_DATE,
WC_CCB_BSEG_S.REBILL_SEGMENT_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_VERSION,
WC_CCB_BSEG_S.MASTER_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.QUOTE_DETAIL_ID,
WC_CCB_BSEG_S.BILL_SCENARIO_ID,
WC_CCB_BSEG_S.MDM_START_DATE,
WC_CCB_BSEG_S.MDM_END_DATE,
WC_CCB_BSEG_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_BSEG_S.BILL_CANCEL_REASON_CID,
WC_CCB_BSEG_S.BSEG_PREMISE_CID,
WC_CCB_REG_READ_S.START_REGISTER_READING_ID,
WC_CCB_REG_READ_S.START_METER_READ_ID,
WC_CCB_REG_READ_S.START_READ_SEQUENCE,
WC_CCB_REG_READ_S.START_REGISTER_ID,
WC_CCB_REG_READ_S.START_READ_TYPE_FLAG,
WC_CCB_REG_READ_S.START_LOW_LIMIT,
WC_CCB_REG_READ_S.START_HIGH_LIMIT,
WC_CCB_REG_READ_S.START_REVIEW_HIGH_LOW_SW,
WC_CCB_REG_READ_S.START_TRENDED_SW,
WC_CCB_REG_READ_S.START_REG_READ_VERSION,
WC_CCB_MR_S.START_METER_CONFIGURATION_ID,
WC_CCB_MR_S.START_USE_ON_BILL_SW,
WC_CCB_MR_S.START_MR_VERSION,
WC_CCB_MR_S.START_MR_SOURCE_CODE,
WC_CCB_MR_S.START_METER_READER_ID,
WC_CCB_MR_S.START_MR_DATA_AREA
FROM
    WC_CCB_BSEG_READ_S,
    WC_CCB_BSEG_S,
    WC_CCB_REG_READ_S,
    WC_CCB_MR_S
WHERE 1=1
    AND WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID = WC_CCB_BSEG_S.BILL_SEGMENT_ID (+)
    AND WC_CCB_BSEG_READ_S.START_REGISTER_READ_ID = WC_CCB_REG_READ_S.START_REGISTER_READING_ID (+)
    AND WC_CCB_REG_READ_S.START_METER_READ_ID = WC_CCB_MR_S.START_METER_READ_ID
;


CREATE OR REPLACE VIEW WC_CCB_FA_STAGE_UP_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FA_ID,
UPLOAD_STATUS,
WORKED_BY,
WORK_DATE,
FA_STAGE_UP_VERSION,
LONG_DESCRIPTION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FA_ID,
UPLOAD_STATUS,
WORKED_BY,
WORK_DATE,
FA_STAGE_UP_VERSION,
LONG_DESCRIPTION
FROM
	WC_CCB_FA_STAGE_UP_S
;


CREATE OR REPLACE VIEW WC_CCB_FA_STEP_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FA_ID,
STEP_SEQUENCE_NUMBER,
FA_STEP_BY_ACTION_FLAG,
SPAWNED_FA_ID,
ACCOUNT_ID,
CUSTOMER_CONTACT_ID,
STEP_UPDATE_ENTITY_FLAG,
SP_ITEM_HISTORY_ID,
SP_METER_HISTORY_ID,
SP_ID,
ITEM_ID,
METER_READ_ID,
METER_CFG_METER_ID,
METER_ID,
FA_STEP_VERSION,
DEVICE_TEST_ID,
ACCOUNT_CID,
CUSTOMER_CONTACT_CID,
ITEM_CID
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FA_ID,
STEP_SEQUENCE_NUMBER,
FA_STEP_BY_ACTION_FLAG,
SPAWNED_FA_ID,
ACCOUNT_ID,
CUSTOMER_CONTACT_ID,
STEP_UPDATE_ENTITY_FLAG,
SP_ITEM_HISTORY_ID,
SP_METER_HISTORY_ID,
SP_ID,
ITEM_ID,
METER_READ_ID,
METER_CFG_METER_ID,
METER_ID,
FA_STEP_VERSION,
DEVICE_TEST_ID,
ACCOUNT_CID,
CUSTOMER_CONTACT_CID,
ITEM_CID
FROM
	WC_CCB_FA_STEP_S
;


CREATE OR REPLACE VIEW WC_CCB_CUSTOMER_CONTACT_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CUSTOMER_CONTACT_ID,
USER_ID,
PERSON_ID,
CONTACT_DATE,
CONTACT_CLASS_CODE,
CONTACT_TYPE_CODE,
PRINT_LETER_SW,
LETTER_PRINT_DATE,
LETTER_TEMPLATE_CODE,
LONG_DESCRIPTION,
CC_VERSION,
BATCH_CONTROL_CODE,
BATCH_NUMBER,
CONTACT_STATUS_FLAG,
PREFERRED_CONTACT_METHOD_FLAG,
CUSTOMER_CONTACT_DATA_AREA,
CONTACT_ACTION_FLAG,
CC_TYPE_VERSION,
LANGUAGE_CODE,
CC_TYPE_DESCRIPTION,
CC_TYPE_L_VERSION,
CONTACT_TYPE_SHORTHAND
)
AS
SELECT
WC_CCB_CC_S.INTEGRATION_ID,
WC_CCB_CC_S.DATASOURCE_NUM_ID,
WC_CCB_CC_S.W_INSERT_DT,
WC_CCB_CC_S.W_UPDATE_DT,
WC_CCB_CC_S.W_LOAD_NUMBER,
WC_CCB_CC_S.CUSTOMER_CONTACT_ID,
WC_CCB_CC_S.USER_ID,
WC_CCB_CC_S.PERSON_ID,
WC_CCB_CC_S.CONTACT_DATE,
WC_CCB_CC_S.CONTACT_CLASS_CODE,
WC_CCB_CC_S.CONTACT_TYPE_CODE,
WC_CCB_CC_S.PRINT_LETER_SW,
WC_CCB_CC_S.LETTER_PRINT_DATE,
WC_CCB_CC_S.LETTER_TEMPLATE_CODE,
WC_CCB_CC_S.LONG_DESCRIPTION,
WC_CCB_CC_S.CC_VERSION,
WC_CCB_CC_S.BATCH_CONTROL_CODE,
WC_CCB_CC_S.BATCH_NUMBER,
WC_CCB_CC_S.CONTACT_STATUS_FLAG,
WC_CCB_CC_S.PREFERRED_CONTACT_METHOD_FLAG,
WC_CCB_CC_S.CUSTOMER_CONTACT_DATA_AREA,
WC_CCB_CC_TYPE_S.CONTACT_ACTION_FLAG,
WC_CCB_CC_TYPE_S.CC_TYPE_VERSION,
WC_CCB_CC_TYPE_S.LANGUAGE_CODE,
WC_CCB_CC_TYPE_S.CC_TYPE_DESCRIPTION,
WC_CCB_CC_TYPE_S.CC_TYPE_L_VERSION,
WC_CCB_CC_TYPE_S.CONTACT_TYPE_SHORTHAND
FROM
	WC_CCB_CC_S,
	WC_CCB_CC_TYPE_S
WHERE 1=1
	AND WC_CCB_CC_S.CONTACT_CLASS_CODE = WC_CCB_CC_TYPE_S.CONTACT_CLASS_CODE (+)
	AND WC_CCB_CC_S.CONTACT_TYPE_CODE = WC_CCB_CC_TYPE_S.CONTACT_TYPE_CODE (+)
;


CREATE OR REPLACE VIEW WC_CCB_ITEM_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ITEM_ID,
BADGE_NUMBER,
ITEM_TYPE_CODE,
ITEM_STATUS_FLAG,
MANUFACTURER_CODE,
MODEL_CODE,
SERIAL_NUMBER,
RECEIVED_DATE,
RETIRED_DATE,
LONG_DESCRIPTION,
ITEM_VERSION,
RETIRE_REASON_CODE,
UNIT_OF_MEASURE_CODE,
SERVICE_TYPE_CODE,
USE_ESTIMATES_SW,
SUMMARIZE_FOR_BILLING_SW,
ITEM_TYPE_VERSION,
MULTI_EQUIPMENT_ASSIGN_SW,
BILLABLE_SW,
TRACK_LOCATION_FLAG,
LANGUAGE_CODE,
ITEM_TYPE_DESCRIPTION,
ITEM_TYPE_L_VERSION
)
AS
SELECT
WC_CCB_ITEM_S.INTEGRATION_ID,
WC_CCB_ITEM_S.DATASOURCE_NUM_ID,
WC_CCB_ITEM_S.W_INSERT_DT,
WC_CCB_ITEM_S.W_UPDATE_DT,
WC_CCB_ITEM_S.W_LOAD_NUMBER,
WC_CCB_ITEM_S.ITEM_ID,
WC_CCB_ITEM_S.BADGE_NUMBER,
WC_CCB_ITEM_S.ITEM_TYPE_CODE,
WC_CCB_ITEM_S.ITEM_STATUS_FLAG,
WC_CCB_ITEM_S.MANUFACTURER_CODE,
WC_CCB_ITEM_S.MODEL_CODE,
WC_CCB_ITEM_S.SERIAL_NUMBER,
WC_CCB_ITEM_S.RECEIVED_DATE,
WC_CCB_ITEM_S.RETIRED_DATE,
WC_CCB_ITEM_S.LONG_DESCRIPTION,
WC_CCB_ITEM_S.ITEM_VERSION,
WC_CCB_ITEM_S.RETIRE_REASON_CODE,
WC_CCB_ITEM_TYPE_S.UNIT_OF_MEASURE_CODE,
WC_CCB_ITEM_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_ITEM_TYPE_S.USE_ESTIMATES_SW,
WC_CCB_ITEM_TYPE_S.SUMMARIZE_FOR_BILLING_SW,
WC_CCB_ITEM_TYPE_S.ITEM_TYPE_VERSION,
WC_CCB_ITEM_TYPE_S.MULTI_EQUIPMENT_ASSIGN_SW,
WC_CCB_ITEM_TYPE_S.BILLABLE_SW,
WC_CCB_ITEM_TYPE_S.TRACK_LOCATION_FLAG,
WC_CCB_ITEM_TYPE_S.LANGUAGE_CODE,
WC_CCB_ITEM_TYPE_S.ITEM_TYPE_DESCRIPTION,
WC_CCB_ITEM_TYPE_S.ITEM_TYPE_L_VERSION
FROM
	WC_CCB_ITEM_S,
	WC_CCB_ITEM_TYPE_S
WHERE 1=1
	AND WC_CCB_ITEM_S.ITEM_TYPE_CODE = WC_CCB_ITEM_TYPE_S.ITEM_TYPE_CODE
;


CREATE OR REPLACE VIEW WC_CCB_BILL_SEG_SERV_QTY_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
BILL_SEGMENT_ID,
UNIT_OF_MEASURE_CODE,
TIME_OF_USE_CODE,
SQI_CODE,
BILLABLE_SERVICE_QUANTITY,
INITIAL_SERVICE_QUANTITY,
BSEG_SQ_VERSION,
SERVICE_QTY_ID_CID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
CANCEL_REASON_CODE,
CANCEL_BILL_SEGMENT_ID,
SA_ID,
BILL_ID,
START_DATE,
END_DATE,
ESTIMATE_DW,
CLOSING_BILL_SEGMENT_SW,
SQ_OVERRIDE_SW,
ITEM_OVERRIDE_SW,
PREMISE_ID,
BILL_SEGMENT_STATUS_FLAG,
CREATION_DATE,
STATUS_CHANGE_DATE,
REBILL_SEGMENT_ID,
BILL_SEGMENT_VERSION,
MASTER_BILL_SEGMENT_ID,
QUOTE_DETAIL_ID,
BILL_SCENARIO_ID,
MDM_START_DATE,
MDM_END_DATE,
BILL_CYCLE_SCHEDULE_CID,
BILL_CANCEL_REASON_CID,
BSEG_PREMISE_CID,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_CID,
BILL_ACCOUNT_CID,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
SA_STATUS_FLAG,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID
)
AS
SELECT
WC_CCB_BSEG_SQ_S.INTEGRATION_ID,
WC_CCB_BSEG_SQ_S.DATASOURCE_NUM_ID,
WC_CCB_BSEG_SQ_S.W_INSERT_DT,
WC_CCB_BSEG_SQ_S.W_UPDATE_DT,
WC_CCB_BSEG_SQ_S.W_LOAD_NUMBER,
WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID,
WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE,
WC_CCB_BSEG_SQ_S.TIME_OF_USE_CODE,
WC_CCB_BSEG_SQ_S.SQI_CODE,
WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY,
WC_CCB_BSEG_SQ_S.INITIAL_SERVICE_QUANTITY,
WC_CCB_BSEG_SQ_S.BSEG_SQ_VERSION,
WC_CCB_BSEG_SQ_S.SERVICE_QTY_ID_CID,
WC_CCB_BSEG_S.BILL_CYCLE_CODE,
WC_CCB_BSEG_S.WINDOW_START_DATE,
WC_CCB_BSEG_S.CANCEL_REASON_CODE,
WC_CCB_BSEG_S.CANCEL_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.SA_ID,
WC_CCB_BSEG_S.BILL_ID,
WC_CCB_BSEG_S.START_DATE,
WC_CCB_BSEG_S.END_DATE,
WC_CCB_BSEG_S.ESTIMATE_DW,
WC_CCB_BSEG_S.CLOSING_BILL_SEGMENT_SW,
WC_CCB_BSEG_S.SQ_OVERRIDE_SW,
WC_CCB_BSEG_S.ITEM_OVERRIDE_SW,
WC_CCB_BSEG_S.PREMISE_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_STATUS_FLAG,
WC_CCB_BSEG_S.CREATION_DATE,
WC_CCB_BSEG_S.STATUS_CHANGE_DATE,
WC_CCB_BSEG_S.REBILL_SEGMENT_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_VERSION,
WC_CCB_BSEG_S.MASTER_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.QUOTE_DETAIL_ID,
WC_CCB_BSEG_S.BILL_SCENARIO_ID,
WC_CCB_BSEG_S.MDM_START_DATE,
WC_CCB_BSEG_S.MDM_END_DATE,
WC_CCB_BSEG_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_BSEG_S.BILL_CANCEL_REASON_CID,
WC_CCB_BSEG_S.BSEG_PREMISE_CID,
WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.CREATE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.BILL_VERSION,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_BILL_S.ACCOUNT_CID,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID
FROM
	WC_CCB_BSEG_SQ_S,
	WC_CCB_BSEG_S,
	WC_CCB_BILL_S,
	WC_CCB_SA_S,
	WC_CCB_SA_TYPE_S
WHERE 1=1
	AND WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID = WC_CCB_BSEG_S.BILL_SEGMENT_ID (+)
	AND WC_CCB_BSEG_S.BILL_ID = WC_CCB_BILL_S.BILL_ID (+)
	AND WC_CCB_BSEG_S.SA_ID = WC_CCB_SA_S.SA_ID (+)
	AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
	AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
;


CREATE OR REPLACE VIEW WC_CCB_SERVICE_QTY_ID_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SERVICE_QTY_ID_CODE,
SQI_VERSION,
DECIMAL_POSITIONS,
LANGUAGE_CODE,
DESCRIPTION,
SQI_L_VERSION
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SERVICE_QTY_ID_CODE,
SQI_VERSION,
DECIMAL_POSITIONS,
LANGUAGE_CODE,
DESCRIPTION,
SQI_L_VERSION
FROM
	WC_CCB_SQI_S
;





------------------------------------------------------------------------

CREATE OR REPLACE VIEW WC_CCB_PAY_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ACCOUNT_ID,
CANCEL_REASON_CODE,
CURRENCY_CODE,
MATCH_TYPE_CODE,
MATCH_VALUE,
NON_CIS_COMMENT,
NON_CIS_NAME,
NON_CIS_REFERENCE_NUMBER,
PAYMENT_AMOUNT,
PAY_EVENT_ID,
PAYMENT_ID,
PAYMENT_STATUS_FLAG,
VERSION,
ACCOUNT_CID,
CANCEL_REASON_CID,
CURRENCY_CID,
PAY_EVENT_CID,
PAYMENT_STATUS_LOOKUP_VAL_CID		--20140321 BN - for suspense account payments report
)
AS
SELECT
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ACCOUNT_ID,
CANCEL_REASON_CODE,
CURRENCY_CODE,
MATCH_TYPE_CODE,
MATCH_VALUE,
NON_CIS_COMMENT,
NON_CIS_NAME,
NON_CIS_REFERENCE_NUMBER,
PAYMENT_AMOUNT,
PAY_EVENT_ID,
PAYMENT_ID,
PAYMENT_STATUS_FLAG,
VERSION,
ACCOUNT_ID,
CANCEL_REASON_CODE,
CURRENCY_CODE,
PAY_EVENT_ID,
'PAY_STATUS_FLG' || '::' || PAYMENT_STATUS_FLAG PAYMENT_STATUS_LOOKUP_VAL_CID		--20140321 BN - for suspense account payments report
FROM
	WC_CCB_PAY_S
;


--SOX - User Access Report

CREATE OR REPLACE VIEW WC_CCB_USR_GROUP_PROF_ACC_FS_V
(
INTEGRATION_ID
,DATASOURCE_NUM_ID
,W_INSERT_DT
,W_UPDATE_DT
,W_LOAD_NUMBER
,APPLICATION_SERVICE_ID
,USER_GROUP_PROF_EXPIRAT_DATE
,USER_GROUP_PROF_DATA_OWNER
,USER_GROUP
,USER_GROUP_PROF_VERSION
--sc_app_service
--APPLICATION_SERVICE_ID
,APP_SERVICE_DATA_OWNER
,APP_SERVICE_VERSION
,DESCRIPTION
,LANGUAGE_CODE
,L_DATA_OWNER
,APP_SERVICE_L_VERSION
--ci_app_svc_acc
,ACCESS_MODE
--APPLICATION_SERVICE_ID
,OWNER_FLAG
,APP_SVC_ACC_VERSION
--SC_USR_GRP_USR
,USER_GROUP_EXPIRATION_DATE
,DATA_OWNER
,USER_ID
,USER_GROUP_ID
,SC_USR_GRP_USR_VERSION
--WC_CCB_SC_USER_S
,ACCESS_GROUP_CODE
,DASHBOARD_WIDTH
,DISPLAY_ALL_PREMISES_FLAG
,DISPLAY_PROFILE_CODE
,USER_EMAIL_ID
,FAVORITES_PROFILE_USER_ID
,FIRST_NAME
,HOME_PAGE_CODE
,USER_LANGUAGE_CODE
,LAST_NAME
,USER_DATA_OWNER
,PORTALS_PROFILE_USER_ID
,TO_DO_ENTRY_AGE_DAYS1
,TO_DO_ENTRY_AGE_DAYS2
,TENDER_SOURCE_CODE
--USER_ID
,USER_TYPE_FLAG
,USER_VERSION
--WC_CCB_SC_USER_GROUP_S
,USER_GROUP_DATA_OWNER
--USER_GROUP_ID
,USER_GROUP_VERSION
,USER_GROUP_DESCRIPTION
,USER_GROUP_LANGUAGE_CODE
,USER_GROUP_L_VERSION
,ACCESS_MODE_DESCRIPTION
)
AS
SELECT
WC_CCB_SC_USER_S.USER_ID || '::' || WC_CCB_SC_USR_GRP_USR_S.USER_GROUP_ID || '::' || WC_CCB_USR_GRP_PROF_S.APPLICATION_SERVICE_ID || '::' || WC_CCB_APP_SVC_ACC_S.ACCESS_MODE
    INTEGRATION_ID
,3000
,SYSDATE
,SYSDATE
,0
,wc_ccb_usr_grp_prof_s.APPLICATION_SERVICE_ID
,wc_ccb_usr_grp_prof_s.EXPIRATION_DATE
,wc_ccb_usr_grp_prof_s.DATA_OWNER
,wc_ccb_usr_grp_prof_s.USER_GROUP
,wc_ccb_usr_grp_prof_s.VERSION
--sc_app_service
--APPLICATION_SERVICE_ID
,wc_ccb_sc_app_service_s.DATA_OWNER
,wc_ccb_sc_app_service_s.APP_SERVICE_VERSION
,wc_ccb_sc_app_service_s.DESCRIPTION
,wc_ccb_sc_app_service_s.LANGUAGE_CODE
,wc_ccb_sc_app_service_s.L_DATA_OWNER
,wc_ccb_sc_app_service_s.APP_SERVICE_L_VERSION
--ci_app_svc_acc
,wc_ccb_app_svc_acc_s.ACCESS_MODE
--APPLICATION_SERVICE_ID
,wc_ccb_app_svc_acc_s.OWNER_FLAG
,wc_ccb_app_svc_acc_s.VERSION
--wc_ccb_sc_usr_grp_usr_s
,wc_ccb_sc_usr_grp_usr_s.EXPIRATION_DATE
,wc_ccb_sc_usr_grp_usr_s.DATA_OWNER
,wc_ccb_sc_usr_grp_usr_s.USER_ID
,wc_ccb_sc_usr_grp_usr_s.USER_GROUP_ID
,wc_ccb_sc_usr_grp_usr_s.SC_USR_GRP_USR_VERSION
--WC_CCB_SC_USER_S
,wc_ccb_sc_user_s.ACCESS_GROUP_CODE
,wc_ccb_sc_user_s.DASHBOARD_WIDTH
,wc_ccb_sc_user_s.DISPLAY_ALL_PREMISES_FLAG
,wc_ccb_sc_user_s.DISPLAY_PROFILE_CODE
,wc_ccb_sc_user_s.USER_EMAIL_ID
,wc_ccb_sc_user_s.FAVORITES_PROFILE_USER_ID
,wc_ccb_sc_user_s.FIRST_NAME
,wc_ccb_sc_user_s.HOME_PAGE_CODE
,wc_ccb_sc_user_s.LANGUAGE_CODE
,wc_ccb_sc_user_s.LAST_NAME
,wc_ccb_sc_user_s.DATA_OWNER
,wc_ccb_sc_user_s.PORTALS_PROFILE_USER_ID
,wc_ccb_sc_user_s.TO_DO_ENTRY_AGE_DAYS1
,wc_ccb_sc_user_s.TO_DO_ENTRY_AGE_DAYS2
,wc_ccb_sc_user_s.TENDER_SOURCE_CODE
--USER_ID
,wc_ccb_sc_user_s.USER_TYPE_FLAG
,wc_ccb_sc_user_s.USER_VERSION
--WC_CCB_SC_USER_GROUP_S
,wc_ccb_sc_user_group_s.DATA_OWNER
--USER_GROUP_ID
,wc_ccb_sc_user_group_s.USER_GROUP_VERSION
,wc_ccb_sc_user_group_s.DESCRIPTION
,wc_ccb_sc_user_group_s.LANGUAGE_CODE
,wc_ccb_sc_user_group_s.USER_GROUP_L_VERSION
,wc_ccb_lookup_val_s.description
from
    wc_ccb_sc_user_s,
    wc_ccb_sc_usr_grp_usr_s,
    wc_ccb_sc_user_group_s,
    wc_ccb_usr_grp_prof_s,
    wc_ccb_sc_app_service_s,
    wc_ccb_app_svc_acc_s,
    wc_ccb_lookup_val_s,
    wc_ccb_sc_access_cntl_s
where 1=1
    and wc_ccb_sc_user_s.integration_id = wc_ccb_sc_usr_grp_usr_s.user_id
    and wc_ccb_sc_usr_grp_usr_s.user_group_id = wc_ccb_sc_user_group_s.integration_id
    and wc_ccb_sc_user_group_s.integration_id = wc_ccb_usr_grp_prof_s.user_group
    and wc_ccb_usr_grp_prof_s.application_service_id = wc_ccb_sc_app_service_s.integration_id
    and wc_ccb_sc_app_service_s.integration_id = wc_ccb_app_svc_acc_s.application_service_id
    and 'ACCESS_MODE::' || wc_ccb_app_svc_acc_s.ACCESS_MODE = wc_ccb_lookup_val_s.integration_id
    and wc_ccb_app_svc_acc_s.access_mode = wc_ccb_sc_access_cntl_s.access_mode
    and wc_ccb_app_svc_acc_s.application_service_id = wc_ccb_sc_access_cntl_s.application_service_id
    and wc_ccb_usr_grp_prof_s.user_group = wc_ccb_sc_access_cntl_s.user_group_id
    and wc_ccb_usr_grp_prof_s.application_service_id = wc_ccb_sc_access_cntl_s.application_service_id
;


------------------------------------------------------------------------
--New 6/17/13 bn - Estimated Bill (AMR) per cycle
--UPDATED 6/24/13 bn - estimate months calc was wrong.  Changing it to count all Months an estimate was done for a Register.

--20130709 bn - This table will remain as a full load and will be truncate and reload.
--20130807 BN - Modifying view to add bill routing integration id as part of integration_id
            -- Also changed Prem Char and Mtr Char logic (wasn't getting most recent before)
--20130812 bn - Found the issue in the logic... We CANNOT join from sa_sp to MR directly.
--20130819 bn - Adding bseg end read date column to use in post-update for consecutive estimate months column.
--20131212 bn - fixing the issue of rejected records.
--20131216 bn - Adding logic to filter on Estimate Switch = 'Y'.  This will greatly increase the performance of the ETL load.
--                  - Both reports using this Fact table have the 'Y' filter.
CREATE OR REPLACE VIEW WC_CCB_SA_SP_BILL_MTR_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SP_ID,
SA_SP_ID,
SA_ID,
START_DATE,
START_MR_ID,
STOP_DATE,
USAGE_FLAG,
STOP_MR_ID,
VERSION,
USE_PCT,
CIS_DIVISION,
SA_TYPE_CODE,
--SA_ID,
START_OPTION_CODE,
SA_START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
ACCOUNT_CID,
SA_PREMISE_CID,
CURRENCY_CID,
START_METER_READ_ID,
START_METER_CONFIGURATION_ID,
START_READ_DATE,
START_USE_ON_BILL_SW,
START_MR_VERSION,
START_MR_SOURCE_CODE,
START_METER_READER_ID,
START_MR_DATA_AREA,
METER_CONFIG_EFFECTIVE_DATE,
METER_CONFIG_DATA_AREA,
METER_CONFIG_ID,
METER_CONFIG_TYPE_CODE,
--METER_ID,
MTR_CONFIG_VERSION,
BADGE_NUMBER,
LONG_DESCRIPTION,
MANUFACTURER_CODE,
MODEL_CODE,
METER_DATA_AREA,
METER_ID,
METER_STATUS,
METER_TYPE_CODE,
RECEIVED_DATE,
RETIRED_DATE,
RETIRE_REASON_CODE,
SERIAL_NUMBER,
MTR_VERSION,
ADHOC_CHARACTERISTIC_VALUE,
CHARACTERISTIC_TYPE_CODE,
CHARACTERISTIC_VALUE,
CHAR_VALUE_FK1,
CHAR_VALUE_FK2,
CHAR_VALUE_FK3,
CHAR_VALUE_FK4,
CHAR_VALUE_FK5,
METER_CHAR_EFFECTIVE_DATE,
--METER_ID,
MTR_CHAR_VERSION,
EQUIPMENT_COMMENT,
EQUIPMENT_COUNT,
MTR_EQ_INSTALL_DATE,
EQUIPMENT_ID,
--METER_ID,
REMOVAL_DATE,
MTR_EQ_VERSION,
ITEM_CID,                        --LOOKUP ITEM DIM
DISCONNECTED_LOCATION_CODE,
--SP_ID,
SP_TYPE_CODE,
PREMISE_ID,
SP_STATUS_FLAG,
SP_INSTALL_DATE,
SP_SOURCE_STATUS_FLAG,
MR_SERVICE_CYCLE_CODE,
MR_SERVICE_ROUTE_CODE,
METER_LOCATION_CODE,
MR_SERVICE_SYSCLE_ROUTE_SEQ,
FACILITY_LEVEL_1_CODE,
METER_LOCATION_DETAILS,
FACILITY_LEVEL_2_CODE,
FACILITY_LEVEL_3_CODE,
SP_VERSION,
SP_LONG_DESCRIPTION,
ABOLISHED_DATE,
OVERRIDE_PREMISE_FLD_INFO_FLAG,
MR_INSTRUCTION_CODE,
MR_WARNING_CODE,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
MR_INSTRUCTION_DETAILS,
SP_DATA_AREA,
DISCONNECTED_LOCATION_CID,
PREMISE_CID,
METER_READ_CYCLE_CID,
START_REGISTER_READING_ID,
REG_START_METER_READ_ID,
START_READ_SEQUENCE,
START_REGISTER_ID,
START_READ_TYPE_FLAG,
START_REGISTER_READING,
START_LOW_LIMIT,
START_HIGH_LIMIT,
START_REVIEW_HIGH_LOW_SW,
START_TRENDED_SW,
START_REG_READ_VERSION,
PREM_CHAR_CHARACTERISTIC_VALUE,
MAIL_TO_CUST_ADDRESS1,
MAIL_TO_CUST_ADDRESS2,
MAIL_TO_CUST_CITY,
MAIL_TO_CUST_STATE,
MAIL_TO_CUST_POSTAL,
CUSTOMER_NAME,
ESTIMATE_DW,
BILL_STATUS_FLAG,
READ_CODE_VALUE,
SA_STATUS_FLAG_VALUE,
MONTHLY_ESTIMATES_PER_METER,
BSEG_END_READ_DATE
)
AS
SELECT distinct
--CI_SA_SP
WC_CCB_SA_SP_S.INTEGRATION_ID || '::' || WC_CCB_REG_READ_S.START_REGISTER_ID || '::' || WC_CCB_MTR_EQ_S.EQUIPMENT_ID || '::' || WC_CCB_REG_READ_S.START_REGISTER_READING_ID || '::' || WC_CCB_ACCT_S.ACCOUNT_ID || '::' || WC_CCB_BILL_S.BILL_ID || '::' || WC_CCB_BSEG_S.INTEGRATION_ID || '::' || WC_CCB_BILL_ROUTING_S.INTEGRATION_ID,
WC_CCB_SA_SP_S.DATASOURCE_NUM_ID,
WC_CCB_SA_SP_S.W_INSERT_DT,
WC_CCB_SA_SP_S.W_UPDATE_DT,
WC_CCB_SA_SP_S.W_LOAD_NUMBER,
WC_CCB_SA_SP_S.SP_ID,
WC_CCB_SA_SP_S.SA_SP_ID,
WC_CCB_SA_SP_S.SA_ID,
WC_CCB_SA_SP_S.START_DATE,
WC_CCB_SA_SP_S.START_MR_ID,
WC_CCB_SA_SP_S.STOP_DATE,
WC_CCB_SA_SP_S.USAGE_FLAG,
WC_CCB_SA_SP_S.STOP_MR_ID,
WC_CCB_SA_SP_S.VERSION,
WC_CCB_SA_SP_S.USE_PCT,
--CI_SA
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
--SA_ID,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
--CI_MR
WC_CCB_MR_S.START_METER_READ_ID,
WC_CCB_MR_S.START_METER_CONFIGURATION_ID,
WC_CCB_MR_S.START_READ_DATE,
WC_CCB_MR_S.START_USE_ON_BILL_SW,
WC_CCB_MR_S.START_MR_VERSION,
WC_CCB_MR_S.START_MR_SOURCE_CODE,
WC_CCB_MR_S.START_METER_READER_ID,
WC_CCB_MR_S.START_MR_DATA_AREA,
--CI_MTR_CONFIG
WC_CCB_MTR_CONFIG_S.EFFECTIVE_DATE,
WC_CCB_MTR_CONFIG_S.METER_CONFIG_DATA_AREA,
WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID,
WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE,
--METER_ID,
WC_CCB_MTR_CONFIG_S.MTR_CONFIG_VERSION,
--CI_MTR
WC_CCB_MTR_S.BADGE_NUMBER,
WC_CCB_MTR_S.LONG_DESCRIPTION,
WC_CCB_MTR_S.MANUFACTURER_CODE,
WC_CCB_MTR_S.MODEL_CODE,
WC_CCB_MTR_S.METER_DATA_AREA,
WC_CCB_MTR_S.METER_ID,
WC_CCB_MTR_S.METER_STATUS,
WC_CCB_MTR_S.METER_TYPE_CODE,
WC_CCB_MTR_S.RECEIVED_DATE,
WC_CCB_MTR_S.RETIRED_DATE,
WC_CCB_MTR_S.RETIRE_REASON_CODE,
WC_CCB_MTR_S.SERIAL_NUMBER,
WC_CCB_MTR_S.MTR_VERSION,
--CI_MTR_CHAR
WC_CCB_MTR_CHAR_S.ADHOC_CHARACTERISTIC_VALUE,
WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE,
WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE,
WC_CCB_MTR_CHAR_S.CHAR_VALUE_FK1,
WC_CCB_MTR_CHAR_S.CHAR_VALUE_FK2,
WC_CCB_MTR_CHAR_S.CHAR_VALUE_FK3,
WC_CCB_MTR_CHAR_S.CHAR_VALUE_FK4,
WC_CCB_MTR_CHAR_S.CHAR_VALUE_FK5,
WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE,
--METER_ID,
WC_CCB_MTR_CHAR_S.MTR_CHAR_VERSION,
--CI_MTR_EQ
WC_CCB_MTR_EQ_S.EQUIPMENT_COMMENT,
WC_CCB_MTR_EQ_S.EQUIPMENT_COUNT,
null, --20131212 bn - issue with meter/equipment being installed multiple times --WC_CCB_MTR_EQ_S.INSTALL_DATE,
WC_CCB_MTR_EQ_S.EQUIPMENT_ID,
--METER_ID,
WC_CCB_MTR_EQ_S.REMOVAL_DATE,
WC_CCB_MTR_EQ_S.MTR_EQ_VERSION,
WC_CCB_MTR_EQ_S.EQUIPMENT_ID,
--CI_SP
WC_CCB_SP_S.DISCONNECTED_LOCATION_CODE,
--SP_ID,
WC_CCB_SP_S.SP_TYPE_CODE,
WC_CCB_SP_S.PREMISE_ID,
WC_CCB_SP_S.SP_STATUS_FLAG,
WC_CCB_SP_S.INSTALL_DATE,
WC_CCB_SP_S.SP_SOURCE_STATUS_FLAG,
WC_CCB_SP_S.MR_SERVICE_CYCLE_CODE,
WC_CCB_SP_S.MR_SERVICE_ROUTE_CODE,
WC_CCB_SP_S.METER_LOCATION_CODE,
WC_CCB_SP_S.MR_SERVICE_SYSCLE_ROUTE_SEQ,
WC_CCB_SP_S.FACILITY_LEVEL_1_CODE,
WC_CCB_SP_S.METER_LOCATION_DETAILS,
WC_CCB_SP_S.FACILITY_LEVEL_2_CODE,
WC_CCB_SP_S.FACILITY_LEVEL_3_CODE,
WC_CCB_SP_S.SP_VERSION,
WC_CCB_SP_S.SP_LONG_DESCRIPTION,
WC_CCB_SP_S.ABOLISHED_DATE,
WC_CCB_SP_S.OVERRIDE_PREMISE_FLD_INFO_FLAG,
WC_CCB_SP_S.MR_INSTRUCTION_CODE,
WC_CCB_SP_S.MR_WARNING_CODE,
WC_CCB_SP_S.KEY_SW,
WC_CCB_SP_S.KEY_ID,
WC_CCB_SP_S.OK_TO_ENTER_SW,
WC_CCB_SP_S.MR_INSTRUCTION_DETAILS,
WC_CCB_SP_S.SP_DATA_AREA,
WC_CCB_SP_S.DISCONNECTED_LOCATION_CID,
WC_CCB_SP_S.PREMISE_CID,
WC_CCB_SP_S.METER_READ_CYCLE_CID,
--CI_REG_READ
WC_CCB_REG_READ_S.START_REGISTER_READING_ID,
WC_CCB_REG_READ_S.START_METER_READ_ID,
WC_CCB_REG_READ_S.START_READ_SEQUENCE,
WC_CCB_REG_READ_S.START_REGISTER_ID,
WC_CCB_REG_READ_S.START_READ_TYPE_FLAG,
WC_CCB_REG_READ_S.START_REGISTER_READING,
WC_CCB_REG_READ_S.START_LOW_LIMIT,
WC_CCB_REG_READ_S.START_HIGH_LIMIT,
WC_CCB_REG_READ_S.START_REVIEW_HIGH_LOW_SW,
WC_CCB_REG_READ_S.START_TRENDED_SW,
WC_CCB_REG_READ_S.START_REG_READ_VERSION,
WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE,
WC_CCB_BILL_ROUTING_S.ADDRESS1 MAIL_TO_CUST_ADDRESS1,
WC_CCB_BILL_ROUTING_S.ADDRESS2 MAIL_TO_CUST_ADDRESS2,
WC_CCB_BILL_ROUTING_S.CITY MAIL_TO_CUST_CITY,
WC_CCB_BILL_ROUTING_S.STATE MAIL_TO_CUST_STATE,
WC_CCB_BILL_ROUTING_S.POSTAL MAIL_TO_CUST_POSTAL,
WC_CCB_BILL_ROUTING_S.ENTITY_NAME1,
WC_CCB_BSEG_S.ESTIMATE_DW,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
wc_ccb_lookup_val_s.DESCRIPTION,
LOOKUP2.DESCRIPTION,
MONTH_ESTIMATE.MONTH_ESTIMATE_COUNT --20130624 BN
, wc_ccb_bseg_read_s.END_READ_DATE --20130819 BN - Used to calculate consecutive months.
FROM
    WC_CCB_SA_SP_S, --
    WC_CCB_SA_S, --
    WC_CCB_MR_S,
    WC_CCB_MTR_CONFIG_S,
    WC_CCB_MTR_S,
    (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE'
          ) WC_CCB_MTR_CHAR_S,  --20130807 bn - modified logic to select most recent effective date

    (select distinct
        EQUIPMENT_COMMENT,
        EQUIPMENT_COUNT,
        EQUIPMENT_ID,
        METER_ID,
        REMOVAL_DATE,
        MTR_EQ_VERSION
        from wc_ccb_mtr_eq_s)     WC_CCB_MTR_EQ_S,  --20131212 bn - to resolve issue of rejected records.
    WC_CCB_SP_S, --
    WC_CCB_REG_READ_S,
    WC_CCB_BSEG_S,
    WC_CCB_BSEG_READ_S,
    (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC')
                AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
    ) WC_CCB_PREM_CHAR_S, --20130807 bn - modified logic to select most recent effective date
    WC_CCB_ACCT_S,
    (SELECT --MAX(CREATE_DATE) --20131216 BN - Why do a MAX?
    CREATE_DATE, ACCOUNT_ID, INTEGRATION_ID BILL_ID,
            BILL_STATUS_FLAG
     FROM WC_CCB_BILL_S
     --GROUP BY ACCOUNT_ID, INTEGRATION_ID, BILL_STATUS_FLAG  --20131216 BN - Why do a MAX?
     )    WC_CCB_BILL_S,
    WC_CCB_BILL_ROUTING_S,
    wc_ccb_lookup_val_s,
    wc_ccb_lookup_val_s LOOKUP2,
    (    select count(distinct to_char(END_READ_DATE, 'MON-YYYY')) month_estimate_count, start_register_id
         from wc_ccb_bseg_read_s, wc_ccb_reg_read_s
         where 1=1
            and wc_ccb_bseg_read_s.end_register_read_id = wc_ccb_reg_read_s.INTEGRATION_ID
            and wc_ccb_reg_read_s.start_read_type_flag in ('30','35','40')
         group by start_register_id
        ) MONTH_ESTIMATE    --20130624 BN
--    WC_CCB_ACCT_PER_S
        , WC_CCB_SP_MTR_HIST_S
WHERE 1=1
    AND WC_CCB_SA_SP_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID  --20131216 bn - removed outerjoin on sa
    AND WC_CCB_SA_SP_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID  --20131216 bn - removed outerjoin on sp
    AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID (+)
    AND WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE(+) IS NULL
    AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID = WC_CCB_MTR_CONFIG_S.INTEGRATION_ID (+)
    --AND WC_CCB_SA_SP_S.START_MR_ID = WC_CCB_MR_S.INTEGRATION_ID (+)
    AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID = WC_CCB_MR_S.START_METER_CONFIGURATION_ID  (+)
    AND WC_CCB_MR_S.START_METER_READ_ID = WC_CCB_REG_READ_S.START_METER_READ_ID
    AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID (+)
    AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID (+)
    --AND WC_CCB_MTR_CHAR_S.EFFDT(+) = (SELECT MAX(A.EFFDT) FROM WC_CCB_MTR_CHAR_S A
    --                                  WHERE A.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE'
    --                                    AND A.MTR_ID = WC_CCB_MTR_CHAR_S.MTR_ID)
    --AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE (+) = 'MTRSIZE'
    AND WC_CCB_SP_S.PREMISE_CID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)
    --AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE (+) = 'OFCLOC'
    AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_EQ_S.METER_ID (+)
    AND WC_CCB_MTR_EQ_S.REMOVAL_DATE (+) IS NULL            --20130813 bn - new b/c it is producing duplicates
    AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID   --20131216 bn - removed outerjoin on account
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_BILL_S.ACCOUNT_ID   --20131216 bn - removed outerjoin on bill
    AND WC_CCB_BILL_S.BILL_ID = WC_CCB_BILL_ROUTING_S.BILL_ID (+)
    AND WC_CCB_BILL_S.BILL_ID = WC_CCB_BSEG_S.BILL_ID  --20131216 bn - removed outerjoin on bseg
    AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID (+)
    AND WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID = WC_CCB_REG_READ_S.START_REGISTER_READING_ID (+)
    and 'READ_TYPE_FLG::' || WC_CCB_REG_READ_S.START_READ_TYPE_FLAG = wc_ccb_lookup_val_s.integration_id (+)
    and 'SA_STATUS_FLG::' || WC_CCB_SA_S.SA_STATUS_FLAG = LOOKUP2.integration_id (+)
    AND MONTH_ESTIMATE.START_REGISTER_ID (+) = WC_CCB_REG_READ_S.START_REGISTER_ID            --20130624 BN  --20130813 bn - adding outer join
--    AND WC_CCB_ACCT_S.ACCOUNT_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID (+)
--    AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
AND WC_CCB_BSEG_S.ESTIMATE_DW = 'Y'  --20131216 BN - Adding logic for tuning purposes.  This filter is in both reports that this table is used in.
and wc_ccb_sa_s.sa_status_flag = '20'   --20131216 BN - Adding logic for tuning purposes.
;






--20130619 BN - for CT TOFF Monthly Report and TOFF Monthly Check List
CREATE OR REPLACE VIEW WC_CCB_SA_SP_FA_STEP_STG_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SA_SP_ID,
   FA_ID,
   SA_ID,
   SP_ID,
   FIELD_ACTIVITY_TYPE_FLAG,
   SA_SP_FA_VERSION,
   ACTIVITY_TYPE_CODE,
   FA_CANCEL_REASON_CODE,
   SERVICE_POINT_ID,
   FA_PRIORITY_FLAG,
   FA_CREATED_BY,
   SCHEDULE_DATE,
   FA_STATUS_FLAG,
   ELIGIBLE_FOR_DISPATCH_SW,
   DISPATCH_GROUP_CODE,
   FIELD_ORDER_ID,
   CREATE_DATE,
   TEST_SELECTION_ID,
   USER_ID,
   INSTRUCTIONS,
   FA_LONG_DESCRIPTION,
   FA_VERSION,
   APPT_PERIOD_ID,
   FA_EXTERNAL_ID,
   FA_INTERMEDIATE_STATUS_FLAG,
   FA_RESCHEDULE_REASON_CODE,
   FA_DATA_AREA,
   STEP_SEQUENCE_NUMBER,
   FA_STEP_BY_ACTION_FLAG,
   SPAWNED_FA_ID,
   FA_STEP_ACCOUNT_ID,
   CUSTOMER_CONTACT_ID,
   STEP_UPDATE_ENTITY_FLAG,
   SP_ITEM_HISTORY_ID,
   SP_METER_HISTORY_ID,
   ITEM_ID,
   METER_READ_ID,
   METER_CFG_METER_ID,
   METER_ID,
   FA_STEP_VERSION,
   DEVICE_TEST_ID,
   FA_STEP_ACCOUNT_CID,
   CUSTOMER_CONTACT_CID,
   ITEM_CID,
   UPLOAD_STATUS,
   WORKED_BY,
   WORK_DATE,
   FA_STAGE_UP_VERSION,
   FA_STAGE_UP_LONG_DESCRIPTION,
   CIS_DIVISION,
   SA_TYPE_CODE,
   START_OPTION_CODE,
   START_DATE,
   SA_STATUS_FLAG,
   SA_ACCOUNT_ID,
   END_DATE,
   OLD_ACCOUNT_ID,
   CUSTOMER_READ_FLAG,
   ALLOW_ESTIMATES_SW,
   SIC_CODE,
   CHARACTERISTIC_PREMISE_ID,
   TOTAL_TO_BILL_AMOUNT,
   CURRENCY_CODE,
   SA_VERSION,
   SA_RELATIONSHIP_ID,
   START_REASON_FLAG,
   STOP_REASON_FLAG,
   START_REQUESTED_BY,
   STOP_REQUESTED_BY,
   MAXIMUM_BILL_THRESHOLD_AMOUNT,
   DEPOSIT_INTEREST_CALC_DATE,
   CIAC_REVIEW_DATE,
   BUSINESS_ACTIVITY_DESCRIPTION,
   IB_SA_CUTOFF_TIME,
   IB_SA_START_DAY_OPTION,
   ENROLLMENT_ID,
   SPECIAL_USAGE_FLAG,
   PROPOSAL_SA_STATUS_FLAG,
   PROPOSAL_DECLINE_REASON_CODE,
   PROPOSAL_SA_ID,
   NUMBER_OF_PAYMENT_PERIODS,
   NBB_RECOMMENDATION_RULE,
   EXPIRATION_DATE,
   RENEWAL_DATE,
   NBB_AUTOPAY_FLAG,
   SA_DATA_AREA,
   DIVISION_CID,
   SA_ACCOUNT_CID,
   PREMISE_CID,
   CURRENCY_CID
)
AS
   SELECT                                                           --sa_sp_fa
   WC_CCB_SA_SP_FA_S.INTEGRATION_ID || '::' || WC_CCB_FA_STEP_S.INTEGRATION_ID || '::' || WC_CCB_FA_STAGE_UP_S.INTEGRATION_ID,
   3000,
   SYSDATE,
   SYSDATE,
   0,
         WC_CCB_SA_SP_FA_S.SA_SP_ID,
          WC_CCB_SA_SP_FA_S.FA_ID,
          WC_CCB_SA_SP_FA_S.SA_ID,
          WC_CCB_SA_SP_FA_S.SP_ID,
          WC_CCB_SA_SP_FA_S.FIELD_ACTIVITY_TYPE_FLAG,
          WC_CCB_SA_SP_FA_S.SA_SP_FA_VERSION,
          --fa
          --WC_CCB_FA_S.FA_ID,
          WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
          WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
          WC_CCB_FA_S.SERVICE_POINT_ID,
          WC_CCB_FA_S.FA_PRIORITY_FLAG,
          WC_CCB_FA_S.FA_CREATED_BY,
          WC_CCB_FA_S.SCHEDULE_DATE,
          WC_CCB_FA_S.FA_STATUS_FLAG,
          WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
          WC_CCB_FA_S.DISPATCH_GROUP_CODE,
          WC_CCB_FA_S.FIELD_ORDER_ID,
          WC_CCB_FA_S.CREATE_DATE,
          WC_CCB_FA_S.TEST_SELECTION_ID,
          WC_CCB_FA_S.USER_ID,
          WC_CCB_FA_S.INSTRUCTIONS,
          WC_CCB_FA_S.LONG_DESCRIPTION FA_LONG_DESCRIPTION,
          WC_CCB_FA_S.FA_VERSION,
          WC_CCB_FA_S.APPT_PERIOD_ID,
          WC_CCB_FA_S.FA_EXTERNAL_ID,
          WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
          WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
          WC_CCB_FA_S.FA_DATA_AREA,
          --fa_step
          WC_CCB_FA_STEP_S.STEP_SEQUENCE_NUMBER,
          WC_CCB_FA_STEP_S.FA_STEP_BY_ACTION_FLAG,
          WC_CCB_FA_STEP_S.SPAWNED_FA_ID,
          WC_CCB_FA_STEP_S.ACCOUNT_ID FA_STEP_ACCOUNT_ID,
          WC_CCB_FA_STEP_S.CUSTOMER_CONTACT_ID,
          WC_CCB_FA_STEP_S.STEP_UPDATE_ENTITY_FLAG,
          WC_CCB_FA_STEP_S.SP_ITEM_HISTORY_ID,
          WC_CCB_FA_STEP_S.SP_METER_HISTORY_ID,
          --WC_CCB_FA_STEP_S.SP_ID,
          WC_CCB_FA_STEP_S.ITEM_ID,
          WC_CCB_FA_STEP_S.METER_READ_ID,
          WC_CCB_FA_STEP_S.METER_CFG_METER_ID,
          WC_CCB_FA_STEP_S.METER_ID,
          WC_CCB_FA_STEP_S.FA_STEP_VERSION,
          WC_CCB_FA_STEP_S.DEVICE_TEST_ID,
          WC_CCB_FA_STEP_S.ACCOUNT_CID FA_STEP_ACCOUNT_CID,
          WC_CCB_FA_STEP_S.CUSTOMER_CONTACT_CID,
          WC_CCB_FA_STEP_S.ITEM_CID,
          --fa_stage_up
          WC_CCB_FA_STAGE_UP_S.UPLOAD_STATUS,
          WC_CCB_FA_STAGE_UP_S.WORKED_BY,
          WC_CCB_FA_STAGE_UP_S.WORK_DATE,
          WC_CCB_FA_STAGE_UP_S.FA_STAGE_UP_VERSION,
          WC_CCB_FA_STAGE_UP_S.LONG_DESCRIPTION FA_STAGE_UP_LONG_DESCRIPTION,
          --sa
          WC_CCB_SA_S.CIS_DIVISION,
          WC_CCB_SA_S.SA_TYPE_CODE,
          --WC_CCB_SA_S.SA_ID,
          WC_CCB_SA_S.START_OPTION_CODE,
          WC_CCB_SA_S.START_DATE,
          WC_CCB_SA_S.SA_STATUS_FLAG,
          WC_CCB_SA_S.ACCOUNT_ID SA_ACCOUNT_ID,
          WC_CCB_SA_S.END_DATE,
          WC_CCB_SA_S.OLD_ACCOUNT_ID,
          WC_CCB_SA_S.CUSTOMER_READ_FLAG,
          WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
          WC_CCB_SA_S.SIC_CODE,
          WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
          WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
          WC_CCB_SA_S.CURRENCY_CODE,
          WC_CCB_SA_S.SA_VERSION,
          WC_CCB_SA_S.SA_RELATIONSHIP_ID,
          WC_CCB_SA_S.START_REASON_FLAG,
          WC_CCB_SA_S.STOP_REASON_FLAG,
          WC_CCB_SA_S.START_REQUESTED_BY,
          WC_CCB_SA_S.STOP_REQUESTED_BY,
          WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
          WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
          WC_CCB_SA_S.CIAC_REVIEW_DATE,
          WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
          WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
          WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
          WC_CCB_SA_S.ENROLLMENT_ID,
          WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
          WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
          WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
          WC_CCB_SA_S.PROPOSAL_SA_ID,
          WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
          WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
          WC_CCB_SA_S.EXPIRATION_DATE,
          WC_CCB_SA_S.RENEWAL_DATE,
          WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
          WC_CCB_SA_S.SA_DATA_AREA,
          WC_CCB_SA_S.DIVISION_CID,
          WC_CCB_SA_S.ACCOUNT_CID SA_ACCOUNT_CID,
          WC_CCB_SA_S.PREMISE_CID,
          WC_CCB_SA_S.CURRENCY_CID
     FROM WC_CCB_FA_STEP_S,
          WC_CCB_FA_STAGE_UP_S,
          WC_CCB_FA_S,
          WC_CCB_SA_SP_FA_S,
          WC_CCB_SA_S
    WHERE     1 = 1
          AND WC_CCB_SA_SP_FA_S.SA_ID = WC_CCB_SA_S.SA_ID(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_SA_SP_FA_S.FA_ID
          AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_FA_STEP_S.FA_ID(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_FA_STAGE_UP_S.FA_ID(+)
-- AND WC_CCB_SA_S.SA_STATUS_FLAG = 40 -- FILTER IN Obiee
-- and WC_CCB_FA_S.ACTIVITY_TYPE_CODE = 'M-STOP' --FILTER IN OBIEE
;

--Add join to the above to go get SP.  In RPD, add join from SP prem to Prem.

--20130620 BN - for PMG Insurance Report
--20131015 bn - This table is now only for the PMG Insurance report.
--	We are hardcoding the staging view to only bring in SA Type Code = GINS and Payment FTs
--20131104 bn - added insurance_rates_cid for pmg insurance report
CREATE OR REPLACE VIEW MDW.WC_CCB_SA_FT_CONT_PAY_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SA_CIS_DIVISION,
   SA_TYPE_CODE,
   START_OPTION_CODE,
   SA_START_DATE,
   SA_STATUS_FLAG,
   ACCOUNT_ID,
   SA_END_DATE,
   OLD_ACCOUNT_ID,
   CUSTOMER_READ_FLAG,
   ALLOW_ESTIMATES_SW,
   SIC_CODE,
   CHARACTERISTIC_PREMISE_ID,
   TOTAL_TO_BILL_AMOUNT,
   SA_CURRENCY_CODE,
   SA_VERSION,
   SA_RELATIONSHIP_ID,
   START_REASON_FLAG,
   STOP_REASON_FLAG,
   START_REQUESTED_BY,
   STOP_REQUESTED_BY,
   MAXIMUM_BILL_THRESHOLD_AMOUNT,
   DEPOSIT_INTEREST_CALC_DATE,
   CIAC_REVIEW_DATE,
   BUSINESS_ACTIVITY_DESCRIPTION,
   IB_SA_CUTOFF_TIME,
   IB_SA_START_DAY_OPTION,
   ENROLLMENT_ID,
   SPECIAL_USAGE_FLAG,
   PROPOSAL_SA_STATUS_FLAG,
   PROPOSAL_DECLINE_REASON_CODE,
   PROPOSAL_SA_ID,
   NUMBER_OF_PAYMENT_PERIODS,
   NBB_RECOMMENDATION_RULE,
   EXPIRATION_DATE,
   RENEWAL_DATE,
   NBB_AUTOPAY_FLAG,
   SA_DATA_AREA,
   SA_DIVISION_CID,
   ACCOUNT_CID,
   PREMISE_CID,
   SA_CURRENCY_CID,
   PAY_SEGMENT_ID,
   PAY_SEG_CURRENCY_CODE,
   PAYMENT_ID,
   PAY_SEGMENT_AMOUNT,
   PAY_SEG_VERSION,
   ADJUSTMENT_ID,
   PAY_SEG_MATCH_ID,
   FT_ID,
   SIBLING_ID,
   PARENT_ID,
   GL_DIVISION,
   FT_CIS_DIVISION,
   CURRENCY_CODE,
   FT_TYPE_FLAG,
   CURRENT_AMOUNT,
   PAYOFF_AMOUNT,
   CREATE_DATE,
   FROZEN_POSTED_TO_ACCOUNT_SW,
   FROZEN_BY,
   FREEZE_DATE,
   ARREARS_DATE,
   CORRECTION_DW,
   REDUNDANT_DW,
   NEW_CHARGE_SW,
   SHOW_ON_BILL_SW,
   NOT_IN_ARREARS_SW,
   BILL_ID,
   ACCOUNTING_DATE,
   FT_VERSION,
   TRANSFERRED_OUT_SW,
   POST_TO_GL_ON_OR_AFTER_DATE,
   GL_DISTRIBUTION_STATUS,
   SCHEDULED_DISTRIBUTION_DATE,
   BALANCE_CONTROL_GROUP_ID,
   FT_MATCH_EVENT_ID,
   GL_DIVISION_CID,
   FT_DIVISION_CID,
   FT_CURRENCY_CID,
   BILL_FACTOR_CODE,
   CONTRACT_TERM_TYPE,
   CONT_TERM_END_DATE,
   PERCENT_EXEMPMT,
   SA_ID,
   CONT_TERM_START_DATE,
   TAX_CERTIFICATION,
   TAX_EXEMPT_TYPE_CODE,
   TIME_OF_USER_GROUP_CODE,
   VAL,
   SA_CONTERM_VERSION,
   PERSON_NAME,
   PERSON_NAME_UPPERCASE,
   NAME_TYPE,
   PERSON_ID,
   PRIMARY_NAME_FLAG,
   SEQUENCE_NUMBER,
   PER_NAME_VERSION,
   INSURANCE_RATES_CID  --20131104 BN - for pmg insurance report
)
AS
   SELECT /*+ first_rows */
      WC_CCB_SA_S.INTEGRATION_ID || '::' || WC_CCB_FT_S.INTEGRATION_ID || '::' || WC_CCB_PAY_SEG_S.INTEGRATION_ID
       || '::' || WC_CCB_SA_CONTERM_S.INTEGRATION_ID,
   3000,
   SYSDATE,
   SYSDATE,
   0,
        --CI_SA
         WC_CCB_SA_S.CIS_DIVISION SA_CIS_DIVISION,
          WC_CCB_SA_S.SA_TYPE_CODE,
          --SA_ID,
          WC_CCB_SA_S.START_OPTION_CODE,
          WC_CCB_SA_S.START_DATE SA_START_DATE,
          WC_CCB_SA_S.SA_STATUS_FLAG,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_SA_S.END_DATE SA_END_DATE,
          WC_CCB_SA_S.OLD_ACCOUNT_ID,
          WC_CCB_SA_S.CUSTOMER_READ_FLAG,
          WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
          WC_CCB_SA_S.SIC_CODE,
          WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
          WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
          WC_CCB_SA_S.CURRENCY_CODE SA_CURRENCY_CODE,
          WC_CCB_SA_S.SA_VERSION,
          WC_CCB_SA_S.SA_RELATIONSHIP_ID,
          WC_CCB_SA_S.START_REASON_FLAG,
          WC_CCB_SA_S.STOP_REASON_FLAG,
          WC_CCB_SA_S.START_REQUESTED_BY,
          WC_CCB_SA_S.STOP_REQUESTED_BY,
          WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
          WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
          WC_CCB_SA_S.CIAC_REVIEW_DATE,
          WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
          WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
          WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
          WC_CCB_SA_S.ENROLLMENT_ID,
          WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
          WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
          WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
          WC_CCB_SA_S.PROPOSAL_SA_ID,
          WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
          WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
          WC_CCB_SA_S.EXPIRATION_DATE,
          WC_CCB_SA_S.RENEWAL_DATE,
          WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
          WC_CCB_SA_S.SA_DATA_AREA,
          WC_CCB_SA_S.DIVISION_CID SA_DIVISION_CID,
          WC_CCB_SA_S.ACCOUNT_CID,
          WC_CCB_SA_S.PREMISE_CID,
          WC_CCB_SA_S.CURRENCY_CID SA_CURRENCY_CID,
          --CI_PAY_SEG
          WC_CCB_PAY_SEG_S.PAY_SEGMENT_ID,
          WC_CCB_PAY_SEG_S.CURRENCY_CODE PAY_SEG_CURRENCY_CODE,
          WC_CCB_PAY_SEG_S.PAYMENT_ID,
          WC_CCB_PAY_SEG_S.PAY_SEGMENT_AMOUNT,
          WC_CCB_PAY_SEG_S.PAY_SEG_VERSION,
          WC_CCB_PAY_SEG_S.ADJUSTMENT_ID,
          WC_CCB_PAY_SEG_S.MATCH_EVENT_ID PAY_SEG_MATCH_ID,
          --CI_FT
          WC_CCB_FT_S.FT_ID,
          WC_CCB_FT_S.SIBLING_ID,
          WC_CCB_FT_S.PARENT_ID,
          WC_CCB_FT_S.GL_DIVISION,
          WC_CCB_FT_S.CIS_DIVISION FT_CIS_DIVISION,
          WC_CCB_FT_S.CURRENCY_CODE,
          WC_CCB_FT_S.FT_TYPE_FLAG,
          WC_CCB_FT_S.CURRENT_AMOUNT,
          WC_CCB_FT_S.PAYOFF_AMOUNT,
          WC_CCB_FT_S.CREATE_DATE,
          WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW,
          WC_CCB_FT_S.FROZEN_BY,
          WC_CCB_FT_S.FREEZE_DATE,
          WC_CCB_FT_S.ARREARS_DATE,
          WC_CCB_FT_S.CORRECTION_DW,
          WC_CCB_FT_S.REDUNDANT_DW,
          WC_CCB_FT_S.NEW_CHARGE_SW,
          WC_CCB_FT_S.SHOW_ON_BILL_SW,
          WC_CCB_FT_S.NOT_IN_ARREARS_SW,
          WC_CCB_FT_S.BILL_ID,
          WC_CCB_FT_S.ACCOUNTING_DATE,
          WC_CCB_FT_S.FT_VERSION,
          WC_CCB_FT_S.TRANSFERRED_OUT_SW,
          WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE,
          WC_CCB_FT_S.GL_DISTRIBUTION_STATUS,
          WC_CCB_FT_S.SCHEDULED_DISTRIBUTION_DATE,
          WC_CCB_FT_S.BALANCE_CONTROL_GROUP_ID,
          WC_CCB_FT_S.MATCH_EVENT_ID FT_MATCH_EVENT_ID,
          WC_CCB_FT_S.GL_DIVISION_CID,
          WC_CCB_FT_S.DIVISION_CID FT_DIVISION_CID,
          WC_CCB_FT_S.CURRENCY_CID FT_CURRENCY_CID,
          --CI_SA_CONTERM
          WC_CCB_SA_CONTERM_S.BILL_FACTOR_CODE,
          WC_CCB_SA_CONTERM_S.CONTRACT_TERM_TYPE,
          WC_CCB_SA_CONTERM_S.END_DATE CONT_TERM_END_DATE,
          WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT,
          WC_CCB_SA_CONTERM_S.SA_ID,
          WC_CCB_SA_CONTERM_S.START_DATE CONT_TERM_START_DATE,
          WC_CCB_SA_CONTERM_S.TAX_CERTIFICATION,
          WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
          WC_CCB_SA_CONTERM_S.TIME_OF_USER_GROUP_CODE,
          WC_CCB_SA_CONTERM_S.VAL,
          WC_CCB_SA_CONTERM_S.SA_CONTERM_VERSION,
          --CI_PER_NAME
          WC_CCB_PER_NAME_S.PERSON_NAME,
          WC_CCB_PER_NAME_S.PERSON_NAME_UPPERCASE,
          WC_CCB_PER_NAME_S.NAME_TYPE,
          WC_CCB_PER_NAME_S.PERSON_ID,
          WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG,
          WC_CCB_PER_NAME_S.SEQUENCE_NUMBER,
          WC_CCB_PER_NAME_S.PER_NAME_VERSION,
		  WC_CCB_SA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE  --20131104 BN - for pmg insurance report
     FROM WC_CCB_SA_S,
          WC_CCB_PAY_SEG_S,
          WC_CCB_FT_S,
          WC_CCB_SA_CONTERM_S,
          WC_CCB_ACCT_S,
          WC_CCB_ACCT_PER_S,
          WC_CCB_PER_S,
          WC_CCB_PER_NAME_S,
		  (SELECT * FROM WC_CCB_SA_CHAR_S
		   WHERE CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
				AND EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
									  WHERE TMP.CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
										AND TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID)
		   ) WC_CCB_SA_CHAR_S
    WHERE     1 = 1
	      AND WC_CCB_FT_S.SIBLING_ID = WC_CCB_PAY_SEG_S.INTEGRATION_ID(+)
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_FT_S.SA_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CONTERM_S.SA_ID(+) --filter here???
          AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID  --REMOVED OUTERJOIN
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
          AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
          AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
          AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_NAME_S.PERSON_ID(+)
          AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'
          AND WC_CCB_FT_S.FT_TYPE_FLAG IN ('PS','PX')
          AND WC_CCB_SA_S.SA_TYPE_CODE = 'GINS'
		  AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+)  --20131104 BN - for pmg insurance report
       /* 20131015 bn - Commenting out the previous logic.  The previous logic was returning 96 million records.
		  AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_PAY_SEG_S.SA_ID(+)
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_FT_S.SA_ID(+)
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CONTERM_S.SA_ID(+) --filter here???
          AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID(+)
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
          AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
          AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
          AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_NAME_S.PERSON_ID(+)
          AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'
	   */
;


--20130620 BN - Confirm Report - Marketer
--20130621 BN - Adding Contract Effective Date
--20130624 bn - This report will only return the Contract Quantity IF the type is 'THN'
 --20130808 bn - vidya added 4 new columns ( 2 previous, 2 next ) columns for nomination.

 CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SA_CONTRACT_QTY_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SA_CIS_DIVISION,
   SA_TYPE_CODE,
   START_OPTION_CODE,
   SA_START_DATE,
   SA_STATUS_FLAG,
   ACCOUNT_ID,
   SA_END_DATE,
   OLD_ACCOUNT_ID,
   CUSTOMER_READ_FLAG,
   ALLOW_ESTIMATES_SW,
   SIC_CODE,
   CHARACTERISTIC_PREMISE_ID,
   TOTAL_TO_BILL_AMOUNT,
   SA_CURRENCY_CODE,
   SA_VERSION,
   SA_RELATIONSHIP_ID,
   START_REASON_FLAG,
   STOP_REASON_FLAG,
   START_REQUESTED_BY,
   STOP_REQUESTED_BY,
   MAXIMUM_BILL_THRESHOLD_AMOUNT,
   DEPOSIT_INTEREST_CALC_DATE,
   CIAC_REVIEW_DATE,
   BUSINESS_ACTIVITY_DESCRIPTION,
   IB_SA_CUTOFF_TIME,
   IB_SA_START_DAY_OPTION,
   ENROLLMENT_ID,
   SPECIAL_USAGE_FLAG,
   PROPOSAL_SA_STATUS_FLAG,
   PROPOSAL_DECLINE_REASON_CODE,
   PROPOSAL_SA_ID,
   NUMBER_OF_PAYMENT_PERIODS,
   NBB_RECOMMENDATION_RULE,
   EXPIRATION_DATE,
   RENEWAL_DATE,
   NBB_AUTOPAY_FLAG,
   SA_DATA_AREA,
   SA_DIVISION_CID,
   ACCOUNT_CID,
   PREMISE_CID,
   SA_CURRENCY_CID,
   BILL_FACTOR_CODE,
   CONTRACT_TERM_TYPE,
   CONT_TERM_END_DATE,
   PERCENT_EXEMPMT,
   SA_ID,
   CONT_TERM_START_DATE,
   TAX_CERTIFICATION,
   TAX_EXEMPT_TYPE_CODE,
   TIME_OF_USER_GROUP_CODE,
   VAL,
   SA_CONTERM_VERSION,
   CONTRACT_NUMBER,
   CONTRACT_QUANTITY,
   CONTRACT_QUANTITY_TYPE_CODE,
   EFFECTIVE_DATE,
   SA_CONT_QTY_VERSION,
   RELATIONSHIP_TYPE_CODE,
   CONTRACT_EFFECTIVE_DATE,
   NOMINATION_EFFECTIVE_DATE,
   MARKETER_NAME,
   NOM_PREV_VALUE,
   NOM_PREV_EFFECTIVE_DATE,
   NOM_NEXT_VALUE,
   NOM_NEXT_EFFECTIVE_DATE
)
AS
   SELECT    WC_CCB_SA_S.INTEGRATION_ID
          || '::'
          || WC_CCB_SA_CONTERM_S.INTEGRATION_ID
          || '::'
          || wc_ccb_sa_cont_qty_s.integration_id
             INTEGRATION_ID, --20130703 bn - adding contract quantity integration id due to logic change to bring in all values
          --                instead of just the most recent nomination.
          3000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          --CI_SA
          WC_CCB_SA_S.CIS_DIVISION SA_CIS_DIVISION,
          WC_CCB_SA_S.SA_TYPE_CODE,
          --SA_ID,
          WC_CCB_SA_S.START_OPTION_CODE,
          WC_CCB_SA_S.START_DATE SA_START_DATE,
          WC_CCB_SA_S.SA_STATUS_FLAG,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_SA_S.END_DATE SA_END_DATE,
          WC_CCB_SA_S.OLD_ACCOUNT_ID,
          WC_CCB_SA_S.CUSTOMER_READ_FLAG,
          WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
          WC_CCB_SA_S.SIC_CODE,
          WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
          WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
          WC_CCB_SA_S.CURRENCY_CODE SA_CURRENCY_CODE,
          WC_CCB_SA_S.SA_VERSION,
          WC_CCB_SA_S.SA_RELATIONSHIP_ID,
          WC_CCB_SA_S.START_REASON_FLAG,
          WC_CCB_SA_S.STOP_REASON_FLAG,
          WC_CCB_SA_S.START_REQUESTED_BY,
          WC_CCB_SA_S.STOP_REQUESTED_BY,
          WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
          WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
          WC_CCB_SA_S.CIAC_REVIEW_DATE,
          WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
          WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
          WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
          WC_CCB_SA_S.ENROLLMENT_ID,
          WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
          WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
          WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
          WC_CCB_SA_S.PROPOSAL_SA_ID,
          WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
          WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
          WC_CCB_SA_S.EXPIRATION_DATE,
          WC_CCB_SA_S.RENEWAL_DATE,
          WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
          WC_CCB_SA_S.SA_DATA_AREA,
          WC_CCB_SA_S.DIVISION_CID SA_DIVISION_CID,
          WC_CCB_SA_S.ACCOUNT_CID,
          WC_CCB_SA_S.PREMISE_CID,
          WC_CCB_SA_S.CURRENCY_CID SA_CURRENCY_CID,
          --CI_SA_CONTERM
          WC_CCB_SA_CONTERM_S.BILL_FACTOR_CODE,
          WC_CCB_SA_CONTERM_S.CONTRACT_TERM_TYPE,
          WC_CCB_SA_CONTERM_S.END_DATE CONT_TERM_END_DATE,
          WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT,
          WC_CCB_SA_CONTERM_S.SA_ID,
          WC_CCB_SA_CONTERM_S.START_DATE CONT_TERM_START_DATE,
          WC_CCB_SA_CONTERM_S.TAX_CERTIFICATION,
          WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
          WC_CCB_SA_CONTERM_S.TIME_OF_USER_GROUP_CODE,
          WC_CCB_SA_CONTERM_S.VAL,
          WC_CCB_SA_CONTERM_S.SA_CONTERM_VERSION,
          WC_CCB_SA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE CONTRACT_NUMBER,
          WC_CCB_SA_CONT_QTY_S.CONTRACT_QUANTITY,
          WC_CCB_SA_CONT_QTY_S.CONTRACT_QUANTITY_TYPE_CODE,
          WC_CCB_SA_CONT_QTY_S.EFFECTIVE_DATE,
          WC_CCB_SA_CONT_QTY_S.SA_CONT_QTY_VERSION,
          WC_CCB_ACCT_PER_S.RELATIONSHIP_TYPE_CODE,
          TRUNC (WC_CCB_SA_CHAR_S.EFFECTIVE_DATE) CONTRACT_EFFECTIVE_DATE,
          TRUNC (WC_CCB_SA_CONT_QTY_S.EFFECTIVE_DATE)
             NOMINATION_EFFECTIVE_DATE,
          WC_CCB_PER_NAME_S.PERSON_NAME MARKETER_NAME,
          (SELECT tmp.contract_quantity
             FROM wc_ccb_sa_cont_qty_s tmp
            WHERE     tmp.sa_id = wc_ccb_sa_cont_qty_s.sa_id
                  AND tmp.contract_quantity_type_code = 'THN'
                  AND effective_date =
                         (SELECT MAX (tmp2.effective_date)
                            FROM wc_Ccb_sa_cont_qty_s tmp2
                           WHERE     tmp.sa_id = tmp2.sa_id
                                 AND tmp2.contract_quantity_type_code = 'THN'
                                 AND tmp2.effective_date <
                                        WC_CCB_SA_CONT_QTY_S.effective_date))
             previous_value,
          (SELECT MAX (tmp2.effective_date)
             FROM wc_Ccb_sa_cont_qty_s tmp2
            WHERE     WC_CCB_SA_CONT_QTY_S.sa_id = tmp2.sa_id
                  AND WC_CCB_SA_CONT_QTY_S.contract_quantity_type_code =
                         'THN'
                  AND tmp2.effective_date <
                         WC_CCB_SA_CONT_QTY_S.effective_date)
             previous_effective_date,  --20130808 vs - new column
          (SELECT tmp.contract_quantity
             FROM wc_ccb_sa_cont_qty_s tmp
            WHERE     tmp.sa_id = wc_ccb_sa_cont_qty_s.sa_id
                  AND tmp.contract_quantity_type_code = 'THN'
                  AND effective_date =
                         (SELECT MIN (tmp3.effective_date)
                            FROM wc_Ccb_sa_cont_qty_s tmp3
                           WHERE     tmp.sa_id = tmp3.sa_id
                                 AND tmp3.contract_quantity_type_code = 'THN'
                                 AND tmp3.effective_date >
                                        WC_CCB_SA_CONT_QTY_S.effective_date))
             NEXT_value, --20130808 vs - new column
          (SELECT MIN (tmp4.effective_date)
             FROM wc_Ccb_sa_cont_qty_s tmp4
            WHERE     WC_CCB_SA_CONT_QTY_S.sa_id = tmp4.sa_id
                  AND WC_CCB_SA_CONT_QTY_S.contract_quantity_type_code =
                         'THN'
                  AND tmp4.effective_date >
                         WC_CCB_SA_CONT_QTY_S.effective_date) --20130808 vs - new column
             NEXT_effective_date					--20130808 vs - new column
     FROM WC_CCB_SA_S,
          WC_CCB_SA_CONTERM_S,
          WC_CCB_ACCT_S,
          WC_CCB_ACCT_PER_S,
          (SELECT * FROM WC_CCB_SA_CHAR_S
           WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT')
                AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT'
          ) WC_CCB_SA_CHAR_S,
          (SELECT *
             FROM wc_ccb_sa_cont_qty_s
            WHERE WC_CCB_SA_CONT_QTY_S.CONTRACT_QUANTITY_TYPE_CODE = 'THN') WC_CCB_SA_CONT_QTY_S,
          /*(SELECT * FROM WC_CCB_SA_CONT_QTY_S
           WHERE WC_CCB_SA_CONT_QTY_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CONT_QTY_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CONT_QTY_S.SA_ID
                                                           AND TMP.CONTRACT_QUANTITY_TYPE_CODE = 'THN')
                AND WC_CCB_SA_CONT_QTY_S.CONTRACT_QUANTITY_TYPE_CODE = 'THN'
          ) WC_CCB_SA_CONT_QTY_S,*/
          --20130703 bn - user wants to see all nominations that have happened, not just most recent.
          WC_CCB_PER_S,
          WC_CCB_PER_NAME_S
    WHERE     1 = 1
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CONTERM_S.SA_ID(+) --filter here???
          AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID(+)
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
          --AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
          AND WC_CCB_ACCT_PER_S.RELATIONSHIP_TYPE_CODE(+) = 'MKTR' --20130702 BN - They want to see marketers only
          AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.PERSON_ID(+) --20130702 BN
          AND WC_CCB_PER_S.PERSON_ID = WC_CCB_PER_NAME_S.PERSON_ID(+) --20130702 BN
          AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'       --20130702 BN
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID(+)
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CONT_QTY_S.SA_ID(+)
--AND WC_CCB_SA_CONT_QTY_S.CONTRACT_QUANTITY_TYPE_CODE (+) = 'THN'
;



--20130621 bn - prem char was already created but adding premise information to it.
--				This table must be OUTER JOINED on Premise ID, Char Type Code, and max effective date.
CREATE OR REPLACE VIEW WC_CCB_PREMISE_CHAR_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
PREMISE_ID,
CHARACTERISTIC_TYPE_CODE,
CHARACTERISTIC_VALUE,
EFFECTIVE_DATE,
PREM_CHAR_VERSION,
ADHOC_CHARACTERISTIC_VALUE,
CHAR_VALUE_FK1,
CHAR_VALUE_FK2,
CHAR_VALUE_FK3,
CHAR_VALUE_FK4,
CHAR_VALUE_FK5,
PREMISE_TYPE_CODE,
CIS_DIVISION,
LANDLORD_AGREEMENT_ID,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
METER_READ_INSTRUCTION_CODE,
METER_READ_INSTRUCTION_DETAILS,
METER_READ_WARNING_CODE,
TREND_AREA_CODE,
ADDRESS1,
ADDRESS2,
ADDRESS3,
ADDRESS4,
MAILING_ADDRESS_SW,
CITY,
PREMISE_NUMBER,
NUMBER2,
COUNTRY,
POSTAL,
HOUSE_TYPE,
TAX_VENDOR_GEO_CODE,
IN_CITY_LIMIT,
STATE,
PREM_VERSION,
ADDRESS1_UPPERCASE,
CITY_UPPERCASE,
TIME_ZONE_CODE,
LIFE_SUPPORT_SENS_LOAD_FLAG,
LIFE_SUPPORT_SENS_LOAD_DESC,
PARENT_PRMISE_ID,
PREMISE_DATA_AREA
)
AS
SELECT
WC_CCB_PREM_CHAR_S.INTEGRATION_ID,
WC_CCB_PREM_CHAR_S.DATASOURCE_NUM_ID,
WC_CCB_PREM_CHAR_S.W_INSERT_DT,
WC_CCB_PREM_CHAR_S.W_UPDATE_DT,
WC_CCB_PREM_CHAR_S.W_LOAD_NUMBER,
--CI_PREM_CHAR
WC_CCB_PREM_CHAR_S.PREMISE_ID,
WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE,
WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE,
WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE,
WC_CCB_PREM_CHAR_S.PREM_CHAR_VERSION,
WC_CCB_PREM_CHAR_S.ADHOC_CHARACTERISTIC_VALUE,
WC_CCB_PREM_CHAR_S.CHAR_VALUE_FK1,
WC_CCB_PREM_CHAR_S.CHAR_VALUE_FK2,
WC_CCB_PREM_CHAR_S.CHAR_VALUE_FK3,
WC_CCB_PREM_CHAR_S.CHAR_VALUE_FK4,
WC_CCB_PREM_CHAR_S.CHAR_VALUE_FK5,
--CI_PREM
WC_CCB_PREM_S.PREMISE_TYPE_CODE,
WC_CCB_PREM_S.CIS_DIVISION,
WC_CCB_PREM_S.LANDLORD_AGREEMENT_ID,
WC_CCB_PREM_S.KEY_SW,
WC_CCB_PREM_S.KEY_ID,
WC_CCB_PREM_S.OK_TO_ENTER_SW,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_CODE,
WC_CCB_PREM_S.METER_READ_INSTRUCTION_DETAILS,
WC_CCB_PREM_S.METER_READ_WARNING_CODE,
WC_CCB_PREM_S.TREND_AREA_CODE,
WC_CCB_PREM_S.ADDRESS1,
WC_CCB_PREM_S.ADDRESS2,
WC_CCB_PREM_S.ADDRESS3,
WC_CCB_PREM_S.ADDRESS4,
WC_CCB_PREM_S.MAILING_ADDRESS_SW,
WC_CCB_PREM_S.CITY,
WC_CCB_PREM_S.PREMISE_NUMBER,
WC_CCB_PREM_S.NUMBER2,
WC_CCB_PREM_S.COUNTRY,
WC_CCB_PREM_S.POSTAL,
WC_CCB_PREM_S.HOUSE_TYPE,
WC_CCB_PREM_S.TAX_VENDOR_GEO_CODE,
WC_CCB_PREM_S.IN_CITY_LIMIT,
WC_CCB_PREM_S.STATE,
WC_CCB_PREM_S.PREM_VERSION,
WC_CCB_PREM_S.ADDRESS1_UPPERCASE,
WC_CCB_PREM_S.CITY_UPPERCASE,
WC_CCB_PREM_S.TIME_ZONE_CODE,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_FLAG,
WC_CCB_PREM_S.LIFE_SUPPORT_SENS_LOAD_DESC,
WC_CCB_PREM_S.PARENT_PRMISE_ID,
WC_CCB_PREM_S.PREMISE_DATA_AREA
FROM
	WC_CCB_PREM_CHAR_S,
	WC_CCB_PREM_S
WHERE
	WC_CCB_PREM_S.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
;

--20130621 BN - Creating view to source new Dimension that holds the most recent REFUND
--				Customer Contact information.
--This view only returns information on the most recent REFUND Customer Contact.
CREATE OR REPLACE VIEW WC_CCB_CC_REFUND_ACCOUNT_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
ACCOUNT_ID,
SETUP_DATE,
ALERT_INFO,
BILL_AFTER_DATE,
PROTECT_BILL_CYCLE_SW,
CIS_DIVISION,
MAILING_PREMISE_ID,
PROTECT_MAILING_PREMISE,
LAST_CREDIT_REVIEW_DATE,
POSTPONE_CREDIT_REVIEW_DATE,
INTERNAL_CREDIT_REVIEW_SW,
BILL_PRINT_INTERCEPT,
NO_DEPOSIT_REVIEW_SWITCH,
VERSION,
PROTECT_CIS_DIVISION_SW,
ACCOUNT_DATA_AREA,
PERSON_ID,
PERSON_OR_BUSINESS,
LANGUAGE_CODE,
LIFE_SUPPORT_SENS_LOAD,
LIFE_SUPPORT_SENS_LOAD_DESC,
EMAIL_ADDRESS,
OVERRIDE_MAIL_NAME_1,
OVERRIDE_MAIL_NAME_2,
OVERRIDE_MAIL_NAME_3,
ADDRESS1,
ADDRESS2,
ADDRESS3,
ADDRESS4,
CITY,
PREMISE_NUMBER,
NUMBER_2,
COUNTY,
POSTAL,
HOUSE_TYPE,
TAX_VENDOR_GEO_CODE,
IN_CITY_LIMIT,
STATE,
COUNTRY,
PER_VERSION,
WEB_SS_RCV_MARKET_FLAG,
WEB_PASSWORD,
WEB_PASSWORD_HINT,
WEB_PASSWORD_ANSWER,
PERSON_DATA_AREA,
--ci_cc
USER_ID,
CONTACT_DATE,
CUSTOMER_CONTACT_DATA_AREA,
--CI_PER_NAME
PERSON_NAME,
PERSON_NAME_UPPERCASE,
NAME_TYPE,
PRIMARY_NAME_FLAG,
SEQUENCE_NUMBER,
PER_NAME_VERSION
)
AS
SELECT
WC_CCB_ACCT_S.INTEGRATION_ID,
WC_CCB_ACCT_S.DATASOURCE_NUM_ID,
WC_CCB_ACCT_S.W_INSERT_DT,
WC_CCB_ACCT_S.W_UPDATE_DT,
WC_CCB_ACCT_S.W_LOAD_NUMBER,
WC_CCB_ACCT_S.ACCOUNT_ID,
WC_CCB_ACCT_S.SETUP_DATE,
WC_CCB_ACCT_S.ALERT_INFO,
WC_CCB_ACCT_S.BILL_AFTER_DATE,
WC_CCB_ACCT_S.PROTECT_BILL_CYCLE_SW,
WC_CCB_ACCT_S.CIS_DIVISION,
WC_CCB_ACCT_S.MAILING_PREMISE_ID,
WC_CCB_ACCT_S.PROTECT_MAILING_PREMISE,
WC_CCB_ACCT_S.LAST_CREDIT_REVIEW_DATE,
WC_CCB_ACCT_S.POSTPONE_CREDIT_REVIEW_DATE,
WC_CCB_ACCT_S.INTERNAL_CREDIT_REVIEW_SW,
WC_CCB_ACCT_S.BILL_PRINT_INTERCEPT,
WC_CCB_ACCT_S.NO_DEPOSIT_REVIEW_SWITCH,
WC_CCB_ACCT_S.VERSION,
WC_CCB_ACCT_S.PROTECT_CIS_DIVISION_SW,
WC_CCB_ACCT_S.ACCOUNT_DATA_AREA,
--CI_PER
WC_CCB_PER_S.PERSON_ID,
WC_CCB_PER_S.PERSON_OR_BUSINESS,
WC_CCB_PER_S.LANGUAGE_CODE,
WC_CCB_PER_S.LIFE_SUPPORT_SENS_LOAD,
WC_CCB_PER_S.LIFE_SUPPORT_SENS_LOAD_DESC,
WC_CCB_PER_S.EMAIL_ADDRESS,
WC_CCB_PER_S.OVERRIDE_MAIL_NAME_1,
WC_CCB_PER_S.OVERRIDE_MAIL_NAME_2,
WC_CCB_PER_S.OVERRIDE_MAIL_NAME_3,
WC_CCB_PER_S.ADDRESS1,
WC_CCB_PER_S.ADDRESS2,
WC_CCB_PER_S.ADDRESS3,
WC_CCB_PER_S.ADDRESS4,
WC_CCB_PER_S.CITY,
WC_CCB_PER_S.PREMISE_NUMBER,
WC_CCB_PER_S.NUMBER_2,
WC_CCB_PER_S.COUNTY,
WC_CCB_PER_S.POSTAL,
WC_CCB_PER_S.HOUSE_TYPE,
WC_CCB_PER_S.TAX_VENDOR_GEO_CODE,
WC_CCB_PER_S.IN_CITY_LIMIT,
WC_CCB_PER_S.STATE,
WC_CCB_PER_S.COUNTRY,
WC_CCB_PER_S.PER_VERSION,
WC_CCB_PER_S.WEB_SS_RCV_MARKET_FLAG,
WC_CCB_PER_S.WEB_PASSWORD,
WC_CCB_PER_S.WEB_PASSWORD_HINT,
WC_CCB_PER_S.WEB_PASSWORD_ANSWER,
WC_CCB_PER_S.PERSON_DATA_AREA,
WC_CCB_CC_S.USER_ID,
WC_CCB_CC_S.CONTACT_DATE,
WC_CCB_CC_S.CUSTOMER_CONTACT_DATA_AREA,
--CI_PER_NAME
WC_CCB_PER_NAME_S.PERSON_NAME,
WC_CCB_PER_NAME_S.PERSON_NAME_UPPERCASE,
WC_CCB_PER_NAME_S.NAME_TYPE,
WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG,
WC_CCB_PER_NAME_S.SEQUENCE_NUMBER,
WC_CCB_PER_NAME_S.PER_NAME_VERSION
FROM
    WC_CCB_ACCT_S,
    WC_CCB_ACCT_PER_S,
    WC_CCB_PER_S,
    WC_CCB_PER_NAME_S,
    (
        SELECT USER_ID, TRUNC(CONTACT_DATE) CONTACT_DATE, CUSTOMER_CONTACT_DATA_AREA, PERSON_ID
        FROM WC_CCB_CC_S
        WHERE CONTACT_DATE = (
                                SELECT MAX(TMP.CONTACT_DATE) FROM WC_CCB_CC_S TMP
                                WHERE TMP.PERSON_ID = WC_CCB_CC_S.PERSON_ID
                                    and TMP.CONTACT_TYPE_CODE = 'REFUND'
                             )
              AND CONTACT_TYPE_CODE = 'REFUND'
    )
    WC_CCB_CC_S
WHERE 1=1
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
    AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
    AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
    AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
    AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_NAME_S.PERSON_ID(+)
    AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'
    AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_CC_S.PERSON_ID (+)
;




/*
	20130625 BN - Table for Statement of Bills and Payments report
	The logic for wc_ccb_bseg_sq_s is to only get the value if the UOM = Therms (TH)
*/

--20140218 bn - for statements of bills and payments report
--NOTE: that this view will only work if there are only single tender source payments.
--          The FT amounts will be duplicated if there are multiple.

--20140319 bn - adding SA Type Description for statements of bills and payments report.
--20140320 BN - Actually added SA TYPE CID instead and get the description from the SA TYPE Dimension
--20140320 BN - Adding Laclede Delivery Dates as they appear on the Bills
--20140325 bn - adding logic to filter our transfer adjustments
--20140402 BN - Added 2 columns for revenue usage for psc report.
--20141216 BN - ADDED FREEZE MONTH CID FOR CANCEL REBILL REPORT
CREATE OR REPLACE VIEW WC_CCB_FT_BSEG_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
FT_ID,
SIBLING_ID,
SA_ID,
PARENT_ID,
GL_DIVISION,
CIS_DIVISION,
CURRENCY_CODE,
FT_TYPE_FLAG,
CURRENT_AMOUNT,
PAYOFF_AMOUNT,
CREATE_DATE,
FROZEN_POSTED_TO_ACCOUNT_SW,
FROZEN_BY,
FREEZE_DATE,
ARREARS_DATE,
CORRECTION_DW,
REDUNDANT_DW,
NEW_CHARGE_SW,
SHOW_ON_BILL_SW,
NOT_IN_ARREARS_SW,
BILL_ID,
ACCOUNTING_DATE,
FT_VERSION,
TRANSFERRED_OUT_SW,
POST_TO_GL_ON_OR_AFTER_DATE,
GL_DISTRIBUTION_STATUS,
SCHEDULED_DISTRIBUTION_DATE,
BALANCE_CONTROL_GROUP_ID,
MATCH_EVENT_ID,
GL_DIVISION_CID,
DIVISION_CID,
CURRENCY_CID,
BILL_CYCLE_CODE,
WINDOW_START_DATE,
ACCOUNT_ID,
BILL_STATUS_FLAG,
BILL_DATE,
DUE_DATE,
BILL_CREATE_DATE,
COMPLETION_DATE,
LATE_PAYMENT_CHARGE_SW,
LATE_PAYMENT_CHARGE_DATE,
ALLOW_REOPEN_SW,
BILL_VERSION,
NEXT_CREDIT_REVIEW_DATE,
CR_NOTE_FROM_BILL_ID,
BILL_NUMBER_SEQUENCE,
AUTO_PAY_CREATION_DATE,
AUTO_PAY_AMOUNT,
AUTO_PAY_STOP_USER_ID,
AUTO_PAY_STOP_DATE,
AUTO_PAY_STOP_AMOUNT,
AUTO_PAY_STOP_CREATION_DATE,
ARCHIVE_FTS_SW,
DOCUMENT_NUMBER,
DOCUMENT_TYPE_FLAG,
OFF_CYCLE_BILL_GENERATOR_ID,
BILL_CYCLE_CID,
BILL_ACCOUNT_CID,
BILL_CYCLE_SCHEDULE_CID,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
BILL_SEGMENT_ID,
--BILL_CYCLE_CODE,
BSEG_WINDOW_START_DATE,
CANCEL_REASON_CODE,
CANCEL_BILL_SEGMENT_ID,
--SA_ID,
--BILL_ID,
BSEG_START_DATE,
BSEG_END_DATE,
ESTIMATE_DW,
CLOSING_BILL_SEGMENT_SW,
SQ_OVERRIDE_SW,
ITEM_OVERRIDE_SW,
PREMISE_ID,
BILL_SEGMENT_STATUS_FLAG,
CREATION_DATE,
STATUS_CHANGE_DATE,
REBILL_SEGMENT_ID,
BILL_SEGMENT_VERSION,
MASTER_BILL_SEGMENT_ID,
QUOTE_DETAIL_ID,
BILL_SCENARIO_ID,
MDM_START_DATE,
MDM_END_DATE,
--BILL_CYCLE_SCHEDULE_CID,
BILL_CANCEL_REASON_CID,
BSEG_PREMISE_CID,
BSEG_SQ_UNIT_OF_MEASURE_CODE,
BSEG_SQ_TIME_OF_USE_CODE,
BSEG_SQ_SQI_CODE,
BILLABLE_SERVICE_QUANTITY,
INITIAL_SERVICE_QUANTITY,
BSEG_SQ_VERSION,
SERVICE_QTY_ID_CID,
SP_ID,
REGISTER_CONSTANT,
SEQUENCE_NUMBER,
HOW_TO_USE_SP_FLAG,
USE_PERCENT,
HOW_TO_USE_FLAG,
MEASURES_PEAK_QTY_SW,
BSEG_READ_UNIT_OF_MEASURE_CODE,
BSEG_READ_TIME_OF_USE_CODE,
START_REGISTER_READ_ID,
START_READ_DATE,
START_REGISTER_READING,
END_REGISTER_READ_ID,
END_READ_DATE,
END_REGISTER_READING,
MEASURED_QUANTITY,
FINAL_UOM_CODE,
FINAL_TIME_OF_USE_CODE,
FINAL_REGISTER_QUANTITY,
BSEG_READ_VERSION,
BSEG_READ_SQI_CODE,
FINAL_SQI_CODE,
READ_TYPE,    --20140218 BN - to get read type for statements of bills and payments report
TENDER_SOURCE_DESCRIPTION,   --20140218 BN - to get read type for statements of bills and payments report
TENDER_SOURCE_CODE,        --20140218 BN - to get read type for statements of bills and payments report
SA_TYPE_CID,         --20140319 BN - new requirement for statement of bills and payments
LACLEDE_DELIVERY_DATE,    --20140320 BN - need to show dates as they appear on the bill
--20140325 bn - adding the below columns for statement of bills and payments report.
ADJ_ADJUSTMENT_ID,
ADJ_SA_ID,
ADJ_ADJUSTMENT_TYPE_CODE,
ADJ_ADJUSTMENT_STATUS_FLAG,
ADJ_CREATION_DATE,
ADJ_CANCEL_REASON_CODE,
ADJ_CURRENT_AMOUNT,
ADJ_TRANSFER_ADJUSTMENT_ID,
ADJ_CURRENCY_CODE,
ADJ_COMMENTS,
ADJ_ADJUSTMENT_VERSION,
ADJ_ON_BEHALF_SA_ID,
ADJ_BASE_AMOUNT,
ADJ_CALCULATION_DATE,
ADJ_APPROVAL_REQUEST_ID,
ADJ_ADJUSTMENT_TYPE_CID,
ADJ_ADJUST_CANCEL_REASON_CID,
ADJ_CURRENCY_CID,
RATE_CLASS, --20140402 BN - new columns for revenue usage for psc
RATE_CLASS_DESCRIPTION,  --20140402 BN - new columns for revenue usage for psc
FREEZE_MONTH_CID		--20141216 BN - FOR CANCEL REBILL REPORT
)
AS
SELECT 
WC_CCB_FT_S.INTEGRATION_ID || '::' || WC_CCB_BSEG_READ_S.INTEGRATION_ID || '::' || WC_CCB_BSEG_SQ_S.INTEGRATION_ID,
WC_CCB_FT_S.DATASOURCE_NUM_ID,
WC_CCB_FT_S.W_INSERT_DT,
WC_CCB_FT_S.W_UPDATE_DT,
WC_CCB_FT_S.W_LOAD_NUMBER,
WC_CCB_FT_S.FT_ID,
WC_CCB_FT_S.SIBLING_ID,
WC_CCB_FT_S.SA_ID,
WC_CCB_FT_S.PARENT_ID,
WC_CCB_FT_S.GL_DIVISION,
WC_CCB_FT_S.CIS_DIVISION,
WC_CCB_FT_S.CURRENCY_CODE,
WC_CCB_FT_S.FT_TYPE_FLAG,
WC_CCB_FT_S.CURRENT_AMOUNT,
WC_CCB_FT_S.PAYOFF_AMOUNT,
WC_CCB_FT_S.CREATE_DATE,
WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW,
WC_CCB_FT_S.FROZEN_BY,
WC_CCB_FT_S.FREEZE_DATE,
WC_CCB_FT_S.ARREARS_DATE,
WC_CCB_FT_S.CORRECTION_DW,
WC_CCB_FT_S.REDUNDANT_DW,
WC_CCB_FT_S.NEW_CHARGE_SW,
WC_CCB_FT_S.SHOW_ON_BILL_SW,
WC_CCB_FT_S.NOT_IN_ARREARS_SW,
WC_CCB_FT_S.BILL_ID,
WC_CCB_FT_S.ACCOUNTING_DATE,
WC_CCB_FT_S.FT_VERSION,
WC_CCB_FT_S.TRANSFERRED_OUT_SW,
WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE,
WC_CCB_FT_S.GL_DISTRIBUTION_STATUS,
WC_CCB_FT_S.SCHEDULED_DISTRIBUTION_DATE,
WC_CCB_FT_S.BALANCE_CONTROL_GROUP_ID,
WC_CCB_FT_S.MATCH_EVENT_ID,
WC_CCB_FT_S.GL_DIVISION_CID,
WC_CCB_FT_S.DIVISION_CID,
WC_CCB_FT_S.CURRENCY_CID,
WC_CCB_BILL_S.BILL_CYCLE_CODE,
WC_CCB_BILL_S.WINDOW_START_DATE,
WC_CCB_BILL_S.ACCOUNT_ID,
WC_CCB_BILL_S.BILL_STATUS_FLAG,
WC_CCB_BILL_S.BILL_DATE,
WC_CCB_BILL_S.DUE_DATE,
WC_CCB_BILL_S.CREATE_DATE,
WC_CCB_BILL_S.COMPLETION_DATE,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_BILL_S.LATE_PAYMENT_CHARGE_DATE,
WC_CCB_BILL_S.ALLOW_REOPEN_SW,
WC_CCB_BILL_S.BILL_VERSION,
WC_CCB_BILL_S.NEXT_CREDIT_REVIEW_DATE,
WC_CCB_BILL_S.CR_NOTE_FROM_BILL_ID,
WC_CCB_BILL_S.BILL_NUMBER_SEQUENCE,
WC_CCB_BILL_S.AUTO_PAY_CREATION_DATE,
WC_CCB_BILL_S.AUTO_PAY_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_USER_ID,
WC_CCB_BILL_S.AUTO_PAY_STOP_DATE,
WC_CCB_BILL_S.AUTO_PAY_STOP_AMOUNT,
WC_CCB_BILL_S.AUTO_PAY_STOP_CREATION_DATE,
WC_CCB_BILL_S.ARCHIVE_FTS_SW,
WC_CCB_BILL_S.DOCUMENT_NUMBER,
WC_CCB_BILL_S.DOCUMENT_TYPE_FLAG,
WC_CCB_BILL_S.OFF_CYCLE_BILL_GENERATOR_ID,
WC_CCB_BILL_S.BILL_CYCLE_CID,
WC_CCB_BILL_S.ACCOUNT_CID,
WC_CCB_BILL_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_BSEG_S.BILL_SEGMENT_ID,
--WC_CCB_BSEG_S.BILL_CYCLE_CODE,
WC_CCB_BSEG_S.WINDOW_START_DATE,
WC_CCB_BSEG_S.CANCEL_REASON_CODE,
WC_CCB_BSEG_S.CANCEL_BILL_SEGMENT_ID,
--WC_CCB_BSEG_S.SA_ID,
--WC_CCB_BSEG_S.BILL_ID,
WC_CCB_BSEG_S.START_DATE,
WC_CCB_BSEG_S.END_DATE,
WC_CCB_BSEG_S.ESTIMATE_DW,
WC_CCB_BSEG_S.CLOSING_BILL_SEGMENT_SW,
WC_CCB_BSEG_S.SQ_OVERRIDE_SW,
WC_CCB_BSEG_S.ITEM_OVERRIDE_SW,
WC_CCB_BSEG_S.PREMISE_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_STATUS_FLAG,
WC_CCB_BSEG_S.CREATION_DATE,
WC_CCB_BSEG_S.STATUS_CHANGE_DATE,
WC_CCB_BSEG_S.REBILL_SEGMENT_ID,
WC_CCB_BSEG_S.BILL_SEGMENT_VERSION,
WC_CCB_BSEG_S.MASTER_BILL_SEGMENT_ID,
WC_CCB_BSEG_S.QUOTE_DETAIL_ID,
WC_CCB_BSEG_S.BILL_SCENARIO_ID,
WC_CCB_BSEG_S.MDM_START_DATE,
WC_CCB_BSEG_S.MDM_END_DATE,
--WC_CCB_BSEG_S.BILL_CYCLE_SCHEDULE_CID,
WC_CCB_BSEG_S.BILL_CANCEL_REASON_CID,
WC_CCB_BSEG_S.BSEG_PREMISE_CID,
WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE,
WC_CCB_BSEG_SQ_S.TIME_OF_USE_CODE,
WC_CCB_BSEG_SQ_S.SQI_CODE,
WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY,
WC_CCB_BSEG_SQ_S.INITIAL_SERVICE_QUANTITY,
WC_CCB_BSEG_SQ_S.BSEG_SQ_VERSION,
WC_CCB_BSEG_SQ_S.SERVICE_QTY_ID_CID,
WC_CCB_BSEG_READ_S.SP_ID,
WC_CCB_BSEG_READ_S.REGISTER_CONSTANT,
WC_CCB_BSEG_READ_S.SEQUENCE_NUMBER,
WC_CCB_BSEG_READ_S.HOW_TO_USE_SP_FLAG,
WC_CCB_BSEG_READ_S.USE_PERCENT,
WC_CCB_BSEG_READ_S.HOW_TO_USE_FLAG,
WC_CCB_BSEG_READ_S.MEASURES_PEAK_QTY_SW,
WC_CCB_BSEG_READ_S.UNIT_OF_MEASURE_CODE,
WC_CCB_BSEG_READ_S.TIME_OF_USE_CODE,
WC_CCB_BSEG_READ_S.START_REGISTER_READ_ID,
trunc(WC_CCB_BSEG_READ_S.START_READ_DATE),  --20140402 bn - for revenue usage for psc report
WC_CCB_BSEG_READ_S.START_REGISTER_READING,
WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID,
trunc(WC_CCB_BSEG_READ_S.END_READ_DATE),  --20140402 bn - for revenue usage for psc report
WC_CCB_BSEG_READ_S.END_REGISTER_READING,
WC_CCB_BSEG_READ_S.MEASURED_QUANTITY,
WC_CCB_BSEG_READ_S.FINAL_UOM_CODE,
WC_CCB_BSEG_READ_S.FINAL_TIME_OF_USE_CODE,
WC_CCB_BSEG_READ_S.FINAL_REGISTER_QUANTITY,
WC_CCB_BSEG_READ_S.BSEG_READ_VERSION,
WC_CCB_BSEG_READ_S.SQI_CODE,
WC_CCB_BSEG_READ_S.FINAL_SQI_CODE,
LOOKUP_VAL.DESCRIPTION READ_TYPE,    --20140218 BN - to get read type for statements of bills and payments report
PAY.TENDER_SOURCE_DESCRIPTION,         --20140218 BN - to get read type for statements of bills and payments report
PAY.TENDER_SOURCE_CODE,        --20140218 BN - to get read type for statements of bills and payments report
WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION,         --20140319 BN - new requirement for statement of bills and payments
WC_CCB_BSEG_CALC_LN_LDC_S.DESCRIPTION_ON_BILL LACLEDE_DELIVERY_DATE,    --20140320 BN - need to show dates as they appear on the bill
--20140325 bn - adding the below columns for statement of bills and payments report.
WC_CCB_ADJ_S.ADJUSTMENT_ID,
WC_CCB_ADJ_S.SA_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CODE,
WC_CCB_ADJ_S.ADJUSTMENT_STATUS_FLAG,
WC_CCB_ADJ_S.CREATION_DATE,
WC_CCB_ADJ_S.CANCEL_REASON_CODE,
WC_CCB_ADJ_S.CURRENT_AMOUNT,
WC_CCB_ADJ_S.TRANSFER_ADJUSTMENT_ID,
WC_CCB_ADJ_S.CURRENCY_CODE,
WC_CCB_ADJ_S.COMMENTS,
WC_CCB_ADJ_S.ADJUSTMENT_VERSION,
WC_CCB_ADJ_S.ON_BEHALF_SA_ID,
WC_CCB_ADJ_S.BASE_AMOUNT,
WC_CCB_ADJ_S.CALCULATION_DATE,
WC_CCB_ADJ_S.APPROVAL_REQUEST_ID,
WC_CCB_ADJ_S.ADJUSTMENT_TYPE_CID,
WC_CCB_ADJ_S.ADJUST_CANCEL_REASON_CID,
WC_CCB_ADJ_S.CURRENCY_CID,
   WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE RATE_CLASS,  --20140402 BN - new columns for revenue usage for psc
   wc_ccb_char_val_l_s.DESCRIPTION RATE_CLASS_DESCRIPTION,  --20140402 BN - new columns for revenue usage for psc
'706::' || TO_CHAR(WC_CCB_FT_S.CREATE_DATE, 'YYYYMM') CREATE_MONTH_CID		--20141216 BN - FOR CANCEL REBILL REPORT
FROM   
    WC_CCB_FT_S,
    WC_CCB_BILL_S,
    WC_CCB_SA_S,
    WC_CCB_SA_TYPE_S,
    WC_CCB_BSEG_S,
    WC_CCB_BSEG_SQ_S,
    WC_CCB_BSEG_READ_S,
    WC_CCB_REG_READ_S, --20140218 BN - to get read type for statements of bills and payments report
    (SELECT * FROM WC_CCB_LOOKUP_VAL_S WHERE FIELD_NAME = 'READ_TYPE_FLG') LOOKUP_VAL,    --20140218 BN - to get read type for statements of bills and payments report
    --WC_CCB_PAY_SEG_S,          --20140218 bn - to get the tender source type code for payments and payment cancellations.
    --20140623 BN - Making changes to get one tender source code per FT
    
    (select DISTINCT WC_CCB_PAY_S.INTEGRATION_ID, WC_CCB_TNDR_SRCE_S.TENDER_SOURCE_CODE, WC_CCB_TNDR_SRCE_S.TENDER_SOURCE_DESCRIPTION
    FROM
        WC_CCB_PAY_S,          --20140218 bn - to get the tender source type code for payments and payment cancellations.
        WC_CCB_PAY_EVENT_S,          --20140218 bn - to get the tender source type code for payments and payment cancellations.
        WC_CCB_PAY_TNDR_S,          --20140218 bn - to get the tender source type code for payments and payment cancellations.
        WC_CCB_TNDR_CTL_S,          --20140218 bn - to get the tender source type code for payments and payment cancellations.
        WC_CCB_TNDR_SRCE_S           --20140218 bn - to get the tender source type code for payments and payment cancellations.
    where 1=1
            AND WC_CCB_PAY_S.PAY_EVENT_ID = WC_CCB_PAY_EVENT_S.INTEGRATION_ID 
            AND WC_CCB_PAY_EVENT_S.INTEGRATION_ID = WC_CCB_PAY_TNDR_S.PAYMENT_EVENT_ID 
            AND WC_CCB_PAY_TNDR_S.TENDER_CONTROL_ID = WC_CCB_TNDR_CTL_S.INTEGRATION_ID 
            AND WC_CCB_TNDR_CTL_S.TENDER_SOURCE_CODE = WC_CCB_TNDR_SRCE_S.INTEGRATION_ID 
    ) PAY,
    WC_CCB_BSEG_CALC_LN_LDC_S,    --20140320 BN - need to show dates as they appear on the bill
    WC_CCB_ADJ_S, --20140325 BN - new requirement to filter out transfer adjustments in statement of bills and payments report.
    (SELECT * FROM WC_CCB_SA_CHAR_S
           WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
            AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS'
          ) WC_CCB_SA_CHAR_S,  --20140402 BN - new columns for revenue usage for psc
    wc_ccb_char_val_l_s  --20140402 BN - new columns for revenue usage for psc
WHERE 1=1
    AND WC_CCB_FT_S.BILL_ID = WC_CCB_BILL_S.INTEGRATION_ID (+)
    AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID --20140623 BN - REMOVING OUTERJOIN FOR TUNING (+) 
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE --20140623 BN - REMOVING OUTERJOIN FOR TUNING  (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION --20140623 BN - REMOVING OUTERJOIN FOR TUNING  (+)
    AND (CASE WHEN WC_CCB_FT_S.FT_TYPE_FLAG IN ('BS', 'BX') THEN WC_CCB_FT_S.SIBLING_ID ELSE NULL END)
        = WC_CCB_BSEG_S.INTEGRATION_ID (+)
    AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_CALC_LN_LDC_S.BSEG_ID (+)     --20140320 BN - need to show dates as they appear on the bill
    AND WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID (+) = WC_CCB_BSEG_S.INTEGRATION_ID
    AND WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE (+) = 'TH'
    AND WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID (+) = WC_CCB_BSEG_S.INTEGRATION_ID
    AND WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID = WC_CCB_REG_READ_S.INTEGRATION_ID (+)   --20140218 BN - to get read type for statements of bills and payments report
    AND WC_CCB_REG_READ_S.START_READ_TYPE_FLAG = LOOKUP_VAL.FIELD_VALUE (+)    --20140218 BN - to get read type for statements of bills and payments report

    --20140218 bn - to get the tender source type code for payments and payment cancellations.
    AND (CASE WHEN WC_CCB_FT_S.FT_TYPE_FLAG IN ('PS', 'PX') THEN WC_CCB_FT_S.PARENT_ID ELSE NULL END)
        = PAY.INTEGRATION_ID (+)
  --  AND WC_CCB_PAY_S.PAY_EVENT_ID = WC_CCB_PAY_EVENT_S.INTEGRATION_ID (+)
  --  AND WC_CCB_PAY_EVENT_S.INTEGRATION_ID = WC_CCB_PAY_TNDR_S.PAYMENT_EVENT_ID (+)
  --  AND WC_CCB_PAY_TNDR_S.TENDER_CONTROL_ID = WC_CCB_TNDR_CTL_S.INTEGRATION_ID (+)
  --  AND WC_CCB_TNDR_CTL_S.TENDER_SOURCE_CODE = WC_CCB_TNDR_SRCE_S.INTEGRATION_ID (+)
    AND (CASE WHEN WC_CCB_FT_S.FT_TYPE_FLAG IN ('AD', 'AX') THEN WC_CCB_FT_S.SIBLING_ID ELSE NULL END)
        = WC_CCB_ADJ_S.INTEGRATION_ID (+) --20140325 BN - new requirement to filter out transfer adjustments in statement of bills and payments report.
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+) --20140402 BN - new columns for revenue usage for psc
    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE = wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE (+) --20140402 BN - new columns for revenue usage for psc
    AND wc_ccb_char_val_l_s.CHARACTERISTIC_TYPE_CODE (+) = 'RATECLS' --20140402 BN - new columns for revenue usage for psc
;


--20130627 BN - for pending transactions on large meters
--20130701 BN - Updating logic for Phone Number.
--20130807 BN - Updating logic for BUSN phone number.  One person can have multiple so we are going to get the max sequence.
CREATE OR REPLACE VIEW WC_CCB_SA_SP_FA_ADDL_FS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
SA_SP_ID,
FA_ID,
SA_ID,
SP_ID,
FIELD_ACTIVITY_TYPE_FLAG,
SA_SP_FA_VERSION,
ACTIVITY_TYPE_CODE,
FA_CANCEL_REASON_CODE,
SERVICE_POINT_ID,
FA_PRIORITY_FLAG,
FA_CREATED_BY,
SCHEDULE_DATE,
FA_STATUS_FLAG,
ELIGIBLE_FOR_DISPATCH_SW,
DISPATCH_GROUP_CODE,
FIELD_ORDER_ID,
CREATE_DATE,
TEST_SELECTION_ID,
USER_ID,
INSTRUCTIONS,
LONG_DESCRIPTION,
FA_VERSION,
APPT_PERIOD_ID,
FA_EXTERNAL_ID,
FA_INTERMEDIATE_STATUS_FLAG,
FA_RESCHEDULE_REASON_CODE,
FA_DATA_AREA,
CIS_DIVISION,
SA_TYPE_CODE,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
DIVISION_CID,
SA_ACCOUNT_CID,
SA_PREMISE_CID,
CURRENCY_CID,
BILL_PERIOD_CODE,
LPC_CALC_ALGORITHM_CODE,
GL_DIVISION,
SERVICE_POINTS_REQUIRED_SW,
DISTRIBUTION_CODE,
PAYMENT_SEGMENT_TYPE_CODE,
NSF_ADJUSTMENT_TYPE,
SERVICE_TYPE_CODE,
BILL_SEGMENT_TYPE_CODE,
REVENUE_CLASS_CODE,
DEBT_CLASS_CODE,
RATE_REQUIRED_SW,
RATE_SELECTION_DATE_FLAG,
DO_NOT_OVERPAY_SW,
PAYMENT_PRIORITY_FLAG,
MINIMUM_DAYS_FOR_BILLING,
ELIGIBLE_FOR_BILLING_SW,
CHAR_PREMISE_REQUIRED_SW,
ONE_TIME_CHARGE_SW,
START_OPTION_REQUIRED_SW,
LATE_PAYMENT_CHARGE_SW,
DISPLAY_AS_ALERT_SW,
BILL_PRINT_PRIORITY_FLAG,
GRAPH_UNIT_OF_MEASURE,
USE_CALENDAR_BILLING,
ANNIVERSARY_BILL_FREQ_CODE,
SPECIAL_ROLE_FLAG,
SA_TYPE_VERSION,
ADJUSTMENT_TYPE_TRANSFER,
ADJUSTMENT_TYPE_0,
CIAC_REFUND_PROCESS_CODE,
ADJUSTMENT_TYPE_SYNCH,
TOTAL_BILL_AMOUNT,
RECURRING_CHARGE_FLAG,
RECURRING_CHARGE_FREQ_CODE,
MAXIMUM_BILL_THRESHOLD,
SUB_SA_SW,
DEPOSIT_CLASS_CODE,
ELIGIBLE_FOR_BUDGET_SW,
WRITE_OFF_DEBT_CLASS_CODE,
CIAC_SA_TYPE_SW,
DELINQUENT_PAY_PRIORITY_FLAG,
BILLING_PROCESSING_SEQUENCE,
INITIAL_START_OPTION_DATE,
LOAD_AR_DISTRIBUTION_CODE,
OVERRIDE_INTEREST_FLAG,
INTEREST_BILL_FACTOR,
SA_RENEWAL_FLAG,
RENEWAL_DAYS_BEFORE_EXP,
NBB_ELIGIBILITY_FLAG,
NBB_MONITOR_FLAG,
RATE_SOURCE_FLAG,
STOP_OPTION_FLAG,
GL_DIVISION_CID,
NSF_ADJUSTMENT_TYPE_CID,
REVENUE_CLASS_CID,
ADJUSTMENT_TYPE_TRANSFER_CID,
ADJUSTMENT_TYPE_0_CID,
ADJUSTMENT_TYPE_SYNCH_CID,
DEPOSIT_CLASS_CID,
DISCONNECTED_LOCATION_CODE,
SP_TYPE_CODE,
PREMISE_ID,
SP_STATUS_FLAG,
INSTALL_DATE,
SP_SOURCE_STATUS_FLAG,
MR_SERVICE_CYCLE_CODE,
MR_SERVICE_ROUTE_CODE,
METER_LOCATION_CODE,
MR_SERVICE_SYSCLE_ROUTE_SEQ,
FACILITY_LEVEL_1_CODE,
METER_LOCATION_DETAILS,
FACILITY_LEVEL_2_CODE,
FACILITY_LEVEL_3_CODE,
SP_VERSION,
SP_LONG_DESCRIPTION,
ABOLISHED_DATE,
OVERRIDE_PREMISE_FLD_INFO_FLAG,
MR_INSTRUCTION_CODE,
MR_WARNING_CODE,
KEY_SW,
KEY_ID,
OK_TO_ENTER_SW,
MR_INSTRUCTION_DETAILS,
SP_DATA_AREA,
DISCONNECTED_LOCATION_CID,
PREMISE_CID,
METER_READ_CYCLE_CID,
ORDERED_BY_NAME,
ORDERED_BY_PHONE_NUMBER,
LARGE_METER_FLAG,
METER_SIZE
)
AS
SELECT
WC_CCB_SA_SP_FA_S.INTEGRATION_ID || '::' || WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID,
WC_CCB_SA_SP_FA_S.DATASOURCE_NUM_ID,
WC_CCB_SA_SP_FA_S.W_INSERT_DT,
WC_CCB_SA_SP_FA_S.W_UPDATE_DT,
WC_CCB_SA_SP_FA_S.W_LOAD_NUMBER,
WC_CCB_SA_SP_FA_S.SA_SP_ID,
WC_CCB_SA_SP_FA_S.FA_ID,
WC_CCB_SA_SP_FA_S.SA_ID,
WC_CCB_SA_SP_FA_S.SP_ID,
WC_CCB_SA_SP_FA_S.FIELD_ACTIVITY_TYPE_FLAG,
WC_CCB_SA_SP_FA_S.SA_SP_FA_VERSION,
WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
WC_CCB_FA_S.SERVICE_POINT_ID,
WC_CCB_FA_S.FA_PRIORITY_FLAG,
WC_CCB_FA_S.FA_CREATED_BY,
WC_CCB_FA_S.SCHEDULE_DATE,
WC_CCB_FA_S.FA_STATUS_FLAG,
WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
WC_CCB_FA_S.DISPATCH_GROUP_CODE,
WC_CCB_FA_S.FIELD_ORDER_ID,
WC_CCB_FA_S.CREATE_DATE,
WC_CCB_FA_S.TEST_SELECTION_ID,
WC_CCB_FA_S.USER_ID,
WC_CCB_FA_S.INSTRUCTIONS,
WC_CCB_FA_S.LONG_DESCRIPTION,
WC_CCB_FA_S.FA_VERSION,
WC_CCB_FA_S.APPT_PERIOD_ID,
WC_CCB_FA_S.FA_EXTERNAL_ID,
WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
WC_CCB_FA_S.FA_DATA_AREA,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_S.DIVISION_CID,
WC_CCB_SA_S.ACCOUNT_CID,
WC_CCB_SA_S.PREMISE_CID,
WC_CCB_SA_S.CURRENCY_CID,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_SP_S.DISCONNECTED_LOCATION_CODE,
WC_CCB_SP_S.SP_TYPE_CODE,
WC_CCB_SP_S.PREMISE_ID,
WC_CCB_SP_S.SP_STATUS_FLAG,
WC_CCB_SP_S.INSTALL_DATE,
WC_CCB_SP_S.SP_SOURCE_STATUS_FLAG,
WC_CCB_SP_S.MR_SERVICE_CYCLE_CODE,
WC_CCB_SP_S.MR_SERVICE_ROUTE_CODE,
WC_CCB_SP_S.METER_LOCATION_CODE,
WC_CCB_SP_S.MR_SERVICE_SYSCLE_ROUTE_SEQ,
WC_CCB_SP_S.FACILITY_LEVEL_1_CODE,
WC_CCB_SP_S.METER_LOCATION_DETAILS,
WC_CCB_SP_S.FACILITY_LEVEL_2_CODE,
WC_CCB_SP_S.FACILITY_LEVEL_3_CODE,
WC_CCB_SP_S.SP_VERSION,
WC_CCB_SP_S.SP_LONG_DESCRIPTION,
WC_CCB_SP_S.ABOLISHED_DATE,
WC_CCB_SP_S.OVERRIDE_PREMISE_FLD_INFO_FLAG,
WC_CCB_SP_S.MR_INSTRUCTION_CODE,
WC_CCB_SP_S.MR_WARNING_CODE,
WC_CCB_SP_S.KEY_SW,
WC_CCB_SP_S.KEY_ID,
WC_CCB_SP_S.OK_TO_ENTER_SW,
WC_CCB_SP_S.MR_INSTRUCTION_DETAILS,
WC_CCB_SP_S.SP_DATA_AREA,
WC_CCB_SP_S.DISCONNECTED_LOCATION_CID,
WC_CCB_SP_S.PREMISE_CID,
WC_CCB_SP_S.METER_READ_CYCLE_CID,
    WC_CCB_FA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE ORDERED_BY_NAME,
    NVL(WC_CCB_FA_CHAR_S_phone.ADHOC_CHARACTERISTIC_VALUE, WC_CCB_PER_PHONE_S.PHONE_NUMBER) ORDERED_BY_PHONE_NUMBER,
    CASE WHEN WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE = '2' THEN 'Y' ELSE 'N' END LARGE_METER_FLAG,
	WC_CCB_MTR_CHAR_S_mtrsize.CHARACTERISTIC_VALUE METER_SIZE
FROM
    WC_CCB_SA_SP_FA_S,
    WC_CCB_SA_S,
    WC_CCB_SP_S,
    WC_CCB_FA_S,
    WC_CCB_SA_TYPE_S,
       (SELECT * FROM WC_CCB_FA_CHAR_S
           WHERE WC_CCB_FA_CHAR_S.SEQUENCE_NUMBER = (SELECT MAX(TMP.SEQUENCE_NUMBER) FROM WC_CCB_FA_CHAR_S TMP
                                                     WHERE TMP.FA_ID = WC_CCB_FA_CHAR_S.FA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'ORDERB')
                AND WC_CCB_FA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'ORDERB'
          ) WC_CCB_FA_CHAR_S,    --20130627 BN
       (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN' AND CHARACTERISTIC_VALUE = 2)
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN' AND CHARACTERISTIC_VALUE = 2
          ) WC_CCB_MTR_CHAR_S,    --20130627 BN
    (SELECT * FROM WC_CCB_SP_MTR_HIST_S
     WHERE REMOVAL_DATE IS NULL) WC_CCB_SP_MTR_HIST_S,
    WC_CCB_MTR_CONFIG_S,
    WC_CCB_MTR_S,
           (SELECT * FROM WC_CCB_FA_CHAR_S
           WHERE WC_CCB_FA_CHAR_S.SEQUENCE_NUMBER = (SELECT MAX(TMP.SEQUENCE_NUMBER) FROM WC_CCB_FA_CHAR_S TMP
                                                     WHERE TMP.FA_ID = WC_CCB_FA_CHAR_S.FA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'ALTPHN')
                AND WC_CCB_FA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'ALTPHN'
          ) WC_CCB_FA_CHAR_S_phone,    --20130627 BN
    WC_CCB_ACCT_S,
    WC_CCB_ACCT_PER_S,
    WC_CCB_PER_S,
    --WC_CCB_PER_PHONE_S,  --20130701 BN - Logic from Colleen
	(SELECT * FROM WC_CCB_PER_PHONE_S
           WHERE WC_CCB_PER_PHONE_S.SEQUENCE_NUMBER = (SELECT MAX(TMP.SEQUENCE_NUMBER) FROM WC_CCB_PER_PHONE_S TMP
                                                     WHERE TMP.PERSON_ID = WC_CCB_PER_PHONE_S.PERSON_ID
														AND TMP.PHONE_TYPE_CODE = 'BUSN'
										)
		  and WC_CCB_PER_PHONE_S.PHONE_TYPE_CODE = 'BUSN'
	) WC_CCB_PER_PHONE_S, --20130807 bn - new logic since users can have more than one BUSN phone number
	    (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE'
          ) WC_CCB_MTR_CHAR_S_mtrsize    --20130627 BN
WHERE 1=1
    AND WC_CCB_SA_SP_FA_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID (+)
    AND WC_CCB_SA_SP_FA_S.FA_ID = WC_CCB_FA_S.INTEGRATION_ID (+)
    AND WC_CCB_SA_SP_FA_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID (+)
    AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID (+)
    AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID = WC_CCB_MTR_CONFIG_S.INTEGRATION_ID (+)
    AND WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE (+) IS NULL
    AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID (+)
    AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_FA_CHAR_S.FA_ID (+)
    AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID (+)
    AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S_mtrsize.METER_ID (+)
    AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_FA_CHAR_S_phone.FA_ID (+)
    AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID (+)
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID (+)
    AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG (+) = 'Y'
    AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID (+)
    AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_PHONE_S.PERSON_ID (+)
    AND WC_CCB_PER_PHONE_S.PHONE_TYPE_CODE (+) = 'BUSN'  --Will probably need to change this logic
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
;


--20130629 bn - for Transportation Bill report.
--20130722 BN - For transportation bill report update (adding contract number)
--20151003 bn - added due to 2 mge accounts not having a contract number on one of the SAs.
CREATE OR REPLACE VIEW WC_CCB_BILL_DETAILS_SFS_V
AS
SELECT
    WC_CCB_SA_S.ACCOUNT_ID,
    WC_CCB_SA_S.ACCOUNT_ID ACCOUNT_CID,
    WC_CCB_BILL_S.BILL_DATE,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'CCFC' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) CCF,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'BTUFCT' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) BTU_FACTOR,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'TH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) USAGE,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'BIMBTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) BEGINNING_IMBALANCE,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'RLGCTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) RECEIVED_BY_LACLEDE,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'TH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) DELIVERED_TO_CUSTOMER,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'PXBTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) PRE_BALANCE_TRANSFER,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'IMBXTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) TRANSFER,  --20130806 bn - Changing from TOTXTH to IMBXTH
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'PXBTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END
            + CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'IMBXTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) TOTAL,  --20130806 bn - Changing from TOTXTH to IMBXTH
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'GP' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) GAS_PURCHASED,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'GS' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) GAS_SOLD,
    SUM(CASE WHEN WC_CCB_BSEG_SQ_S.SQI_CODE = 'EIMBTH' THEN WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY ELSE 0 END) ENDING_IMBALANCE,
    WC_CCB_SA_S.ACCOUNT_ID || '::' || WC_CCB_BILL_S.BILL_DATE 
		|| '::' || WC_CCB_SA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE --20151003 bn - added due to 2 mge accounts not having a contract number on one of the SAs.
		INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    0 W_LOAD_NUMBER,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
	WC_CCB_SA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE CONTRACT_NUMBER  --20130722 BN
FROM
    WC_CCB_SA_S,
    WC_CCB_BSEG_S,
    WC_CCB_BILL_S,
    WC_CCB_BSEG_SQ_S,
--    WC_CCB_BSEG_READ_S,
 --   WC_CCB_REG_READ_S,
--    WC_CCB_MR_S,
 --   WC_CCB_MTR_CONFIG_S,
--    WC_CCB_MTR_S,
    WC_CCB_ACCT_S,
		(SELECT * FROM WC_CCB_SA_CHAR_S
           WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                     WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT')
			AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT'
          ) WC_CCB_SA_CHAR_S  --20130722 BN
WHERE 1=1
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_BSEG_S.SA_ID
    AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID
    AND WC_CCB_BSEG_S.BILL_ID = WC_CCB_BILL_S.INTEGRATION_ID
 --   AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID
--    AND WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID = WC_CCB_REG_READ_S.START_REGISTER_READING_ID
 --   AND WC_CCB_REG_READ_S.START_METER_READ_ID = WC_CCB_MR_S.INTEGRATION_ID
 --   AND WC_CCB_MR_S.START_METER_CONFIGURATION_ID = WC_CCB_MTR_CONFIG_S.INTEGRATION_ID
  --  AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_SA_S.ACCOUNT_ID
    AND WC_CCB_ACCT_S.BILL_CYCLE_CODE = '1T'
	AND WC_CCB_BSEG_S.BILL_SEGMENT_STATUS_FLAG = '50'  --20130806 bn - Only bring in frozen bills
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID (+)  --20130722 BN
GROUP BY
    WC_CCB_SA_S.ACCOUNT_ID,
    WC_CCB_BILL_S.BILL_DATE,
	WC_CCB_SA_CHAR_S.ADHOC_CHARACTERISTIC_VALUE  --20130722 BN
;


--20130629 BN - for School Aggregation report (highly customized for report; contains hardcoded values)

CREATE OR REPLACE VIEW WC_CCB_SCHOOL_AGGREGATION_FS_V
AS
SELECT DISTINCT
    WC_CCB_BILL_S.ACCOUNT_ID,
    WC_CCB_BILL_S.ACCOUNT_CID,
    WC_CCB_MTR_S.METER_ID,
    WC_CCB_MTR_S.BADGE_NUMBER,
    WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE TOWN_CODE,
    WC_CCB_BSEG_READ_S.START_READ_DATE,
    WC_CCB_BSEG_READ_S.END_READ_DATE,
    WC_CCB_BSEG_S.START_DATE,
    WC_CCB_BSEG_S.END_DATE,
    WC_CCB_BSEG_SQ_S.INITIAL_SERVICE_QUANTITY,
    WC_CCB_BF_CHAR_S.CHARACTERISTIC_VALUE GRT_CALC_METHOD,
    --BILL_CYCLE (FROM ACCOUNT D)
    CASE WHEN wc_ccb_adj_char_s.ADJUSTMENT_ID IS NOT NULL THEN 'Y' ELSE 'N' END ADJUSTMENT_ON_BILL_FLAG,
    WC_CCB_SA_S.INTEGRATION_ID || '::' || WC_CCB_BILL_S.INTEGRATION_ID || '::' || WC_CCB_BSEG_S.INTEGRATION_ID || '::' || WC_CCB_MTR_S.METER_ID INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    0 W_LOAD_NUMBER,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT
FROM
    WC_CCB_ACCT_S,
    WC_CCB_BILL_S,
    WC_CCB_BSEG_S,
    (SELECT MIN(START_READ_DATE) START_READ_DATE, MAX(END_READ_DATE) END_READ_DATE, BILL_SEGMENT_ID
     FROM WC_CCB_BSEG_READ_S GROUP BY BILL_SEGMENT_ID
    )WC_CCB_BSEG_READ_S,
    WC_CCB_BSEG_SQ_S,
    WC_CCB_SA_S,
    WC_CCB_SA_SP_S,
    WC_CCB_SP_S,
    (SELECT * FROM WC_CCB_SP_MTR_HIST_S
     WHERE REMOVAL_DATE IS NULL) WC_CCB_SP_MTR_HIST_S,
    WC_CCB_MTR_CONFIG_S,
    WC_CCB_MTR_S,
    WC_CCB_PREM_S,
    (SELECT * FROM WC_CCB_PREM_CHAR_S
           WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                     WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD')
                AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
    ) WC_CCB_PREM_CHAR_S,
    WC_CCB_SA_CONTERM_S,
    WC_CCB_BF_S,
    WC_CCB_BF_CHAR_S,
    --WC_CCB_BF_VAL_S  I don't think I need this table because BF CHAR has the char val
    WC_CCB_FT_S,
    WC_CCB_ADJ_S,

    (select *
        from wc_ccb_adj_char_s
        where CHARACTERISTIC_TYPE_CODE = 'SAGADJ'
            AND SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM wc_ccb_adj_char_s TMP
                                    WHERE TMP.ADJUSTMENT_ID = wc_ccb_adj_char_s.ADJUSTMENT_ID
                                    AND TMP.CHARACTERISTIC_TYPE_CODE = 'SAGADJ')
    ) wc_ccb_adj_char_s
WHERE 1=1
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_BILL_S.ACCOUNT_ID
    AND WC_CCB_BILL_S.INTEGRATION_ID = WC_CCB_BSEG_S.BILL_ID
    AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID (+)
    AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID (+)
    AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_SA_S.ACCOUNT_ID
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SA_ID
    AND WC_CCB_SA_SP_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID (+)
    AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID (+)
    AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID = WC_CCB_MTR_CONFIG_S.INTEGRATION_ID (+)
    AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID (+)
    AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID (+)
    AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CONTERM_S.SA_ID (+)
    AND WC_CCB_SA_CONTERM_S.BILL_FACTOR_CODE = WC_CCB_BF_S.INTEGRATION_ID (+)
    AND WC_CCB_BF_S.INTEGRATION_ID = WC_CCB_BF_CHAR_S.BILL_FACTOR_CODE (+)
    AND WC_CCB_BILL_S.INTEGRATION_ID = WC_CCB_FT_S.BILL_ID (+)
    AND WC_CCB_FT_S.SIBLING_ID = WC_CCB_ADJ_S.INTEGRATION_ID (+)
    AND WC_CCB_ADJ_S.INTEGRATION_ID = WC_CCB_ADJ_CHAR_S.ADJUSTMENT_ID (+)
    AND WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID (+) = WC_CCB_BSEG_S.BILL_SEGMENT_ID
    AND WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE (+) = 'TH'
    AND WC_CCB_SA_CONTERM_S.BILL_FACTOR_CODE = 'AGG'
    --AND WC_CCB_BF_CHAR_S.BILL_FACTOR_CODE (+) = 'AGG'  --no need since joined to sa conterm
    AND WC_CCB_BF_CHAR_S.CHARACTERISTIC_TYPE_CODE (+) = 'GRTCALCV'
    AND WC_CCB_FT_S.FT_TYPE_FLAG (+) IN ('AD','AX')
    AND WC_CCB_ACCT_S.BILL_CYCLE_CODE = '1A'
   ;


   --20130729 BN - Create for Late Payments Billed by Town Code / Rate
--20150113 bn - For MGE WS3 - Adding CIS Division
--20150805 bn - Changed Char Val for TAX lookup to be 'Y' instead of 'T'
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_LATE_PAYMENTS_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   JOURNAL_DATE,
   TOWN_CODE,
   TOWN_CODE_DESCRIPTION,
   RATE_CLASS,
   RATE_CLASS_DESCRIPTION,
   NET_BILL_AMOUNT,
   CITY_TAX_AMOUNT,
   STATE_TAX_AMOUNT,
   cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
)
AS
     SELECT    WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE
            || '::'
            || TO_CHAR (WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE, 'MM/DD/YYYY')
            || '::'
            || WC_CCB_FT_S.FT_ID
               INTEGRATION_ID,
            WC_CCB_FT_S.DATASOURCE_NUM_ID,
            WC_CCB_FT_S.W_INSERT_DT,
            WC_CCB_FT_S.W_UPDATE_DT,
            WC_CCB_FT_S.W_LOAD_NUMBER,
            TRUNC (WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE) JOURNAL_DATE,
            WC_CCB_PREM_CHAR_S.TOWN_CODE TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S_twncd.DESCRIPTION TOWN_CODE_DESCRIPTION,
            WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE RATE_CLASS,
            wc_ccb_char_val_l_s_ratecls.DESCRIPTION RATE_CLASS_DESCRIPTION,
            SUM (
               CASE
                  WHEN WC_CCB_ADJ_S.INTEGRATION_ID IS NOT NULL
                  THEN
                     WC_CCB_FT_S.CURRENT_AMOUNT
                  ELSE
                     0
               END)
               NET_BILL_AMOUNT, --Should this be cur_amt OR can we use ft_gl amount?
            SUM (NVL (CITY_TAX_AMOUNT, 0)) CITY_TAX_AMOUNT,
            SUM (NVL (STATE_TAX_AMOUNT, 0)) STATE_TAX_AMOUNT,
            wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
       FROM WC_CCB_SA_S,
            WC_CCB_SA_TYPE_S,
            WC_CCB_FT_S,
            (  SELECT FT_ID,
                      SUM (
                         CASE
                            WHEN WC_CCB_DST_CD_CHAR_S_statetax.INTEGRATION_ID
                                    IS NOT NULL
                            THEN
                               nvl(WC_CCB_FT_GL_S.AMOUNT,0)         --20150805 bn - added nvl
                            ELSE
                               0
                         END)
                         STATE_TAX_AMOUNT --Sum up State Tax Amount to get it at the FT level
                 FROM WC_CCB_FT_GL_S,
                      (SELECT *
                         FROM WC_CCB_DST_CD_CHAR_S
                        WHERE     WC_CCB_DST_CD_CHAR_S.EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_DST_CD_CHAR_S TMP
                                       WHERE     TMP.DISTRIBUTION_CODE =
                                                    WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                             AND TMP.CHARACTERISTIC_TYPE_CODE =
                                                    'TAXS'
                                             AND TMP.CHARACTERISTIC_VALUE = 'Y')         --20150805 bn
                              AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_TYPE_CODE =
                                     'TAXS'
                              AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_VALUE = 'Y') WC_CCB_DST_CD_CHAR_S_statetax --To get State Tax Char Type        --20150805 bn
                WHERE     1 = 1
                      AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                             WC_CCB_DST_CD_CHAR_S_statetax.DISTRIBUTION_CODE
             GROUP BY FT_ID) WC_CCB_FT_GL_S_state,
            (  SELECT FT_ID,
                      SUM (
                         CASE
                            WHEN WC_CCB_DST_CD_CHAR_S_citytax.INTEGRATION_ID
                                    IS NOT NULL
                            THEN
                               nvl(WC_CCB_FT_GL_S.AMOUNT,0)         --20150805 bn - added nvl
                            ELSE
                               0
                         END)
                         CITY_TAX_AMOUNT --Sum up City Tax Amount to get it at the FT level
                 FROM WC_CCB_FT_GL_S,
                      (SELECT *
                         FROM WC_CCB_DST_CD_CHAR_S
                        WHERE     WC_CCB_DST_CD_CHAR_S.EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_DST_CD_CHAR_S TMP
                                       WHERE     TMP.DISTRIBUTION_CODE =
                                                    WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                             AND TMP.CHARACTERISTIC_TYPE_CODE =
                                                    'TAXC'
                                             AND TMP.CHARACTERISTIC_VALUE = 'Y')            --20150805 bn
                              AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_TYPE_CODE =
                                     'TAXC'
                              AND WC_CCB_DST_CD_CHAR_S.CHARACTERISTIC_VALUE = 'Y') WC_CCB_DST_CD_CHAR_S_citytax --To get City Tax Char Type        --20150805 bn
                WHERE     1 = 1
                      AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                             WC_CCB_DST_CD_CHAR_S_citytax.DISTRIBUTION_CODE
             GROUP BY FT_ID) WC_CCB_FT_GL_S_city,
            (SELECT *
               FROM WC_CCB_ADJ_S
              WHERE ADJUSTMENT_TYPE_CODE IN ('LPC', 'LPCJOB')) WC_CCB_ADJ_S,
            (SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S,
            (SELECT *
               FROM wc_ccb_char_val_l_s
              WHERE wc_ccb_char_val_l_s.CHARACTERISTIC_TYPE_CODE = 'RATECLS') wc_ccb_char_val_l_s_ratecls,
            -- (select * from wc_ccb_char_val_l_s where characteristic_type_code = 'TAXS' ) WC_CCB_CHAR_VAL_L_S_taxs ,
            (SELECT PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_PREM_CHAR_S,
            (SELECT *
               FROM WC_CCB_CHAR_VAL_L_S
              WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') WC_CCB_CHAR_VAL_L_S_twncd
      WHERE     1 = 1
            AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION =
                   WC_CCB_SA_TYPE_S.INTEGRATION_ID(+)
            AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_FT_S.SA_ID
            AND WC_CCB_FT_S.INTEGRATION_ID = WC_CCB_FT_GL_S_state.FT_ID(+)
            AND WC_CCB_FT_S.INTEGRATION_ID = WC_CCB_FT_GL_S_city.FT_ID(+)
            AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S.SA_ID(+)
            AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE =
                   wc_ccb_char_val_l_s_ratecls.CHARACTERISTIC_VALUE(+)
            AND (CASE
                    WHEN WC_CCB_FT_S.FT_TYPE_FLAG = 'AD' THEN SIBLING_ID
                    ELSE NULL
                 END) = WC_CCB_ADJ_S.INTEGRATION_ID
            AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID =
                   WC_CCB_PREM_CHAR_S.PREMISE_ID(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_CHAR_VAL_L_S_twncd.CHARACTERISTIC_VALUE(+)
            AND wc_ccb_adj_s.ADJUSTMENT_TYPE_CODE IN ('LPC', 'LPCJOB') --Filter required as defined in Project Charter
   GROUP BY    WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE
            || '::'
            || TO_CHAR (WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE, 'MM/DD/YYYY')
            || '::'
            || WC_CCB_FT_S.FT_ID,
            WC_CCB_FT_S.DATASOURCE_NUM_ID,
            WC_CCB_FT_S.W_INSERT_DT,
            WC_CCB_FT_S.W_UPDATE_DT,
            WC_CCB_FT_S.W_LOAD_NUMBER,
            TRUNC (WC_CCB_FT_S.POST_TO_GL_ON_OR_AFTER_DATE),
            WC_CCB_PREM_CHAR_S.TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S_twncd.DESCRIPTION,
            WC_CCB_SA_CHAR_S.CHARACTERISTIC_VALUE,
            wc_ccb_char_val_l_s_ratecls.DESCRIPTION,
            wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
            ;




--20130730 BN - FOR MONTHLY SALES TAX REPORT
--20130806 bn - A lot of stuff has changed.

--20130730 BN - FOR MONTHLY SALES TAX REPORT
--20130806 bn - A lot of stuff has changed.
--20130808 BN - A LOT MORE CHANGES!!!
--20130815 bn - changed logic for transportation customers

--20130912 bn - changing post_To_gl_on_or_after_date to accounting_date (based on logic provided by CCB)
--20131101 BN - changed logic for city tax rates (load temp table first now)
--20150113 bn - For MGE WS3 - Adding CIS Division
--20150810 bn - for mge ws3, changing logic for transportation customers
--20150817 bn - New logic for City and County tax for MGE... MGE separates the values whereas Laclede has 1 value that combines city and county.
--20151021 rk - changes for MGE desc, expand tax into city, county and state; addition of forfeited disc and temp table selection
--20160315 bn - issue with distribution code logic.  

CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SALES_TAX_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_LOAD_NUMBER,
   W_INSERT_DT,
   W_UPDATE_DT,
   CUSTOMER_CLASS_CODE,
   JOURNAL_DATE,
   TOWN_CODE,
   TOWN_CODE_DESCRIPTION,
   PREM_OTA,
   PERCENT_EXEMPMT,
   TAX_EXEMPT_TYPE_CODE,
   TAX_EXEMPT_DESCRIPTION,
   TOTAL_SALES_AMOUNT,
   TAXABLE_REVENUE_AMOUNT,
   CITY_TAX_RATE,
   COUNTY_TAX_RATE,
   STATE_TAX_RATE,
   CALCULATED_TAXES_AMOUNT,
   BILL_TAXES_AMOUNT,
   TAX_EXEMPTION_AMOUNT,
   TOTAL_EXEMPT_AMOUNT,
   GRT_TAX_AMOUNT,
   CIS_DIVISION,
   FORFEITED_DISCOUNT
)
AS
     SELECT /*+ PARALLEL 2*/
           WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE
            || '::'
            || WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION
            || '::'
            || TO_CHAR (WC_CCB_FT_S.ACCOUNTING_DATE, 'MM/DD/YYYY') --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
            || '::'
            || TO_CHAR (
                  CASE
                     WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                             ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                     THEN
                        0                                        --20130814 bn
                     WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                 IS NOT NULL
                          AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
                     THEN
                        0                                        --20130814 bn
                     WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                             ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                     THEN
                        NVL (
                           WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0)
                           + NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                     WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                             ('DR', 'R', 'RH', 'RHP')
                     THEN
                        NVL (
                           WC_CCB_BF_VAL_S_citytax_resid.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0)
                           + NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)) --RESIDENTIAL
                     ELSE
                        0
                  END)
            || '::'
            || CASE
                  WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                          ('DR', 'R', 'RH', 'RHP')
                  THEN
                     'Residential'
                  WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                          IS NOT NULL
                  THEN
                     'Transportation'
                  ELSE
                     'Other'
               END
            || '::'
            || CASE
                  WHEN PERCENT_EXEMPMT = 100 THEN 'EXEMPT'
                  ELSE 'PARTEXEMPT'
               END
            || '::'
            || NVL (PREM_OTA.prem_ota_flag, 'N')                          --RK
            || '::'
            || WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT                        --RK
               INTEGRATION_ID,
            3000 DATASOURCE_NUM_ID,
            0 W_LOAD_NUMBER,
            SYSDATE W_INSERT_DT,
            SYSDATE W_UPDATE_DT,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  'Residential'
               WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id IS NOT NULL
               THEN
                  'Transportation'
               ELSE
                  'Other'
            END
               CUSTOMER_CLASS, --This is used to show Residential and Transportation records separately
            TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE) JOURNAL_DATE, --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
            WC_CCB_PREM_CHAR_S.TOWN_CODE TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION TOWN_CODE_DESCRIPTION,
            NVL (PREM_OTA.prem_ota_flag, 'N') PREM_OTA,                   --RK
            WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT,                       ---- RK
            WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
            WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION,
            SUM (
               CASE
                  WHEN     wc_ccb_ft_gl_s.total_amount_sw = 'Y'
                       AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE NOT IN
                              (SELECT DISTRIBUTION_CODE
                                 FROM WC_CCB_DST_CD_CHAR_S
                                WHERE CHARACTERISTIC_TYPE_CODE IN
                                         ('TAXS', 'TAXC'))
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                  ELSE
                     0
               END)
               TOTAL_SALES_AMOUNT, --Total Sales Amount  (I don't think we need the tax filter but leaving it)
            SUM (
               CASE
                  WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                              IS NOT NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1         --20130814 bn
                  WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                              IS NULL
                  THEN
                     0                                           --20130814 BN
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE NOT IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'CI', 'UASGN')
                            OR WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IS NULL)
                       AND (WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                               IS NULL)
                       AND (   WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE NOT IN
                                  ('DR', 'R', 'RH', 'RHP')
                            OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IS NULL)
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND (WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN ('CI'))
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1 --* -(1-(PERCENT_EXEMPMT*.01))
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                       AND CASE
                              WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'
                              THEN
                                 NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                              ELSE
                                 NVL (
                                    WC_CCB_BF_VAL_S_citytax_resid.val,
                                      NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val,
                                           0)
                                    + NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val,
                                           0))
                           END > 0
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE NOT IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'CI', 'UASGN')
                            OR WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IS NULL) --new when
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                  ELSE
                     0
               END)
               TAXABLE_REVENUE_AMOUNT,
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                           IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        0 -----------------------NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0) ----                 + NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                                                                        ) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                  END                                                    -- RK
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        0 -----------------------NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytax_resid.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0) ----                 + NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                                                                        ) --RESIDENTIAL
                  END                                                     --RK
               ELSE
                  0
            END
               CITY_TAX_RATE,
            --RK
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                           IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             ----                 NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0)
                             ----                +
                             NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                  END                                                    -- RK
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytax_resid.val,
                             ----                NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0)
                             ----             +
                             NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)) --RESIDENTIAL
                  END                                                    -- RK
               ELSE
                  0
            END
               COUNTY_TAX_RATE,
            --RK
            NVL (
               (CASE
                   WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                              ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                        OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                   IS NOT NULL
                            AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL)
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                   THEN
                      0
                   WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN ('CI')
                         AND PERCENT_EXEMPMT = 100)
                   THEN
                      0
                   ELSE
                      WC_CCB_BF_VAL_S_statetax_TMP.VAL
                END),
               0)
               STATE_TAX_RATE,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                          IS NOT NULL --Taking the Taxable Revenue and multiplying it by the rates
                  THEN
                       (CASE
                           WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                       IS NOT NULL
                                AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                                       IS NOT NULL
                           THEN
                              NVL (WC_CCB_FT_GL_S.AMOUNT, 0)     --20130814 bn
                           WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                   IS NULL
                           THEN
                              NVL (WC_CCB_FT_GL_S.AMOUNT, 0)     --20130814 bn
                           ELSE
                              0
                        END)                                     --20130814 bn
                     * -1
                     * (  (  NVL (
                                (CASE                             --CITY TAXES
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                                                    IS NULL)
                                    THEN
                                       0                         --20130814 bn
                                    WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                            ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                                    THEN
                                       CASE
                                          WHEN NVL (PREM_OTA.prem_ota_flag,
                                                    'N') = 'Y'            --RK
                                          THEN
                                             NVL (
                                                WC_CCB_BF_VAL_S_countx_MGcm_tp.val,
                                                0)
                                          ELSE
                                             NVL (
                                                WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                                                  NVL (
                                                     WC_CCB_BF_VAL_S_citytx_MGcm_tp.val,
                                                     0)
                                                + NVL (
                                                     WC_CCB_BF_VAL_S_countx_MGcm_tp.val,
                                                     0)) --COMMERCIAL  ---                  /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                                       END                               -- RK
                                    WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                            ('DR', 'R', 'RH', 'RHP')
                                    THEN
                                       CASE
                                          WHEN NVL (PREM_OTA.prem_ota_flag,
                                                    'N') = 'Y'            --RK
                                          THEN
                                             NVL (
                                                WC_CCB_BF_VAL_S_countx_MGrs_tp.val,
                                                0)
                                          ELSE
                                             NVL (
                                                WC_CCB_BF_VAL_S_citytax_resid.val,
                                                  NVL (
                                                     WC_CCB_BF_VAL_S_citytx_MGrs_tp.val,
                                                     0)
                                                + NVL (
                                                     WC_CCB_BF_VAL_S_countx_MGrs_tp.val,
                                                     0))    --RESIDENTIAL  ---
                                       END                               -- RK
                                    ELSE
                                       0
                                 END),
                                0)
                           + NVL (
                                (CASE
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT <> 100)
                                    THEN
                                         WC_CCB_BF_VAL_S_statetax_TMP.VAL
                                       * ( (100 - PERCENT_EXEMPMT) * .01)
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT = 100)
                                    THEN
                                       0
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                                                    IS NULL)
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('DR', 'R', 'RH', 'RHP') -- or WC_CCB_SA_CONTERM_S.sa_id is null   --20130808
                                    THEN
                                       0                         --STATE TAXES
                                    ELSE
                                       WC_CCB_BF_VAL_S_statetax_TMP.VAL
                                 END),
                                0))
                        * .01)
                  ELSE
                     0
               END)
               CALCULATED_TAXES_AMOUNT,
            NVL (
               SUM (
                  CASE
                     WHEN WC_CCB_DST_CD_CHAR_S_txamt_tmp.DISTRIBUTION_CODE
                             IS NOT NULL
                     THEN
                        NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                     ELSE
                        0
                  END),
               0)                                            --taxable revenue
               BILL_TAXES_AMOUNT,      /* Add logic for Billed Taxes Amount */
            SUM (
               NVL (
                  (CASE
                      WHEN     WC_CCB_DST_CD_CHAR_S_txexm_tmp.DISTRIBUTION_CODE
                                  IS NOT NULL
                           AND WC_CCB_DST_CD_CHAR_S_grttx_TMP.distribution_code
                                  IS NULL
                      THEN
                         NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                      ELSE
                         0
                   END),
                  0))
               TAX_EXEMPTION_AMOUNT,  /* Add logic for Tax Exemption Amount */
            SUM (
               CASE
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                              IS NULL
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                            OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                       IS NOT NULL
                                AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                                       IS NULL))                 --20130814 bn
                  THEN
                     (CASE
                         WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                     IS NOT NULL
                              AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                                     IS NULL
                         THEN
                            NVL (WC_CCB_FT_GL_S.AMOUNT, 0)       --20130814 bn
                         WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                 IS NULL
                         THEN
                            NVL (WC_CCB_FT_GL_S.AMOUNT, 0)       --20130814 bn
                         ELSE
                            0
                      END)
                  WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code
                              IS NOT NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)              --20130814 bn
                  --WHEN CITY + STATE = 0 THEN ALL SHOULD BE EXEMPT
                  WHEN       NVL (
                                CASE
                                   WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                           ('AGR',
                                            'DPAY',
                                            'GOV',
                                            'RGL',
                                            'UASGN')
                                   THEN
                                      0                          --20130814 bn
                                   WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                               IS NOT NULL
                                        AND WC_CCB_DST_CD_CHAR_S_ft.ft_id
                                               IS NULL
                                   THEN
                                      0                          --20130814 bn
                                   WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                           ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                                   THEN
                                      CASE
                                         WHEN NVL (PREM_OTA.prem_ota_flag, 'N') =
                                                 'Y'                     -- RK
                                         THEN
                                            NVL (
                                               WC_CCB_BF_VAL_S_countx_MGcm_tp.val,
                                               0)
                                         ELSE
                                            NVL (
                                               WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                                                 NVL (
                                                    WC_CCB_BF_VAL_S_citytx_MGcm_tp.val,
                                                    0)
                                               + NVL (
                                                    WC_CCB_BF_VAL_S_countx_MGcm_tp.val,
                                                    0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                                      END                                -- RK
                                   WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                           ('DR', 'R', 'RH', 'RHP')
                                   THEN
                                      CASE
                                         WHEN NVL (PREM_OTA.prem_ota_flag, 'N') =
                                                 'Y'                     -- RK
                                         THEN
                                            NVL (
                                               WC_CCB_BF_VAL_S_countx_MGrs_tp.val,
                                               0)
                                         ELSE
                                            NVL (
                                               WC_CCB_BF_VAL_S_citytax_resid.val,
                                                 NVL (
                                                    WC_CCB_BF_VAL_S_citytx_MGrs_tp.val,
                                                    0)
                                               + NVL (
                                                    WC_CCB_BF_VAL_S_countx_MGrs_tp.val,
                                                    0))          --RESIDENTIAL
                                      END                                -- RK
                                   ELSE
                                      0
                                END,
                                0)                                      --CITY
                           + NVL (
                                (CASE
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_ft.ft_id
                                                    IS NULL)
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('DR', 'R', 'RH', 'RHP')
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                                    THEN
                                       0
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT = 100)
                                    THEN
                                       0
                                    ELSE
                                       WC_CCB_BF_VAL_S_statetax_TMP.VAL
                                 END),
                                0)                                     --STATE
                                  = 0
                       AND WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE
                              IS NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                  /*              WHEN WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE IS NULL AND WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE   IN ('CI')
                 THEN
                    0
                 WHEN  WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE IS NULL and  WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE  IN ('DR','R','RH','RHP')  AND WC_CCB_BF_VAL_S_citytax_resid.VAL = 0  --NEW WHEN
                 THEN NVL(WC_CCB_FT_GL_S.AMOUNT,0)
                 WHEN  WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE  IN ('OTH') AND WC_CCB_SA_TYPE_S.SA_TYPE_CODE  in ( 'GINS', 'GINSL', 'GEW') and wc_ccb_ft_gl_s.total_amount_sw = 'Y'  --Data that has no GRT taken out.
                    THEN NVL(WC_CCB_FT_GL_S.AMOUNT,0)   */
                  ELSE
                     0
               END)
               TOTAL_EXEMPT_AMOUNT,
            SUM (
               (CASE
                   WHEN WC_CCB_DST_CD_CHAR_S_grttx_TMP.DISTRIBUTION_CODE
                           IS NOT NULL
                   THEN
                      NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                   ELSE
                      0
                END))
               GRT_TAX_AMOUNT,
            wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
                                    ---------------------------------------------
            ,
            SUM (
               (CASE
                   WHEN WC_CCB_FT_GL_S.distribution_code IN
                           ('RCFFDCLV',
                            'RCFFDCLVTB',
                            'RCFFDCLVTF',
                            'RIFFDCLV',
                            'RIFFDCLVTB',
                            'RIFFDCLVTF')
                   THEN
                      NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                   ELSE
                      0
                END))
               FORFEITED_DISCOUNT
       ---------------------------------------------
       FROM wc_ccb_acct_s,                                             -------
            wc_ccb_cust_cl_s,                                   --------------
            wc_ccb_sa_s,
            WC_CCB_SA_TYPE_S,
            WC_CCB_PREM_S,
            WC_CCB_FT_S,
            wc_ccb_ft_gl_s,
            wc_ccb_tax_ex_type_s,
            /*(SELECT
              PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND  (TMP.EFFECTIVE_DATE) <
                                           (SYSDATE))) */
            WC_CCB_PREM_CHAR_S_TMP WC_CCB_PREM_CHAR_S,
            /*         (SELECT *
                        FROM WC_CCB_CHAR_VAL_L_S
                       WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') */
            WC_CCB_CHAR_VAL_L_S_TMP WC_CCB_CHAR_VAL_L_S,
            /*         (SELECT DISTRIBUTION_CODE
                        FROM WC_CCB_DST_CD_CHAR_S
                       WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                             AND CHARACTERISTIC_VALUE = 'Y'
                             AND EFFECTIVE_DATE =
                                    (SELECT MAX (EFFECTIVE_DATE)
                                       FROM WC_CCB_DST_CD_CHAR_S TMP
                                      WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                                            AND TMP.DISTRIBUTION_CODE =
                                                   WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) */
            WC_CCB_DST_CD_CHAR_S_taxbl_TMP WC_CCB_DST_CD_CHAR_S_taxbl_TMP, --To determine taxable amounts
            /*          (SELECT distribution_code
                         FROM wc_ccb_dst_cd_char_s
                        WHERE     characteristic_type_code IN ('TAXS', 'TAXC')
                              AND characteristic_value = 'Y'   ---------------------------
                              AND effective_date =
                                     (SELECT MAX (EFFECTIVE_DATE)
                                        FROM WC_CCB_DST_CD_CHAR_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                                                    ('TAXS', 'TAXC')
                                             AND TMP.DISTRIBUTION_CODE =
                                                    WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) */
            WC_CCB_DST_CD_CHAR_S_txamt_tmp WC_CCB_DST_CD_CHAR_S_txamt_tmp, --to determine billed tax amounts
            /*         (SELECT distribution_code
                        FROM wc_ccb_dst_cd_char_s
                       WHERE     characteristic_type_code IN ('TAXSE', 'TAXCE')
                             AND characteristic_value = 'Y'   ---------------------------
                             AND effective_date =
                                    (SELECT MAX (EFFECTIVE_DATE)
                                       FROM WC_CCB_DST_CD_CHAR_S TMP
                                      WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                                                   ('TAXSE', 'TAXCE')
                                            AND TMP.DISTRIBUTION_CODE =
                                                   WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) */
            WC_CCB_DST_CD_CHAR_S_txexm_tmp WC_CCB_DST_CD_CHAR_S_txexm_tmp, --to determine tax exemption
            /*          (SELECT distribution_code, CHARACTERISTIC_TYPE_CODE
                         FROM wc_ccb_dst_cd_char_s
                        WHERE     characteristic_type_code IN ('GRTTX')
                              AND characteristic_value = 'Y'   ---------------------------
                              AND effective_date =
                                     (SELECT MAX (EFFECTIVE_DATE)
                                        FROM WC_CCB_DST_CD_CHAR_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                                                    ('GRTTX')
                                             AND TMP.DISTRIBUTION_CODE =
                                                    WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) */
            WC_CCB_DST_CD_CHAR_S_grttx_TMP WC_CCB_DST_CD_CHAR_S_grttx_TMP,
            /*         (SELECT *
                        FROM WC_CCB_BF_VAL_S
                       WHERE     1 = 1
                             AND BILL_FACTOR_CODE = 'CITYTCI'
                             AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                             AND EFFECTIVE_DATE =
                                    (SELECT MAX (TMP.EFFECTIVE_DATE)
                                       FROM WC_CCB_BF_VAL_S TMP
                                      WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                            AND TMP.BILL_FACTOR_CODE = 'CITYTCI'
                                            AND TMP.CHARACTERISTIC_VALUE =
                                                   WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                            AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                   TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_citytx_cmmr_tp WC_CCB_BF_VAL_S_citytx_cmmr_tp,
            /*         (SELECT *
                        FROM WC_CCB_BF_VAL_S
                       WHERE     1 = 1
                             AND BILL_FACTOR_CODE = 'CITYTR'
                             AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                             AND EFFECTIVE_DATE =
                                    (SELECT MAX (TMP.EFFECTIVE_DATE)
                                       FROM WC_CCB_BF_VAL_S TMP
                                      WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                            AND TMP.BILL_FACTOR_CODE = 'CITYTR'
                                            AND TMP.CHARACTERISTIC_VALUE =
                                                   WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                            AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                   TRUNC (SYSDATE))) */
            WC_CCB_VAL_S_citytax_resid_TMP WC_CCB_BF_VAL_S_citytax_resid,
            --20150817 bn - NEW LOGIC FOR MGE since City and County Tax are separated out in CCB...  LGC only has 1 value "CITY" which is the aggregation of City and County Tax together.
            --            - Per Nicole:
            --              MGECITY –  city tax, this is for anyone who is not res
            --              MGRSCITX – city tax, this is for res
            --              MGECOUNT – county tax, this is for anyone who is not res
            --              MGRSCOTX – county tax, this is for res
            /*          (SELECT *
                         FROM WC_CCB_BF_VAL_S
                        WHERE     1 = 1
                              AND BILL_FACTOR_CODE = 'MGECITY'
                              AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                              AND EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_BF_VAL_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                             AND TMP.BILL_FACTOR_CODE = 'MGECITY'
                                             AND TMP.CHARACTERISTIC_VALUE =
                                                    WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                             AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                    TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_citytx_MGcm_tp WC_CCB_BF_VAL_S_citytx_MGcm_tp,
            /*          (SELECT *
                         FROM WC_CCB_BF_VAL_S
                        WHERE     1 = 1
                              AND BILL_FACTOR_CODE = 'MGRSCITX'
                              AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                              AND EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_BF_VAL_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                             AND TMP.BILL_FACTOR_CODE = 'MGRSCITX'
                                             AND TMP.CHARACTERISTIC_VALUE =
                                                    WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                             AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                    TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_citytx_MGrs_tp WC_CCB_BF_VAL_S_citytx_MGrs_tp,
            /*          (SELECT *
                         FROM WC_CCB_BF_VAL_S
                        WHERE     1 = 1
                              AND BILL_FACTOR_CODE = 'MGECOUNT'
                              AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                              AND EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_BF_VAL_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                             AND TMP.BILL_FACTOR_CODE = 'MGECOUNT'
                                             AND TMP.CHARACTERISTIC_VALUE =
                                                    WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                             AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                    TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_countx_MGcm_tp WC_CCB_BF_VAL_S_countx_MGcm_tp,
            /*          (SELECT *
                         FROM WC_CCB_BF_VAL_S
                        WHERE     1 = 1
                              AND BILL_FACTOR_CODE = 'MGRSCOTX'
                              AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                              AND EFFECTIVE_DATE =
                                     (SELECT MAX (TMP.EFFECTIVE_DATE)
                                        FROM WC_CCB_BF_VAL_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                             AND TMP.BILL_FACTOR_CODE = 'MGRSCOTX'
                                             AND TMP.CHARACTERISTIC_VALUE =
                                                    WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                             AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                    TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_countx_MGrs_tp WC_CCB_BF_VAL_S_countx_MGrs_tp,
            /*(SELECT
            SA_ID, TAX_EXEMPT_TYPE_CODE, PERCENT_EXEMPMT
               FROM wc_ccb_sa_conterm_s
              WHERE     START_DATE =
                           (SELECT MAX (START_DATE)
                              FROM WC_CCB_SA_CONTERM_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CONTERM_S.SA_ID
                                   AND BILL_FACTOR_CODE in ('STATE','STATET') --Hardcoding State... May need to add City logic later but right now everything is the same
                                                                 )
                    AND bill_Factor_code in ('STATE','STATET'))*/
            WC_CCB_SA_CONTERM_S_tmp WC_CCB_SA_CONTERM_S,
            /*        (SELECT *
                       FROM WC_CCB_BF_VAL_S
                      WHERE     1 = 1
                            AND BILL_FACTOR_CODE = 'STATET'
                            AND CHARACTERISTIC_TYPE_CODE = 'STATET'
                            AND EFFECTIVE_DATE =
                                   (SELECT MAX (TMP.EFFECTIVE_DATE)
                                      FROM WC_CCB_BF_VAL_S TMP
                                     WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'STATET'
                                           AND TMP.BILL_FACTOR_CODE = 'STATET'
                                           AND TMP.CHARACTERISTIC_VALUE =
                                                  WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                           AND TRUNC (TMP.EFFECTIVE_DATE) <
                                                  TRUNC (SYSDATE))) */
            WC_CCB_BF_VAL_S_statetax_TMP WC_CCB_BF_VAL_S_statetax_TMP,
            /*          (SELECT
                      *
                         FROM WC_CCB_SA_TYPE_CHAR_S
                        WHERE     CHARACTERISTIC_TYPE_CODE = 'TRNSSVC'
                              AND SEQUENCE_NUMBER =
                                     (SELECT MAX (TMP.SEQUENCE_NUMBER)
                                        FROM WC_CCB_SA_TYPE_CHAR_S TMP
                                       WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSSVC'
                                             AND TMP.SA_TYPE_CODE =
                                                    WC_CCB_SA_TYPE_CHAR_S.SA_TYPE_CODE
                                             AND TMP.CIS_DIVISION =
                                                    WC_CCB_SA_TYPE_CHAR_S.CIS_DIVISION)) */
            WC_CCB_SA_TYPE_CHAR_S_trns_tmp WC_CCB_SA_TYPE_CHAR_S_trns_tmp,
            /*          (SELECT DISTINCT wc_ccb_dst_cd_char_s.distribution_code
                         FROM wc_ccb_dst_cd_char_s, wc_ccb_ft_gl_s, wc_ccb_ft_s --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)
                        WHERE     wc_ccb_dst_cd_char_s.distribution_code IN
                                     (SELECT distribution_code
                                        FROM wc_ccb_dst_cd_char_s
                                       WHERE     characteristic_type_code = 'GRTNR'
                                             AND characteristic_value = 'Y')
                              AND sibling_id IN
                                     (SELECT bseg_id FROM wc_ccb_bseg_cl_char_trans_s) --20150810 bn - and distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')
                              AND wc_ccb_dst_cd_char_s.distribution_code =
                                     wc_ccb_ft_gl_s.distribution_code
                              AND wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id) */
            WC_CCB_DST_CD_CHAR_S_trnbl_tpl WC_CCB_DST_CD_CHAR_S_trnbl_tpl, --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account
            /*(SELECT DISTINCT wc_ccb_ft_gl_s.ft_id
               FROM wc_ccb_dst_cd_char_s, wc_ccb_ft_gl_s, wc_ccb_ft_s --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)
              WHERE     wc_ccb_dst_cd_char_s.distribution_code IN
                           (SELECT distribution_code
                              FROM wc_ccb_dst_cd_char_s
                             WHERE     characteristic_type_code = 'GRTNR'
                                   AND characteristic_value = 'Y')
                    --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)and wc_ccb_dst_cd_char_s.distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')
                    AND sibling_id IN
                           (SELECT bseg_id FROM wc_ccb_bseg_cl_char_trans_s) --20150810 bn -  (select bseg_id from wc_Ccb_bseg_cl_char_s where wc_Ccb_bseg_cl_char_s.chararacteristic_type_code = 'CM-TRSLI')
                    AND wc_ccb_dst_cd_char_s.distribution_code =
                           wc_ccb_ft_gl_s.distribution_code
                    AND wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id) */
            WC_CCB_WC_CCB_DST_CD_CHRSft_TP WC_CCB_DST_CD_CHAR_S_ft --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account
                                                                  ,
            /*(select premise_id, 'Y' prem_ota_flag from WC_CCB_PREM_CHAR_S where characteristic_type_code = 'CM-OTA')*/
            WC_CCB_PREM_OTA_tmp PREM_OTA
      WHERE     1 = 1
            AND WC_CCB_FT_GL_S.FT_ID = WC_CCB_FT_S.INTEGRATION_ID
            AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID(+)
            AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION =
                   WC_CCB_SA_TYPE_S.INTEGRATION_ID
            AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID =
                   WC_CCB_PREM_S.INTEGRATION_ID(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
     --20160314 BN - modifying for PROD ISSUES       AND wc_ccb_ft_s.ft_type_flag IN ('BS', 'BX')               --BILLS
            AND wc_ccb_ft_s.redundant_dw = 'N'
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_taxbl_TMP.DISTRIBUTION_CODE(+)
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_trnbl_tpl.distribution_code(+) --20130814 bn - to determine what trans bills have some tax
            AND wc_ccb_ft_s.ft_id = WC_CCB_DST_CD_CHAR_S_ft.ft_id(+) --20130814 bn - to determine if a trans bill has tax or not
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytx_cmmr_tp.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytax_resid.CHARACTERISTIC_VALUE(+)
            --20150817 bn - new logic for MGE City / County Sales Tax
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytx_MGcm_tp.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytx_MGrs_tp.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_countx_MGcm_tp.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_countx_MGrs_tp.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_SA_S.SA_ID = WC_CCB_SA_CONTERM_S.SA_ID(+)
            AND WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE =
                   WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_TYPE_CODE(+)
            AND wc_ccb_sa_s.account_id = wc_ccb_acct_s.integration_id -----------------
            AND wc_ccb_acct_s.customer_class_code =
                   wc_ccb_cust_cl_s.integration_id
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_txamt_tmp.distribution_code(+) --billed taxes
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_grttx_TMP.distribution_code(+) --grt tax amount
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_txexm_tmp.distribution_code(+) --tax exempt amounts
            AND WC_CCB_SA_S.sa_type_code =
                   WC_CCB_SA_TYPE_CHAR_S_trns_tmp.sa_type_code(+)
            AND wc_ccb_sa_s.cis_division =
                   WC_CCB_SA_TYPE_CHAR_S_trns_tmp.cis_division(+)
            AND WC_CCB_SA_TYPE_CHAR_S_trns_tmp.characteristic_value(+) = 'Y'
            AND WC_CCB_BF_VAL_S_statetax_TMP.BILL_FACTOR_CODE(+) = 'STATET' --WC_CCB_BF_S.INTEGRATION_ID--
            AND WC_CCB_BF_VAL_S_statetax_TMP.CHARACTERISTIC_VALUE(+) = 'MO' --!!!!!!!!!!!!!!!!!!NEED TO CHANGE THIS TO JOIN TO PREMISE
            AND FROZEN_BY <> 'CONV'
            AND NVL (wc_ccb_acct_s.CUSTOMER_CLASS_CODE, '-999') <> 'DMG'
            AND wc_ccb_prem_s.premise_id = PREM_OTA.premise_id(+)        -- RK
   -----------------------------------------------------------------------------------------------------------------------------------
   --  and TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE) >= to_date ('12/01/2015','MM/DD/YYYY') --------RK TESTING
   --  and TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE) <= to_date ('12/31/2015','MM/DD/YYYY') --------RK TESTING
   -----------------------------------------------------------------------------------------------------------------------------------
   GROUP BY WC_CCB_PREM_CHAR_S.TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION,
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                           IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        0 -----------------------NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0) ----                 + NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                                                                        ) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                  END                                                    -- RK
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        0 -----------------------NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytax_resid.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0) ----                 + NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                                                                        ) --RESIDENTIAL
                  END                                                     --RK
               ELSE
                  0
            END,                                                  -- CITY RATE
            --RK
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                           IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             ----              NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0)
                             ----              +
                             NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                  END                                                    -- RK
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  CASE
                     WHEN NVL (PREM_OTA.prem_ota_flag, 'N') = 'Y'        -- RK
                     THEN
                        NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)
                     ELSE
                        NVL (WC_CCB_BF_VAL_S_citytax_resid.val,
                             ----              NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0)
                             ----              +
                             NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)) --RESIDENTIAL
                  END
               ELSE
                  0
            END,
            --COUNTY_TAX_RATE,
            --RK
            NVL (
               (CASE
                   WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                              ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                        OR (    WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                   IS NOT NULL
                            AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL)
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                   THEN
                      0
                   WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                ('CI')
                         AND PERCENT_EXEMPMT = 100)
                   THEN
                      0
                   ELSE
                      WC_CCB_BF_VAL_S_statetax_TMP.VAL
                END),
               0),
            NVL (PREM_OTA.prem_ota_flag, 'N'),                           -- RK
            WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT,                       ---- RK
            WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
            WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION,
            TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE), --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
               WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE
            || '::'
            || WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION
            || '::'
            || TO_CHAR (WC_CCB_FT_S.ACCOUNTING_DATE, 'MM/DD/YYYY') --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
            || '::'
            || TO_CHAR (
                  CASE
                     WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                             ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                     THEN
                        0                                        --20130814 bn
                     WHEN     WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                                 IS NOT NULL
                          AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
                     THEN
                        0                                        --20130814 bn
                     WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                             ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                     THEN
                        NVL (
                           WC_CCB_BF_VAL_S_citytx_cmmr_tp.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGcm_tp.val, 0)
                           + NVL (WC_CCB_BF_VAL_S_countx_MGcm_tp.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                     WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                             ('DR', 'R', 'RH', 'RHP')
                     THEN
                        NVL (
                           WC_CCB_BF_VAL_S_citytax_resid.val,
                             NVL (WC_CCB_BF_VAL_S_citytx_MGrs_tp.val, 0)
                           + NVL (WC_CCB_BF_VAL_S_countx_MGrs_tp.val, 0)) --RESIDENTIAL
                     ELSE
                        0
                  END)
            || '::'
            || CASE
                  WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                          ('DR', 'R', 'RH', 'RHP')
                  THEN
                     'Residential'
                  WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id
                          IS NOT NULL
                  THEN
                     'Transportation'
                  ELSE
                     'Other'
               END
            || '::'
            || CASE
                  WHEN PERCENT_EXEMPMT = 100 THEN 'EXEMPT'
                  ELSE 'PARTEXEMPT'
               END
            || '::'
            || NVL (PREM_OTA.prem_ota_flag, 'N')                          --RK
            || '::'
            || WC_CCB_SA_CONTERM_S.PERCENT_EXEMPMT                        --RK
                                                  ,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  'Residential'
               WHEN WC_CCB_SA_TYPE_CHAR_S_trns_tmp.integration_id IS NOT NULL
               THEN
                  'Transportation'
               ELSE
                  'Other'
            END,
            wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
;






--20130809 BN - DETAILED VIEW OF THE SALES TAX INFORMATION
--20130815 bn - updated logic for transportation customer

--20130912 bn - changing post_To_gl_on_or_after_date to accounting_date (based on logic provided by CCB)

--20131101 bn - adding logic to get the rate as of the FT.Accounting Date
--20150810 bn - new logic for Transportation customers for ws3
--20150817 bn - New logic for City and County tax for MGE... MGE separates the values whereas Laclede has 1 value that combines city and county.
--20160315 bn - new logic for distribution code lookups.  Our previous logic was flawed.
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SALES_TAX_DETAIL_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_LOAD_NUMBER,
   W_INSERT_DT,
   W_UPDATE_DT,
   CUSTOMER_CLASS_CODE,
   JOURNAL_DATE,
   TOWN_CODE,
   TOWN_CODE_DESCRIPTION,
   TAX_EXEMPT_TYPE_CODE,
   TAX_EXEMPT_DESCRIPTION,
   TOTAL_SALES_AMOUNT,
   TAXABLE_REVENUE_AMOUNT,
   CITY_TAX_RATE,
   STATE_TAX_RATE,
   CALCULATED_TAXES_AMOUNT,
   BILL_TAXES_AMOUNT,
   TAX_EXEMPTION_AMOUNT,
   TOTAL_EXEMPT_AMOUNT,
   GRT_TAX_AMOUNT,
   ACCOUNT_ID,
   SA_ID,
   FT_ID
)
AS
     SELECT    wc_ccb_acct_s.account_id
            || '::'
            || wc_ccb_sa_s.sa_id
            || '::'
            || wc_ccb_ft_s.ft_id
               INTEGRATION_ID,
            3000 DATASOURCE_NUM_ID,
            0 W_LOAD_NUMBER,
            SYSDATE W_INSERT_DT,
            SYSDATE W_UPDATE_DT,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  'Residential'
               WHEN wc_ccb_sa_type_char_s_trans.integration_id IS NOT NULL
               THEN
                  'Transportation'
               ELSE
                  'Other'
            END
               CUSTOMER_CLASS, --This is used to show Residential and Transportation records separately
            TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE) JOURNAL_DATE, --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
            WC_CCB_PREM_CHAR_S.TOWN_CODE TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION TOWN_CODE_DESCRIPTION,
            WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
            WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION,
            SUM (
               CASE
                  WHEN     wc_ccb_ft_gl_s.total_amount_sw = 'Y'
                       AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE NOT IN
                              (SELECT DISTRIBUTION_CODE
                                 FROM WC_CCB_DST_CD_CHAR_S
                                WHERE CHARACTERISTIC_TYPE_CODE IN
                                         ('TAXS', 'TAXC'))
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                  ELSE
                     0
               END)
               TOTAL_SALES_AMOUNT, --Total Sales Amount  (I don't think we need the tax filter but leaving it)
            SUM (
               CASE
                  WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                              IS NOT NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1         --20130814 bn
                  WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                              IS NULL
                  THEN
                     0                                           --20130814 BN
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE NOT IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'CI', 'UASGN')
                            OR WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IS NULL)
                       AND (wc_ccb_sa_type_char_s_trans.integration_id IS NULL)
                       AND (   WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE NOT IN
                                  ('DR', 'R', 'RH', 'RHP')
                            OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IS NULL)
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND (WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN ('CI'))
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1 --* -(1-(PERCENT_EXEMPMT*.01))
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                              IS NOT NULL
                       AND WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                       AND NVL (
                              WC_CCB_BF_VAL_S_citytax_resid.val,
                                NVL (WC_CCB_BF_VAL_S_citytax_MGEres.val, 0)
                              + NVL (WC_CCB_BF_VAL_S_countax_MGEres.val, 0)) >
                              0                --20131101 bn - used to be .val
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE NOT IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'CI', 'UASGN')
                            OR WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IS NULL) --new when
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                  ELSE
                     0
               END)
               TAXABLE_REVENUE_AMOUNT,
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     wc_ccb_sa_type_char_s_trans.integration_id IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  NVL (
                     WC_CCB_BF_VAL_S_citytax_commer.val,
                       NVL (WC_CCB_BF_VAL_S_citytax_MGEcom.val, 0)
                     + NVL (WC_CCB_BF_VAL_S_countax_MGEcom.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  NVL (
                     WC_CCB_BF_VAL_S_citytax_resid.val,
                       NVL (WC_CCB_BF_VAL_S_citytax_MGEres.val, 0)
                     + NVL (WC_CCB_BF_VAL_S_countax_MGEres.val, 0)) --RESIDENTIAL
               ELSE
                  0
            END
               CITY_TAX_RATE,
            NVL (
               (CASE
                   WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                              ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                        OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                   IS NOT NULL
                            AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL)
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                   THEN
                      0
                   WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN ('CI')
                         AND PERCENT_EXEMPMT = 100)
                   THEN
                      0
                   ELSE
                      WC_CCB_BF_VAL_S_statetax.VAL
                END),
               0)
               STATE_TAX_RATE,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                          IS NOT NULL --Taking the Taxable Revenue and multiplying it by the rates
                  THEN
                       (CASE
                           WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                                       IS NOT NULL
                                AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                                       IS NOT NULL
                           THEN
                              NVL (WC_CCB_FT_GL_S.AMOUNT, 0)     --20130814 bn
                           WHEN wc_ccb_sa_type_char_s_trans.integration_id
                                   IS NULL
                           THEN
                              NVL (WC_CCB_FT_GL_S.AMOUNT, 0)     --20130814 bn
                           ELSE
                              0
                        END)                                     --20130814 bn
                     * -1
                     * (  (  NVL (
                                (CASE                             --CITY TAXES
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                                                    IS NULL)
                                    THEN
                                       0                         --20130814 bn
                                    WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                            ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                                    THEN
                                       NVL (
                                          WC_CCB_BF_VAL_S_citytax_commer.val,
                                            NVL (
                                               WC_CCB_BF_VAL_S_citytax_MGEcom.val,
                                               0)
                                          + NVL (
                                               WC_CCB_BF_VAL_S_countax_MGEcom.val,
                                               0)) --COMMERCIAL  ---                  /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                                    WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                            ('DR', 'R', 'RH', 'RHP')
                                    THEN
                                       NVL (
                                          WC_CCB_BF_VAL_S_citytax_resid.val,
                                            NVL (
                                               WC_CCB_BF_VAL_S_citytax_MGEres.val,
                                               0)
                                          + NVL (
                                               WC_CCB_BF_VAL_S_countax_MGEres.val,
                                               0))          --RESIDENTIAL  ---
                                    ELSE
                                       0
                                 END),
                                0)
                           + NVL (
                                (CASE
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT <> 100)
                                    THEN
                                         WC_CCB_BF_VAL_S_statetax.VAL
                                       * ( (100 - PERCENT_EXEMPMT) * .01)
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT = 100)
                                    THEN
                                       0
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                                                    IS NULL)
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('DR', 'R', 'RH', 'RHP') -- or WC_CCB_SA_CONTERM_S.sa_id is null   --20130808
                                    THEN
                                       0                         --STATE TAXES
                                    ELSE
                                       WC_CCB_BF_VAL_S_statetax.VAL
                                 END),
                                0))
                        * .01)
                  ELSE
                     0
               END)
               CALCULATED_TAXES_AMOUNT,
            NVL (
               SUM (
                  CASE
                     WHEN WC_CCB_DST_CD_CHAR_S_tax_amts.DISTRIBUTION_CODE
                             IS NOT NULL
                     THEN
                        NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                     ELSE
                        0
                  END),
               0)                                            --taxable revenue
               BILL_TAXES_AMOUNT,      /* Add logic for Billed Taxes Amount */
            SUM (
               NVL (
                  (CASE
                      WHEN     WC_CCB_DST_CD_CHAR_S_tax_exem.DISTRIBUTION_CODE
                                  IS NOT NULL
                           AND WC_CCB_DST_CD_CHAR_S_grttax.distribution_code
                                  IS NULL
                      THEN
                         NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                      ELSE
                         0
                   END),
                  0))
               TAX_EXEMPTION_AMOUNT,  /* Add logic for Tax Exemption Amount */
            SUM (
               CASE
                  WHEN     WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                              IS NULL
                       AND (   WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                  ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                            OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                       IS NOT NULL
                                AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                                       IS NULL))                 --20130814 bn
                  THEN
                     (CASE
                         WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                                     IS NOT NULL
                              AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                                     IS NULL
                         THEN
                            NVL (WC_CCB_FT_GL_S.AMOUNT, 0)       --20130814 bn
                         WHEN wc_ccb_sa_type_char_s_trans.integration_id
                                 IS NULL
                         THEN
                            NVL (WC_CCB_FT_GL_S.AMOUNT, 0)       --20130814 bn
                         ELSE
                            0
                      END)
                  WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                              IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code
                              IS NOT NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)              --20130814 bn
                  --WHEN CITY + STATE = 0 THEN ALL SHOULD BE EXEMPT
                  WHEN       NVL (
                                CASE
                                   WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                           ('AGR',
                                            'DPAY',
                                            'GOV',
                                            'RGL',
                                            'UASGN')
                                   THEN
                                      0                          --20130814 bn
                                   WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                                               IS NOT NULL
                                        AND WC_CCB_DST_CD_CHAR_S_ft.ft_id
                                               IS NULL
                                   THEN
                                      0                          --20130814 bn
                                   WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                           ('C', 'CH', 'DC', 'DI', 'I', 'IH')
                                   THEN
                                      NVL (
                                         WC_CCB_BF_VAL_S_citytax_commer.val,
                                           NVL (
                                              WC_CCB_BF_VAL_S_citytax_MGEcom.val,
                                              0)
                                         + NVL (
                                              WC_CCB_BF_VAL_S_countax_MGEcom.val,
                                              0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
                                   WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                           ('DR', 'R', 'RH', 'RHP')
                                   THEN
                                      NVL (
                                         WC_CCB_BF_VAL_S_citytax_resid.val,
                                           NVL (
                                              WC_CCB_BF_VAL_S_citytax_MGEres.val,
                                              0)
                                         + NVL (
                                              WC_CCB_BF_VAL_S_countax_MGEres.val,
                                              0))                --RESIDENTIAL
                                   ELSE
                                      0
                                END,
                                0)                                      --CITY
                           + NVL (
                                (CASE
                                    WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                               ('AGR',
                                                'DPAY',
                                                'GOV',
                                                'RGL',
                                                'UASGN')
                                         OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                                    IS NOT NULL
                                             AND WC_CCB_DST_CD_CHAR_S_ft.ft_id
                                                    IS NULL)
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('DR', 'R', 'RH', 'RHP')
                                         OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                                               ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                                    THEN
                                       0
                                    WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                                 ('CI')
                                          AND PERCENT_EXEMPMT = 100)
                                    THEN
                                       0
                                    ELSE
                                       WC_CCB_BF_VAL_S_statetax.VAL
                                 END),
                                0)                                     --STATE
                                  = 0
                       AND WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE
                              IS NULL
                  THEN
                     NVL (WC_CCB_FT_GL_S.AMOUNT, 0)
                  /*              WHEN WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE IS NULL AND WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE   IN ('CI')
                                THEN
                                   0
                                WHEN  WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE IS NULL and  WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE  IN ('DR','R','RH','RHP')  AND WC_CCB_BF_VAL_S_citytax_resid.VAL = 0  --NEW WHEN
                                THEN NVL(WC_CCB_FT_GL_S.AMOUNT,0)
                                WHEN  WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE  IN ('OTH') AND WC_CCB_SA_TYPE_S.SA_TYPE_CODE  in ( 'GINS', 'GINSL', 'GEW') and wc_ccb_ft_gl_s.total_amount_sw = 'Y'  --Data that has no GRT taken out.
                                   THEN NVL(WC_CCB_FT_GL_S.AMOUNT,0)   */
                  ELSE
                     0
               END)
               TOTAL_EXEMPT_AMOUNT,
            SUM (
               (CASE
                   WHEN WC_CCB_DST_CD_CHAR_S_grttax.DISTRIBUTION_CODE
                           IS NOT NULL
                   THEN
                      NVL (WC_CCB_FT_GL_S.AMOUNT, 0) * -1
                   ELSE
                      0
                END))
               GRT_TAX_AMOUNT,
            WC_CCB_ACCT_S.ACCOUNT_ID,
            WC_CCB_SA_S.SA_ID,
            WC_CCB_FT_S.FT_ID
       FROM wc_ccb_acct_s,                                             -------
            wc_ccb_cust_cl_s,                                   --------------
            wc_ccb_sa_s,
            WC_CCB_SA_TYPE_S,
            WC_CCB_PREM_S,
            (SELECT PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_PREM_CHAR_S,
            (SELECT *
               FROM WC_CCB_CHAR_VAL_L_S
              WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') WC_CCB_CHAR_VAL_L_S,
            WC_CCB_FT_S,
            WC_CCB_FT_GL_S,
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (
                            SELECT MAX (effdt)
                              FROM wc_ccb_dst_code_eff_s TMP
                             WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                           --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                           --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                           --20160315 BN -   WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                              --20160314 bn - per lynette     AND TMP.DISTRIBUTION_CODE =
                              --20160314 bn - per lynette              WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                          )) WC_CCB_DST_CD_CHAR_S_taxable, --To determine taxable amounts
            (SELECT distribution_code
               FROM wc_ccb_dst_cd_char_s
              WHERE     characteristic_type_code IN ('TAXS', 'TAXC')
                    AND characteristic_value = 'Y' ---------------------------
                    AND effective_date =
                           (SELECT MAX (effdt)
                              FROM wc_ccb_dst_code_eff_s TMP
                             WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                           --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                           --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                           --20160315 BN -   WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                           --20160315 BN -                ('TAXS', 'TAXC')
                               --20160314 bn - per lynette      AND TMP.DISTRIBUTION_CODE =
                               --20160314 bn - per lynette             WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                          )) WC_CCB_DST_CD_CHAR_S_tax_amts, --to determine billed tax amounts
            (SELECT distribution_code
               FROM wc_ccb_dst_cd_char_s
              WHERE     characteristic_type_code IN ('TAXSE', 'TAXCE')
                    AND characteristic_value = 'Y' ---------------------------
                    AND effective_date =
                           (SELECT MAX (effdt)
                              FROM wc_ccb_dst_code_eff_s TMP
                             WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                           --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                           --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                           -- WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                           --20160315 BN -                ('TAXSE', 'TAXCE')
                              --20160314 bn - per lynette       AND TMP.DISTRIBUTION_CODE =
                              --20160314 bn - per lynette              WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                          )) WC_CCB_DST_CD_CHAR_S_tax_exem, --to determine tax exemption
            (SELECT distribution_code, CHARACTERISTIC_TYPE_CODE
               FROM wc_ccb_dst_cd_char_s
              WHERE     characteristic_type_code IN ('GRTTX')
                    AND characteristic_value = 'Y' ---------------------------
                    AND effective_date =
                           (SELECT MAX (effdt)
                              FROM wc_ccb_dst_code_eff_s TMP
                             WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                           --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                           --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                           --20160315 BN -    WHERE     TMP.CHARACTERISTIC_TYPE_CODE IN
                           --20160315 BN -                ('GRTTX')
                                --20160314 bn - per lynette     AND TMP.DISTRIBUTION_CODE =
                                --20160314 bn - per lynette            WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE
                                          )) WC_CCB_DST_CD_CHAR_S_grttax,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'CITYTCI'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'CITYTCI'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_citytax_commer,
            --20150814 bn -          (select * from WC_CCB_CITY_TAX_RATE_STG_TMP where bill_factor_code = 'CITYTCI')
            --20150814 bn -                WC_CCB_BF_VAL_S_citytax_commer,                         --20131101 bn
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'CITYTR'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'CITYTR'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) --20150814 bn -               (select * from WC_CCB_CITY_TAX_RATE_STG_TMP where bill_factor_code = 'CITYTR')
                                                           WC_CCB_BF_VAL_S_citytax_resid, --20131101 bn
            --20150817 bn - NEW LOGIC FOR MGE since City and County Tax are separated out in CCB...  LGC only has 1 value "CITY" which is the aggregation of City and County Tax together.
            --            - Per Nicole:
            --              MGECITY –  city tax, this is for anyone who is not res
            --              MGRSCITX – city tax, this is for res
            --              MGECOUNT – county tax, this is for anyone who is not res
            --              MGRSCOTX – county tax, this is for res

            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'MGECITY'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'MGECITY'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_citytax_MGEcom,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'MGRSCITX'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'MGRSCITX'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_citytax_MGEres,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'MGECOUNT'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'MGECOUNT'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_countax_MGEcom,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'MGRSCOTX'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'MGRSCOTX'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_countax_MGEres,
            (SELECT SA_ID, TAX_EXEMPT_TYPE_CODE, PERCENT_EXEMPMT
               FROM wc_ccb_sa_conterm_s
              WHERE     START_DATE =
                           (SELECT MAX (START_DATE)
                              FROM WC_CCB_SA_CONTERM_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CONTERM_S.SA_ID
                                   AND BILL_FACTOR_CODE = 'STATE' --Hardcoding State... May need to add City logic later but right now everything is the same
                                                                 )
                    AND bill_Factor_code = 'STATE') WC_CCB_SA_CONTERM_S,
            wc_ccb_tax_ex_type_s,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'STATET'
                    AND CHARACTERISTIC_TYPE_CODE = 'STATET'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'STATET'
                                   AND TMP.BILL_FACTOR_CODE = 'STATET'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) WC_CCB_BF_VAL_S_statetax,
            (SELECT *
               FROM WC_CCB_SA_TYPE_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'TRNSSVC'
                    AND SEQUENCE_NUMBER =
                           (SELECT MAX (TMP.SEQUENCE_NUMBER)
                              FROM WC_CCB_SA_TYPE_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSSVC'
                                   AND TMP.SA_TYPE_CODE =
                                          WC_CCB_SA_TYPE_CHAR_S.SA_TYPE_CODE
                                   AND TMP.CIS_DIVISION =
                                          WC_CCB_SA_TYPE_CHAR_S.CIS_DIVISION)) WC_CCB_SA_TYPE_CHAR_S_trans,
            /*   (select distinct distribution_code from wc_ccb_dst_cd_char_s
                    where distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'GRTNR' and characteristic_value = 'Y')
                        and distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')) WC_CCB_DST_CD_CHAR_S_tran_bill, --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account

               (select distinct ft_id from wc_ccb_dst_cd_char_s, wc_ccb_ft_gl_s
                    where wc_ccb_dst_cd_char_s.distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'GRTNR' and characteristic_value = 'Y')
                        and wc_ccb_dst_cd_char_s.distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')
                        and wc_ccb_dst_cd_char_s.distribution_code = wc_ccb_ft_gl_s.distribution_code) WC_CCB_DST_CD_CHAR_S_ft --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account
            */

            (SELECT DISTINCT wc_ccb_dst_cd_char_s.distribution_code
               FROM wc_ccb_dst_cd_char_s, wc_ccb_ft_gl_s, wc_ccb_ft_s --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)
              WHERE     wc_ccb_dst_cd_char_s.distribution_code IN
                           (SELECT distribution_code
                              FROM wc_ccb_dst_cd_char_s
                             WHERE     characteristic_type_code = 'GRTNR'
                                   AND characteristic_value = 'Y'
                                   AND EFFECTIVE_DATE =
                                     (SELECT MAX (effdt)
                                          FROM wc_ccb_dst_code_eff_s TMP
                                         WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                           --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                           --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                           --20160315 BN -   WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                           )
                             )
                    AND sibling_id IN
                           (SELECT bseg_id FROM wc_ccb_bseg_cl_char_trans_s) --20150810 bn - and distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')
                    AND wc_ccb_dst_cd_char_s.distribution_code =
                           wc_ccb_ft_gl_s.distribution_code
                    AND wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id) WC_CCB_DST_CD_CHAR_S_tran_bill, --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account
            (SELECT DISTINCT wc_ccb_ft_gl_s.ft_id
               FROM wc_ccb_dst_cd_char_s, wc_ccb_ft_gl_s, wc_ccb_ft_s --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)
              WHERE     wc_ccb_dst_cd_char_s.distribution_code IN
                           (SELECT distribution_code
                              FROM wc_ccb_dst_cd_char_s
                             WHERE     characteristic_type_code = 'GRTNR'
                                   AND characteristic_value = 'Y'
                                   AND EFFECTIVE_DATE =
                                     (
                                     SELECT MAX (effdt)
                                      FROM wc_ccb_dst_code_eff_s TMP
                                     WHERE     TMP.dst_id = wc_ccb_dst_cd_char_s.DISTRIBUTION_CODE
                                   --20160315 BN - SELECT MAX (EFFECTIVE_DATE)
                                   --20160315 BN -    FROM WC_CCB_DST_CD_CHAR_S TMP
                                   --20160315 BN -   WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                           )                                   
                                   )
                    --20150805 bn - for ws3 (change of logic how REVRTCLS is stored)and wc_ccb_dst_cd_char_s.distribution_code in (select distribution_code from wc_ccb_dst_cd_char_s where characteristic_type_code = 'REVRTCLS' and characteristic_value = 'ITSB')
                    AND sibling_id IN
                           (SELECT bseg_id FROM wc_ccb_bseg_cl_char_trans_s) --20150810 bn -  (select bseg_id from wc_Ccb_bseg_cl_char_s where wc_Ccb_bseg_cl_char_s.chararacteristic_type_code = 'CM-TRSLI')
                    AND wc_ccb_dst_cd_char_s.distribution_code =
                           wc_ccb_ft_gl_s.distribution_code
                    AND wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id) WC_CCB_DST_CD_CHAR_S_ft --20130814 bn - This is used to determine what Gas is Sold on a Transportation Customers account
      WHERE     1 = 1
            AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID(+)
            AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION =
                   WC_CCB_SA_TYPE_S.INTEGRATION_ID
            AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID =
                   WC_CCB_PREM_S.INTEGRATION_ID(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_FT_GL_S.FT_ID = WC_CCB_FT_S.INTEGRATION_ID
            AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
        --20160314 BN - modifying for PROD ISSUES         AND wc_ccb_ft_s.ft_type_flag IN ('BS', 'BX')               --BILLS
            AND wc_ccb_ft_s.redundant_dw = 'N'
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_taxable.DISTRIBUTION_CODE(+)
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_tran_bill.distribution_code(+) --20130814 bn - to determine what trans bills have some tax
            AND wc_ccb_ft_s.ft_id = WC_CCB_DST_CD_CHAR_S_ft.ft_id(+) --20130814 bn - to determine if a trans bill has tax or not
            -- AND WC_CCB_PREM_CHAR_S.TOWN_CODE = WC_CCB_BF_VAL_S_citytax_commer.CHARACTERISTIC_VALUE(+)         --20131101 bn
            --AND WC_CCB_PREM_CHAR_S.TOWN_CODE = WC_CCB_BF_VAL_S_citytax_resid.CHARACTERISTIC_VALUE(+)                     --20131101 bn
            AND WC_CCB_SA_S.SA_ID = WC_CCB_SA_CONTERM_S.SA_ID(+)
            AND WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE =
                   WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_TYPE_CODE(+)
            AND wc_ccb_sa_s.account_id = wc_ccb_acct_s.integration_id -----------------
            AND wc_ccb_acct_s.customer_class_code =
                   wc_ccb_cust_cl_s.integration_id
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_tax_amts.distribution_code(+) --billed taxes
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_grttax.distribution_code(+) --grt tax amount
            AND wc_ccb_ft_gl_s.distribution_code =
                   WC_CCB_DST_CD_CHAR_S_tax_exem.distribution_code(+) --tax exempt amounts
            AND WC_CCB_SA_S.sa_type_code =
                   WC_CCB_SA_TYPE_CHAR_S_trans.sa_type_code(+)
            AND wc_ccb_sa_s.cis_division =
                   wc_ccb_sa_type_char_s_trans.cis_division(+)
            AND wc_ccb_sa_type_char_s_trans.characteristic_value(+) = 'Y'
            AND WC_CCB_BF_VAL_S_statetax.BILL_FACTOR_CODE(+) = 'STATET' --WC_CCB_BF_S.INTEGRATION_ID--
            AND WC_CCB_BF_VAL_S_statetax.CHARACTERISTIC_VALUE(+) = 'MO' --!!!!!!!!!!!!!!!!!!NEED TO CHANGE THIS TO JOIN TO PREMISE
            --20150814 bn - and WC_CCB_BF_VAL_S_citytax_commer.ft_id(+) = wc_ccb_ft_s.ft_id         --20131101 bn
            --20150814 bn - and WC_CCB_BF_VAL_S_citytax_resid.ft_id(+) = wc_ccb_ft_s.ft_id          --20131101 bn

            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytax_commer.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytax_resid.CHARACTERISTIC_VALUE(+)
            --20150817 bn - new logic for MGE City / County Sales Tax
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytax_MGEcom.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_citytax_MGEres.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_countax_MGEcom.CHARACTERISTIC_VALUE(+)
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_BF_VAL_S_countax_MGEres.CHARACTERISTIC_VALUE(+)
            AND FROZEN_BY <> 'CONV'
            AND NVL (wc_ccb_acct_s.CUSTOMER_CLASS_CODE, '-999') <> 'DMG'
   GROUP BY WC_CCB_PREM_CHAR_S.TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION,
            CASE
               WHEN WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                       ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
               THEN
                  0                                              --20130814 bn
               WHEN     wc_ccb_sa_type_char_s_trans.integration_id
                           IS NOT NULL
                    AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL
               THEN
                  0                                              --20130814 bn
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')
               THEN
                  NVL (
                     WC_CCB_BF_VAL_S_citytax_commer.val,
                       NVL (WC_CCB_BF_VAL_S_citytax_MGEcom.val, 0)
                     + NVL (WC_CCB_BF_VAL_S_countax_MGEcom.val, 0)) --COMMERCIAL  --     /*  ADD LOGIC TO MULTIPLY TIMES THE PERCENT EXEMPT */
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  NVL (
                     WC_CCB_BF_VAL_S_citytax_resid.val,
                       NVL (WC_CCB_BF_VAL_S_citytax_MGEres.val, 0)
                     + NVL (WC_CCB_BF_VAL_S_countax_MGEres.val, 0)) --RESIDENTIAL
               ELSE
                  0
            END,
            NVL (
               (CASE
                   WHEN    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                              ('AGR', 'DPAY', 'GOV', 'RGL', 'UASGN')
                        OR (    wc_ccb_sa_type_char_s_trans.integration_id
                                   IS NOT NULL
                            AND WC_CCB_DST_CD_CHAR_S_ft.ft_id IS NULL)
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('DR', 'R', 'RH', 'RHP')
                        OR WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                              ('LGC', 'OTH') --or WC_CCB_SA_CONTERM_S.sa_id is null     --20130808   --20130814 bn
                   THEN
                      0
                   WHEN (    WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE IN
                                ('CI')
                         AND PERCENT_EXEMPMT = 100)
                   THEN
                      0
                   ELSE
                      WC_CCB_BF_VAL_S_statetax.VAL
                END),
               0),
            WC_CCB_SA_CONTERM_S.TAX_EXEMPT_TYPE_CODE,
            WC_CCB_TAX_EX_TYPE_S.TAX_EXEMPT_DESCRIPTION,
            TRUNC (WC_CCB_FT_S.ACCOUNTING_DATE), --20130912 bn - changing from POST_TO_GL_ON_OR_AFTER_DATE to accounting_date
               wc_ccb_acct_s.account_id
            || '::'
            || wc_ccb_sa_s.sa_id
            || '::'
            || wc_ccb_ft_s.ft_id,
            WC_CCB_ACCT_S.ACCOUNT_ID,
            WC_CCB_SA_S.SA_ID,
            WC_CCB_FT_S.FT_ID,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')
               THEN
                  'Residential'
               WHEN wc_ccb_sa_type_char_s_trans.integration_id IS NOT NULL
               THEN
                  'Transportation'
               ELSE
                  'Other'
            END;




--20130902 bn - for monthly grt report
--20131017 BN - updating the journal date to use accounting_date
--20131022 BN - Now that the GRT program file is including all data, I think we need to look at the post_to_gl_on_or_after_date.
--20131023 bn - updating therms to not be summed in select.
--20140725 bn - Changed logic to use statistic amount from FT GL to get Therms, rather than go to BSEG SQ to get it.
--20150113 bn - For MGE WS3 - Adding CIS Division
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_FT_METRICS_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   JOURNAL_DATE,
   TOWN_CODE,
   TOWN_CODE_DESCRIPTION,
   REVENUE_CLASS_CODE,
   REVENUE_CLASS_CID,
   GRT_RATE,
   NET_REVENUE_AMOUNT,
   GRT_TAX_AMOUNT,
   PRIN_TAX_AMOUNT,
   GRT_REFUND_AMOUNT,
   IA_REVENUE_AMOUNT,
   IA_GRT_AMOUNT,
   NET_REVENUE,
   GRT_TAX_EXEMPT_REVENUE,
   THERMS,
   cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
)
AS
     SELECT    WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE
            || '::'
            || TRUNC (POST_TO_GL_ON_OR_AFTER_DATE)
               integration_id,
            3000 datasource_num_id,
            SYSDATE w_insert_dt,
            SYSDATE w_update_dt,
            0 w_load_number,
            TRUNC (POST_TO_GL_ON_OR_AFTER_DATE) JOURNAL_DATE,
            WC_CCB_PREM_CHAR_S.TOWN_CODE TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION TOWN_CODE_DESCRIPTION,
            WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
            WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE REVENUE_CLASS_CID,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')         --COMMERCIAL
               THEN
                  BF_GRT_RATE_commercial.VAL
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')                  --RESIDENTIAL
               THEN
                  BF_GRT_RATE_residential.VAL
            END
               GRT_RATE,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTNR.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               net_revenue_amount,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTTX.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               grt_tax_amount,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTPI.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               prin_tax_amount,                           --principle/interest
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTRF.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               grt_refund_amount,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTIA.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               ia_revenue_amount,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTGA.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               ia_grt_amount,
            SUM (
               CASE
                  WHEN WC_CCB_DST_CD_CHAR_S_GRTNR.DISTRIBUTION_CODE IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               net_revenue,
            SUM (
               CASE
                  WHEN     wc_ccb_ft_gl_s_grt_tax_exempt.ft_id IS NOT NULL
                       AND WC_CCB_DST_CD_CHAR_S_GRTNR.DISTRIBUTION_CODE
                              IS NOT NULL
                  THEN
                     NVL (wc_ccb_ft_gl_s.amount, 0)
                  ELSE
                     0
               END)
               grt_tax_exempt_revenue,
         sum(statistic_amount) therms, --20140725 bn - Removing subquery and joins and will use statistic amount to get therms.
		 --   SUM (WC_CCB_BSEG_SQ_S_therms.therms) therms --20131023 bn - this used to be SUM but was causing the therms to be multiplied by the number of FT GL lines.
		 wc_ccb_sa_type_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
       FROM WC_CCB_FT_GL_S,
            WC_CCB_FT_S,
            WC_CCB_SA_S,
            WC_CCB_SA_TYPE_S,
            wc_ccb_prem_s,
            (SELECT PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) wc_ccb_prem_char_s,
            (SELECT *
               FROM WC_CCB_CHAR_VAL_L_S
              WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') WC_CCB_CHAR_VAL_L_S,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE IN ('GRTBR', 'GRTBRF')
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE IN
                                          ('GRTBR', 'GRTBRF')
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) BF_GRT_RATE_residential,
            (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE IN ('GRTBCI', 'GRTBCIF')
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE IN
                                          ('GRTBCI', 'GRTBCIF')
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          WC_CCB_BF_VAL_S.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) BF_GRT_RATE_commercial,
            (SELECT DISTINCT ft_id
               FROM wc_ccb_ft_gl_f
              WHERE distribution_code IN
                       (SELECT DISTRIBUTION_CODE
                          FROM WC_CCB_DST_CD_CHAR_S
                         WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTTX'
                               AND CHARACTERISTIC_VALUE = 'Y'
                               AND EFFECTIVE_DATE =
                                      (SELECT MAX (EFFECTIVE_DATE)
                                         FROM WC_CCB_DST_CD_CHAR_S TMP
                                        WHERE     TMP.CHARACTERISTIC_TYPE_CODE =
                                                     'GRTTX'
                                              AND TMP.DISTRIBUTION_CODE =
                                                     WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE))) wc_ccb_ft_gl_s_grt_tax_exempt,
      /*      (  SELECT bill_id,
                      wc_ccb_bseg_s.bill_segment_id,
                      SUM (billable_service_quantity) therms
                 FROM wc_ccb_bseg_s, wc_ccb_bseg_sq_s
                WHERE     1 = 1
                      AND WC_CCB_BSEG_S.INTEGRATION_ID =
                             WC_CCB_BSEG_SQ_S.BILL_SEGMENT_ID
                      AND WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'TH'
             GROUP BY bill_id, wc_ccb_bseg_s.bill_segment_id) WC_CCB_BSEG_SQ_S_therms,  */--20140725 bn - Removing subquery and joins and will use statistic amount to get therms.
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTNR'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTNR, --NET REVENUE
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTTX'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTTX'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTTX, --GRT TAX
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTPI'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTPI'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTPI, --PRINCIPLE + INTEREST
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTRF'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTRF'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTRF, --GRT REFUND
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTIA'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTIA'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTIA, --I/A REVENUE
            (SELECT DISTRIBUTION_CODE
               FROM WC_CCB_DST_CD_CHAR_S
              WHERE     CHARACTERISTIC_TYPE_CODE = 'GRTGA'
                    AND CHARACTERISTIC_VALUE = 'Y'
                    AND EFFECTIVE_DATE =
                           (SELECT MAX (EFFECTIVE_DATE)
                              FROM WC_CCB_DST_CD_CHAR_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'GRTGA'
                                   AND TMP.DISTRIBUTION_CODE =
                                          WC_CCB_DST_CD_CHAR_S.DISTRIBUTION_CODE)) WC_CCB_DST_CD_CHAR_S_GRTGA --I/A GRT
      WHERE     1 = 1
            AND WC_CCB_FT_GL_S.FT_ID = WC_CCB_FT_S.INTEGRATION_ID
            AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
            AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION =
                   WC_CCB_SA_TYPE_S.INTEGRATION_ID
            AND wc_ccb_sa_s.CHARACTERISTIC_PREMISE_ID =
                   wc_ccb_prem_s.integration_id
            AND wc_ccb_prem_s.integration_id = wc_ccb_prem_char_s.premise_id
            AND WC_CCB_PREM_CHAR_S.TOWN_CODE =
                   WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE(+)
            AND wc_ccb_prem_char_s.town_code =
                   BF_GRT_RATE_residential.characteristic_value(+)
            AND wc_ccb_prem_char_s.town_code =
                   BF_GRT_RATE_commercial.characteristic_value(+)
            AND wc_ccb_ft_s.INTEGRATION_ID =
                   wc_ccb_ft_gl_s_grt_tax_exempt.ft_id(+)
            AND wc_ccb_ft_s.ft_type_flag IN ('BS', 'BX')               --BILLS
    --        AND wc_ccb_ft_s.bill_id = WC_CCB_BSEG_SQ_S_therms.bill_id(+)		--20140725 bn - Removing subquery and joins and will use statistic amount to get therms.
    --        AND wc_ccb_ft_s.sibling_id =										--			Laura S and Melissa said that it is okay the statistic amount is rounded.
    --               wc_ccb_bseg_sq_s_therms.bill_segment_id(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTNR.DISTRIBUTION_CODE(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTTX.DISTRIBUTION_CODE(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTPI.DISTRIBUTION_CODE(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTRF.DISTRIBUTION_CODE(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTIA.DISTRIBUTION_CODE(+)
            AND WC_CCB_FT_GL_S.DISTRIBUTION_CODE =
                   WC_CCB_DST_CD_CHAR_S_GRTGA.DISTRIBUTION_CODE(+)
   GROUP BY    WC_CCB_PREM_CHAR_S.TOWN_CODE
            || '::'
            || WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE
            || '::'
            || TRUNC (POST_TO_GL_ON_OR_AFTER_DATE),
            TRUNC (POST_TO_GL_ON_OR_AFTER_DATE),
            WC_CCB_PREM_CHAR_S.TOWN_CODE,
            WC_CCB_CHAR_VAL_L_S.DESCRIPTION,
            WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
            WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
            CASE
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('C', 'CH', 'DC', 'DI', 'I', 'IH')         --COMMERCIAL
               THEN
                  BF_GRT_RATE_commercial.VAL
               WHEN WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE IN
                       ('DR', 'R', 'RH', 'RHP')                  --RESIDENTIAL
               THEN
                  BF_GRT_RATE_residential.VAL
            END,
			wc_ccb_sa_type_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
			;

--20130911 bn - for case statistics by case type
CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_CASE_FS_V"
(
 "INTEGRATION_ID"
,"DATASOURCE_NUM_ID"
,"W_INSERT_DT"
,"W_UPDATE_DT"
,"W_LOAD_NUMBER"
,"CASE_ID"
,"CASE_TYPE_CODE"
,"CASE_STATUS_CODE"
,"PERSON_ID"
,"ACCOUNT_ID"
,"PREMISE_ID"
,"USER_ID"
,"CASE_COND_FLAG"
,"CONTACT_PER_ID"
,"CONTACT_METHOD_FLAG"
,"VERSION"
,"COMMENT_LONG"
,"CONTACT_INSTRUCTIONS"
,"PHONE_TYPE_CODE"
,"PHONE"
,"EXTENSION"
,"BO_DEFINITION_AREA"
,"BADGE_NUMBER"
,"OWNER"
,"MAIN_EXCEPTION_CODE"
,"REQUEST_DATE"
,"STATUS_CODE"
,"STATUS_DATE"
,"ACCOUNT_CID"
,"PREMISE_CID"
,"OWNER_DESCRIPTION"
,"MAIN_EXCEPTION_DESCRIPTION"
,"STATUS_DESCRIPTION",
CASE_TYPE_CID,		--20141006 BN - FOR ACI STATUS
CASE_STATUS_CID,
NEXT_STATUS_CODE,
NEXT_CASE_STATUS_CID,
CASE_CREATION_DATE,
CURRENT_STATUS_DATE,
SEND_LETTER_1_DATE,
SEND_LETTER_2_DATE,
SEND_96HOUR_LETTER_DATE,
CLOSED_DATE,
SP_ID,
SP_CID,
CASE_LOG_CREATION_USER --20150114 BN - FOR CM LOCK CASES REPORT.
)
AS
SELECT
 WC_CCB_CASE_S.INTEGRATION_ID
,WC_CCB_CASE_S.DATASOURCE_NUM_ID
,WC_CCB_CASE_S.W_INSERT_DT
,WC_CCB_CASE_S.W_UPDATE_DT
,WC_CCB_CASE_S.W_LOAD_NUMBER
,WC_CCB_CASE_S.CASE_ID
,WC_CCB_CASE_S.CASE_TYPE_CODE
,WC_CCB_CASE_S.CASE_STATUS_CODE
,WC_CCB_CASE_S.PERSON_ID
,WC_CCB_CASE_S.ACCOUNT_ID
,WC_CCB_CASE_S.PREMISE_ID
,WC_CCB_CASE_S.USER_ID
,WC_CCB_CASE_S.CASE_COND_FLAG
,WC_CCB_CASE_S.CONTACT_PER_ID
,WC_CCB_CASE_S.CONTACT_METHOD_FLAG
,WC_CCB_CASE_S.VERSION
,WC_CCB_CASE_S.COMMENT_LONG
,WC_CCB_CASE_S.CONTACT_INSTRUCTIONS
,WC_CCB_CASE_S.PHONE_TYPE_CODE
,WC_CCB_CASE_S.PHONE
,WC_CCB_CASE_S.EXTENSION
,WC_CCB_CASE_S.BO_DEFINITION_AREA
,(WC_BADGE_NUMBER.SRCH_CHARACTERISTIC_VALUE) BADGE_NUMBER
,(WC_OWNER.SRCH_CHARACTERISTIC_VALUE) OWNER
,(WC_MAIN_EXCEPTION_CODE.SRCH_CHARACTERISTIC_VALUE) MAIN_EXCEPTION_CODE
,(WC_REQUEST_DATE.SRCH_CHARACTERISTIC_VALUE) REQUEST_DATE
,(WC_STATUS_CODE.SRCH_CHARACTERISTIC_VALUE) STATUS_CODE
,(WC_STATUS_DATE.SRCH_CHARACTERISTIC_VALUE) STATUS_DATE
,WC_CCB_CASE_S.ACCOUNT_ID
,WC_CCB_CASE_S.PREMISE_ID
,(SELECT DESCRIPTION FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'OWNER' AND CHARACTERISTIC_VALUE = WC_OWNER.SRCH_CHARACTERISTIC_VALUE) OWNER_DESCR
,(SELECT DESCRIPTION FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MEXCD' AND CHARACTERISTIC_VALUE = WC_MAIN_EXCEPTION_CODE.SRCH_CHARACTERISTIC_VALUE) MAIN_EXCEPTION_DESCR
,(SELECT DESCRIPTION FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MEXST' AND CHARACTERISTIC_VALUE = WC_STATUS_CODE.SRCH_CHARACTERISTIC_VALUE) STATUS_DESCR,
WC_CCB_CASE_S.CASE_TYPE_CODE CASE_TYPE_CID,		--20141006 BN - FOR ACI STATUS
WC_CCB_CASE_S.CASE_TYPE_CODE || '::' || WC_CCB_CASE_S.CASE_STATUS_CODE CASE_STATUS_CID,
WC_CCB_CASE_TR_RULE_S.NEXT_STATUS_CODE,
WC_CCB_CASE_S.CASE_TYPE_CODE || '::' || WC_CCB_CASE_TR_RULE_S.NEXT_STATUS_CODE NEXT_CASE_STATUS_CID,
CASE_LOG_CREATION.LOG_DTTM CASE_CREATION_DATE,
	CASE WHEN TRIM(WC_CCB_CASE_S.CASE_STATUS_CODE)='INITIATE' THEN CASE_LOG_CREATION.LOG_DTTM 
		 WHEN  TRIM(WC_CCB_CASE_S.CASE_STATUS_CODE)='CLOSE' THEN CASE_LOG_CLOSE.LOG_DTTM 
		 ELSE CASE_LOG_CURRENT.LOG_DTTM 
	END CURRENT_STATUS_DATE,
CASE_LOG_SEND_LTR1.LOG_DTTM SEND_LETTER_1_DATE,
CASE_LOG_SEND_LTR2.LOG_DTTM SEND_LETTER_2_DATE,
CASE_LOG_SEND_96HR_LTR.LOG_DTTM SEND_96HOUR_LETTER_DATE,
CASE_LOG_CLOSE.LOG_DTTM CLOSED_DATE,
WC_CASE_CHAR_SP.CHARACTERISTIC_VALUE_FK1 SP_ID,
WC_CASE_CHAR_SP.CHARACTERISTIC_VALUE_FK1 SP_CID,
CASE_LOG_CREATION.USER_ID CASE_LOG_CREATION_USER --20150114 BN - FOR CM LOCK CASES REPORT.
FROM
 WC_CCB_CASE_S
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE = 'BADGENBR')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'BADGENBR') WC_BADGE_NUMBER
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE = 'OWNER')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OWNER') WC_OWNER
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE = 'MEXCD')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE   = 'MEXCD') WC_MAIN_EXCEPTION_CODE
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE = 'MEXRQDT')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE   = 'MEXRQDT') WC_REQUEST_DATE
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE = 'MEXST')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE   = 'MEXST') WC_STATUS_CODE
,(SELECT *
  FROM WC_CCB_CASE_CHAR_S
  WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
            (SELECT MAX (TMP.SEQUENCE_NUMBER)
             FROM WC_CCB_CASE_CHAR_S TMP
             WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
             AND       TMP.CHARACTERISTIC_TYPE_CODE =  'MEXSTDT')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE   =  'MEXSTDT') WC_STATUS_DATE
  
--20141006 BN - NEW FOR ACI STATUS BELOW
  ,WC_CCB_CASE_TR_RULE_S
  ,(SELECT *
      FROM WC_CCB_CASE_CHAR_S
      WHERE     WC_CCB_CASE_CHAR_S.SEQUENCE_NUMBER =
                (SELECT MAX (TMP.SEQUENCE_NUMBER)
                 FROM WC_CCB_CASE_CHAR_S TMP
                 WHERE     TMP.CASE_ID = WC_CCB_CASE_CHAR_S.CASE_ID
                 AND       TMP.CHARACTERISTIC_TYPE_CODE = 'C1-SP')
  AND WC_CCB_CASE_CHAR_S.CHARACTERISTIC_TYPE_CODE   = 'C1-SP') WC_CASE_CHAR_SP
  ,(SELECT * FROM WC_CCB_CASE_LOG_S WHERE CASE_LOG_TYPE_FLAG='CASC'
    AND SEQUENCE_NUMBER         IN
          (SELECT MAX(SEQUENCE_NUMBER)
          FROM WC_CCB_CASE_LOG_S TEMP
          WHERE TEMP.CASE_ID     =WC_CCB_CASE_LOG_S.CASE_ID        
          AND TEMP.CASE_LOG_TYPE_FLAG=WC_CCB_CASE_LOG_S.CASE_LOG_TYPE_FLAG
      )
    ) CASE_LOG_CREATION
  ,  (SELECT *
    FROM WC_CCB_CASE_LOG_S
    WHERE CASE_STATUS_CODE = 'CLOSE'
    AND CASE_LOG_TYPE_FLAG='STAT'
    AND SEQUENCE_NUMBER         IN
        (SELECT MAX(SEQUENCE_NUMBER)
        FROM WC_CCB_CASE_LOG_S TEMP
        WHERE TEMP.CASE_ID     =WC_CCB_CASE_LOG_S.CASE_ID
        AND TEMP.CASE_STATUS_CODE=WC_CCB_CASE_LOG_S.CASE_STATUS_CODE
        AND TEMP.CASE_LOG_TYPE_FLAG=WC_CCB_CASE_LOG_S.CASE_LOG_TYPE_FLAG
      )
    ) CASE_LOG_CLOSE
  ,     ( SELECT *
    FROM WC_CCB_CASE_LOG_S
    WHERE CASE_STATUS_CODE = 'LETTER 1'
    AND CHAR_TYPE_CODE     ='CM-CC'
    AND SEQUENCE_NUMBER         IN
      (SELECT MAX(SEQUENCE_NUMBER)
      FROM WC_CCB_CASE_LOG_S TEMP
      WHERE TEMP.CASE_ID     =WC_CCB_CASE_LOG_S.CASE_ID
     AND TEMP.CASE_STATUS_CODE=WC_CCB_CASE_LOG_S.CASE_STATUS_CODE
      AND TEMP.CHAR_TYPE_CODE  ='CM-CC'
      )
    ) CASE_LOG_SEND_LTR1--CM-CC: CUSTOMER CONTACT DEFINED ON CASE LOG
  ,  (SELECT *
    FROM WC_CCB_CASE_LOG_S
    WHERE CASE_STATUS_CODE = 'CUTOFFLETTER'
    AND CHAR_TYPE_CODE     ='CM-CC'
    AND SEQUENCE_NUMBER         IN
      (SELECT MAX(SEQUENCE_NUMBER)
      FROM WC_CCB_CASE_LOG_S TEMP
      WHERE TEMP.CASE_ID     =WC_CCB_CASE_LOG_S.CASE_ID
      AND TEMP.CASE_STATUS_CODE=WC_CCB_CASE_LOG_S.CASE_STATUS_CODE
      AND TEMP.CHAR_TYPE_CODE  ='CM-CC'
      )
    ) CASE_LOG_SEND_LTR2
  ,  (SELECT *
    FROM WC_CCB_CASE_LOG_S
    WHERE CASE_STATUS_CODE = '96 HOUR NTC'
    AND CHAR_TYPE_CODE     ='CM-CC'
    AND SEQUENCE_NUMBER         IN
      (SELECT MAX(SEQUENCE_NUMBER)
      FROM WC_CCB_CASE_LOG_S TEMP
      WHERE TEMP.CASE_ID     =WC_CCB_CASE_LOG_S.CASE_ID
      AND TEMP.CASE_STATUS_CODE=WC_CCB_CASE_LOG_S.CASE_STATUS_CODE
      AND TEMP.CHAR_TYPE_CODE  ='CM-CC'
      )
  ) CASE_LOG_SEND_96HR_LTR
  ,(SELECT CASE_ID,CASE_STATUS_CODE,MAX(LOG_DTTM) AS LOG_DTTM
      FROM WC_CCB_CASE_LOG_S
      WHERE (CASE_LOG_TYPE_FLAG <>'CASC' AND CASE_STATUS_CODE <> 'CLOSE' )--if case is in initiate or close status, we will get dates from newly added CREATE_DATE and CLOSED_DATE    
        GROUP BY CASE_ID,CASE_STATUS_CODE
    ) CASE_LOG_CURRENT
WHERE 1=1
AND WC_CCB_CASE_S.CASE_ID = WC_BADGE_NUMBER.CASE_ID(+)
AND WC_CCB_CASE_S.CASE_ID = WC_OWNER.CASE_ID(+)
AND WC_CCB_CASE_S.CASE_ID = WC_MAIN_EXCEPTION_CODE.CASE_ID(+)
AND WC_CCB_CASE_S.CASE_ID = WC_REQUEST_DATE.CASE_ID(+)
AND WC_CCB_CASE_S.CASE_ID = WC_STATUS_CODE.CASE_ID(+)
AND WC_CCB_CASE_S.CASE_ID = WC_STATUS_DATE.CASE_ID(+)

--20141006 BN - NEW FOR ACI STATUS BELOW
AND WC_CCB_CASE_S.CASE_TYPE_CODE = WC_CCB_CASE_TR_RULE_S.CASE_TYPE_CODE (+) 
AND WC_CCB_CASE_S.CASE_STATUS_CODE = WC_CCB_CASE_TR_RULE_S.CASE_STATUS_CODE (+) 
AND WC_CCB_CASE_TR_RULE_S.DEFAULT_SW(+) ='Y' 
AND WC_CCB_CASE_S.CASE_ID = WC_CASE_CHAR_SP.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_CREATION.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_CLOSE.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_SEND_LTR1.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_SEND_LTR2.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_SEND_96HR_LTR.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_ID = CASE_LOG_CURRENT.CASE_ID (+) 
AND WC_CCB_CASE_S.CASE_STATUS_CODE = CASE_LOG_CURRENT.CASE_STATUS_CODE (+)
;


--20130924 BN - FOR LARGE VOLUME USAGE REPORT FOR FINANCE DEPARTMENT
CREATE OR REPLACE  VIEW WC_CCB_LARGE_VOLUME_BILLS_FS_V as select * from wc_ccb_large_volume_bills_s;


--20131001 bn - For Finances Monthly Deposit report
--20150707 bn - tuning this for odi loads; added tmp tables to use in sfs_v
create or replace view wc_ccb_deposit_interest_sfs_v as
  SELECT sa_id || '::' || TO_CHAR (arrears_date, 'MM/DD/YYYY')
             integration_id,
          3000 datasource_num_id,
          SYSDATE w_insert_dt,
          SYSDATE w_update_dt,
          0 w_load_number,
          account_id,
          sa_id,
          TRUNC (arrears_date) arrears_date,
          TRUNC (next_arrears_date) next_arrears_date,
          amount,
          interest_rate,
          TRUNC (DEPOSIT_INTEREST_CALC_DATE) DEPOSIT_INTEREST_CALC_DATE,
          (CASE
              WHEN TRUNC (ARREARS_DATE) > TRUNC (DEPOSIT_INTEREST_CALC_DATE)
              THEN
                   TRUNC (NVL (NEXT_ARREARS_DATE, SYSDATE))
                 - TRUNC (ARREARS_DATE)
                 + 1
              WHEN TRUNC (DEPOSIT_INTEREST_CALC_DATE) BETWEEN TRUNC (
                                                                 ARREARS_DATE)
                                                          AND TRUNC (
                                                                 NVL (
                                                                    NEXT_ARREARS_DATE,
                                                                    TO_DATE (
                                                                       '12/31/2199',
                                                                       'mm/dd/yyyy')))
              THEN
                   TRUNC (NVL (NEXT_ARREARS_DATE, SYSDATE))
                 - TRUNC (DEPOSIT_INTEREST_CALC_DATE)
                 + 1
              ELSE
                 NULL
           END)
             COUNT_OF_DAYS,
          (  INTEREST_RATE
           / 100
           / (CASE
                 WHEN MOD (TO_CHAR (SYSDATE, 'YYYY'), 4) = 1 THEN 365
                 ELSE 366
              END))
             INTEREST_RATE_PER_DAY,
            (CASE
                WHEN TRUNC (ARREARS_DATE) >
                        TRUNC (DEPOSIT_INTEREST_CALC_DATE)
                THEN
                     TRUNC (NVL (NEXT_ARREARS_DATE, SYSDATE))
                   - TRUNC (ARREARS_DATE)
                   + 1
                WHEN TRUNC (DEPOSIT_INTEREST_CALC_DATE) BETWEEN TRUNC (
                                                                   ARREARS_DATE)
                                                            AND TRUNC (
                                                                   NVL (
                                                                      NEXT_ARREARS_DATE,
                                                                      TO_DATE (
                                                                         '12/31/2199',
                                                                         'mm/dd/yyyy')))
                THEN
                     TRUNC (NVL (NEXT_ARREARS_DATE, SYSDATE))
                   - TRUNC (DEPOSIT_INTEREST_CALC_DATE)
                   + 1
                ELSE
                   NULL
             END)
          * (  INTEREST_RATE
             / 100
             / (CASE
                   WHEN MOD (TO_CHAR (arrears_date, 'YYYY'), 4) = 1 THEN 365
                   ELSE 366
                END))                               --to check for a leap year
          * amount
             INTEREST_EARNED_AMOUNT
     FROM (                                              --example from nicole
                select amount,
                       arrears_date,
                       next_arrears_date,
                       interest_rate,
                       sa_id,
                       deposit_interest_calc_date,
                       account_id
                from wc_ccb_deposit_int_union1_tmp
        /*   SELECT DISTINCT
                  (SELECT SUM (NVL (tmp.payoff_amount, 0))
                     FROM wc_ccb_ft_s tmp
                    WHERE     tmp.sa_id = wc_ccb_ft_s.sa_id
                          AND tmp.arrears_date <= wc_ccb_ft_s.arrears_date)
                     amount,
                  --wc_ccb_ft_s.payoff_amount,
                  TRUNC (wc_ccb_ft_s.arrears_date) arrears_date,
                  TRUNC (ft2.arrears_date) next_arrears_date,
                  bf.interest_rate,
                  wc_ccb_ft_s.sa_id,
                  TRUNC (DEPOSIT_INTEREST_CALC_DATE)
                     DEPOSIT_INTEREST_CALC_DATE,
                  account_id
             FROM wc_ccb_ft_s,
                  wc_Ccb_ft_s ft2,
                  (SELECT ACCOUNT_ID,
                          SA_ID,
                            (CASE
                                WHEN TRUNC (SYSDATE) > TO_DATE THEN TO_DATE
                                ELSE TRUNC (SYSDATE)
                             END)
                          + 1
                          - (CASE
                                WHEN DEPOSIT_INTEREST_CALC_DATE > from_date
                                THEN
                                   deposit_interest_calc_date
                                ELSE
                                   from_date
                             END)
                             Total_Number_of_Days,
                          DEPOSIT_INTEREST_CALC_DATE,
                          FROM_DATE,
                          TO_DATE,
                          INTEREST_RATE,
                          wc_ccb_sa_s.sa_status_flag
                     FROM wc_ccb_sa_s,
                          (SELECT --The first select gives us the effective date ranges for each interest rate
                                 BF1.EFFECTIVE_DATE FROM_DATE,
                                  BF1.VAL INTEREST_RATE,
                                  BF2.EFFECTIVE_DATE - 1 TO_DATE
                             FROM wc_ccb_bf_val_s BF1, WC_CCB_BF_VAL_S BF2
                            WHERE     BF1.BILL_FACTOR_CODE = 'DEPINT'
                                  AND BF2.BILL_FACTOR_CODE(+) = 'DEPINT'
                                  AND BF2.EFFECTIVE_DATE =
                                         (SELECT MIN (TMP.EFFECTIVE_DATE)
                                            FROM WC_CCB_BF_VAL_S TMP
                                           WHERE     BF1.EFFECTIVE_DATE <
                                                        TMP.EFFECTIVE_DATE
                                                 AND TMP.BILL_FACTOR_CODE =
                                                        'DEPINT')
                           UNION
                           SELECT --This select gives us the most recent interest rate (value will not show up in the first select.
                                 BF1.EFFECTIVE_DATE,
                                  BF1.VAL,
                                  TO_DATE ('1/1/2199', 'MM/DD/YYYY')
                             FROM wc_ccb_bf_val_s BF1
                            WHERE     BF1.BILL_FACTOR_CODE = 'DEPINT'
                                  AND BF1.EFFECTIVE_DATE =
                                         (SELECT MAX (EFFECTIVE_DATE)
                                            FROM WC_CCB_BF_VAL_S
                                           WHERE BILL_fACTOR_CODE = 'DEPINT')) BF
                    WHERE     sa_type_code = 'GDEP'                  --Deposit
                          AND DEPOSIT_INTEREST_CALC_DATE < bf.TO_DATE --  and sa_id = '5885011758'
                                                                     ) bf
            --and sa_id = '2563240599'
            WHERE                 --wc_ccb_ft_s.sa_id = '5885011758'  --closed
                 wc_ccb_ft_s.sa_id = ft2.sa_id(+)
                  AND ft2.arrears_date =
                         (SELECT MIN (tmp.arrears_date)
                            FROM wc_ccb_ft_s tmp
                           WHERE     tmp.sa_id = wc_Ccb_ft_s.sa_id
                                 AND tmp.arrears_date >
                                        wc_ccb_ft_s.arrears_date
                                 AND tmp.ft_type_flag <> 'BS')
                  --and wc_ccb_ft_s.sa_id = '8752480811'  --still earning interest
                  AND bf.sa_id = wc_ccb_ft_s.sa_id
                  AND wc_ccb_ft_s.ft_type_Flag <> 'BS'
                  AND ft2.ft_type_flag <> 'BS'
                  AND bf.sa_status_flag IN ('10', '20', '30', '50')*/
           UNION                                              --2ND UNION HERE
                select amount,
                       arrears_date,
                       next_arrears_date,
                       interest_rate,
                       sa_id,
                       deposit_interest_calc_date,
                       account_id
                from wc_ccb_deposit_int_union2_tmp
           /*SELECT DISTINCT
                  (SELECT SUM (NVL (tmp.payoff_amount, 0))
                     FROM wc_ccb_ft_s tmp
                    WHERE     tmp.sa_id = wc_ccb_ft_s.sa_id
                          AND tmp.arrears_date <= wc_ccb_ft_s.arrears_date)
                     amount,
                  --wc_ccb_ft_s.payoff_amount,
                  TRUNC (wc_ccb_ft_s.arrears_date) ARREARS_DATE,
                  NULL next_arrears_date,
                  bf.interest_rate,
                  wc_ccb_ft_s.sa_id,
                  TRUNC (DEPOSIT_INTEREST_CALC_DATE)
                     DEPOSIT_INTEREST_CALC_DATE,
                  account_id
             FROM wc_ccb_ft_s,
                  (/*
                        SELECT ACCOUNT_ID,
                          SA_ID,
                            (CASE
                                WHEN TRUNC (SYSDATE) > TO_DATE THEN TO_DATE
                                ELSE TRUNC (SYSDATE)
                             END)
                          + 1
                          - (CASE
                                WHEN DEPOSIT_INTEREST_CALC_DATE > from_date
                                THEN
                                   deposit_interest_calc_date
                                ELSE
                                   from_date
                             END)
                             Total_Number_of_Days,
                          DEPOSIT_INTEREST_CALC_DATE,
                          FROM_DATE,
                          TO_DATE,
                          INTEREST_RATE,
                          wc_ccb_sa_s.sa_status_flag
                     FROM wc_ccb_sa_s,
                          (SELECT --The first select gives us the effective date ranges for each interest rate
                                 BF1.EFFECTIVE_DATE FROM_DATE,
                                  BF1.VAL INTEREST_RATE,
                                  BF2.EFFECTIVE_DATE - 1 TO_DATE
                             FROM wc_ccb_bf_val_s BF1, WC_CCB_BF_VAL_S BF2
                            WHERE     BF1.BILL_FACTOR_CODE = 'DEPINT'
                                  AND BF2.BILL_FACTOR_CODE(+) = 'DEPINT'
                                  AND BF2.EFFECTIVE_DATE =
                                         (SELECT MIN (TMP.EFFECTIVE_DATE)
                                            FROM WC_CCB_BF_VAL_S TMP
                                           WHERE     BF1.EFFECTIVE_DATE <
                                                        TMP.EFFECTIVE_DATE
                                                 AND TMP.BILL_FACTOR_CODE =
                                                        'DEPINT')
                           UNION */ /* The 2nd union gets the most recent FT for the SA */
                    /*       SELECT --This select gives us the most recent interest rate (value will not show up in the first select.
                                 BF1.EFFECTIVE_DATE,
                                  BF1.VAL,
                                  TO_DATE ('1/1/2199', 'MM/DD/YYYY')
                             FROM wc_ccb_bf_val_s BF1
                            WHERE     BF1.BILL_FACTOR_CODE = 'DEPINT'
                                  AND BF1.EFFECTIVE_DATE =
                                         (SELECT MAX (EFFECTIVE_DATE)
                                            FROM WC_CCB_BF_VAL_S
                                           WHERE BILL_fACTOR_CODE = 'DEPINT')) BF
                    WHERE     sa_type_code = 'GDEP'                  --Deposit
                          AND DEPOSIT_INTEREST_CALC_DATE < bf.TO_DATE --  and sa_id = '5885011758'
                                                                    */
           /*           wc_ccb_deposit_interest_bf_tmp --20150707 bn - new temp table for tuning 
                      ) bf
            --and sa_id = '2563240599'
            WHERE                 --wc_ccb_ft_s.sa_id = '5885011758'  --closed
                 1     = 1
                  --and wc_ccb_ft_s.sa_id = '8752480811'  --still earning interest
                  AND bf.sa_id = wc_ccb_ft_s.sa_id
                  AND wc_ccb_ft_s.ft_type_Flag <> 'BS'
                  AND bf.sa_status_flag IN ('10', '20', '30', '50')
                  AND wc_ccb_ft_s.arrears_date =
                         (SELECT MAX (tmp.arrears_date)
                            FROM wc_ccb_ft_s tmp
                           WHERE     tmp.sa_id = wc_ccb_ft_s.sa_id
                                 AND tmp.ft_type_flag <> 'BS')*/
                                 
              )
--   WHERE                                        --     sa_id = '8752480811'
--sa_id = '4563954720'
-- sa_id = '4935020670'
-- SA_ID = '2958330596'ORDER BY ARREARS_DATE;
-- SA_ID = '7878180678' ORDER BY ARREARS_DATE;
--  SA_ID = '8941560912' ORDER BY ARREARS_DATE;
--      SA_ID = '9142620541' ORDER BY ARREARS_DATE;
--    SA_ID = '4436720006'
;








--20131002 bn - THIS IS A CUSTOM VIEW that only sources LEAK FAs and the specific data that is needed
-- for the inside outside leak review late arrival report
--  The grain of this table is FA
--20150113 bn - For MGE WS3 - Adding CIS Division

CREATE OR REPLACE VIEW MDW.WC_CCB_FA_LEAKS_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   FA_ID,
   LOCATION_OF_LEAK_CHAR_VAL,
   LOCATION_OF_LEAK,
   ODOR_CHAR_VAL,
   ODOR,
   ADDRESS1,
   DATE_TAKEN,
   TIME_TAKEN,
   DATE_DISPATCHED,
   TIME_DISPATCHED,
   DATE_COMPLETED,
   DISPATCH_TIME,
   DATE_TECH_ARRIVED,
   TIME_TECH_ARRIVED,
   RESPONSE_TIME,
   OFFICE_LOCATION,
   TECHNICIAN_NAME,
   COUNT_OF_LEAKS,
   cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
)
AS
   SELECT wc_ccb_fa_s.integration_id,
          wc_ccb_fa_s.datasource_num_id,
          wc_ccb_fa_s.w_insert_dt,
          wc_ccb_fa_s.w_update_dt,
          wc_ccb_fa_s.w_load_number,
          wc_ccb_fa_s.integration_id fa_id,
          --ci_fa.date_completed,
          loc.characteristic_value location_of_leak_char_val,
          LOC.description LOCATION_OF_LEAK,
          odor_class.CHARACTERISTIC_VALUE odor_char_val,
          odor_class.DESCRIPTION odor,
          WC_CCB_PREM_S.address1,
          taken.log_dttm date_taken,                --date the order was taken
          TO_CHAR (taken.log_dttm, 'HH24:MI:SS') time_taken,
          dispatched.log_dttm date_dispatched, --date the order was dispatched  (Getting the earliest time which should be the Assignment)
          TO_CHAR (dispatched.log_dttm, 'HH24:MI:SS') time_dispatched,
          completed.log_dttm date_completed,    --date the order was completed
          (dispatched.log_dttm - taken.log_dttm) * 24 * 60 / 100 * 60
             dispatch_time,                 --dispatched - taken  (in minutes)
          arrival.log_dttm date_tech_arrived,
          TO_CHAR (arrival.log_dttm, 'HH24:MI:SS') time_tech_arrived,
          (arrival.log_dttm - taken.log_dttm) * 24 * 60 / 100 * 60
             response_time,                     --arrived - taken (in minutes)
          office_location.DESCRIPTION office_location,
          arrival.tech_name technician_name,
          1 count_of_leaks,
		   wc_ccb_prem_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
     FROM WC_CCB_FA_S,
          WC_CCB_SP_S,
          WC_CCB_PREM_S,
          (SELECT fa_id,
                  min(log_dttm) log_dttm,
                  TRIM (
                     SUBSTR (
                        DETAILS,
                        INSTR (DETAILS, '; Employee Name: ') + 17,
                          INSTR (DETAILS, '; ScheduledDate From: ')
                        - INSTR (DETAILS, '; Employee Name: ')
                        - 17))
                     tech_name
            FROM wc_ccb_fa_log_s
            WHERE     LOG_TYPE = 'G4IS'
                  AND SUBSTR (DETAILS,
                              INSTR (DETAILS, '; Event is : ') + 11,
                              6) = 'ARRIVE'
                   and log_dttm = (select min(t.log_dttm) from wc_ccb_fa_log_s t where t.LOG_TYPE = 'G4IS'
                                                                  AND SUBSTR (t.DETAILS,
                                                                              INSTR (t.DETAILS, '; Event is : ') + 11,
                                                                              6) = 'ARRIVE'
                                                                   and t.fa_id = wc_ccb_fa_log_s.fa_id)
            group by fa_id,TRIM (
                     SUBSTR (
                        DETAILS,
                        INSTR (DETAILS, '; Employee Name: ') + 17,
                          INSTR (DETAILS, '; ScheduledDate From: ')
                        - INSTR (DETAILS, '; Employee Name: ')
                        - 17)) ) arrival,
          (SELECT fa_id, min(log_dttm) log_dttm
             FROM wc_ccb_fa_log_s
            WHERE LOG_TYPE = 'OCRP'
            group by fa_id) taken,
          (  SELECT fa_id, MIN (log_dttm) log_dttm
               FROM wc_ccb_fa_log_s
              WHERE LOG_TYPE = 'FAIS'
           GROUP BY fa_id) dispatched,
          (SELECT fa_id, log_dttm
             FROM wc_ccb_fa_log_s
            WHERE LOG_TYPE = 'EXCM') completed,
          (SELECT tmp.fa_id, tmp.CHARACTERISTIC_VALUE, tmp2.DESCRIPTION
             FROM wc_ccb_fa_char_s TMP, WC_CCB_CHAR_VAL_L_S TMP2
            WHERE     1 = 1
                  AND TMP.characteristic_type_code =
                         TMP2.characteristic_type_code
                  AND TMP.CHARACTERISTIC_VALUE = TMP2.CHARACTERISTIC_VALUE
                  AND TMP.characteristic_type_code = 'APPLOC'
                  --AND TMP.CHAR_VAL     IN ('I', 'O')
                  AND sequence_number =
                         (SELECT MIN (sequence_number)
                            FROM wc_ccb_fa_char_s t1
                           WHERE     t1.characteristic_type_code = 'APPLOC'
                                 AND t1.fa_id = tmp.fa_id)) LOC, --location of leak
          (SELECT *
             FROM wc_ccb_prem_char_s, wc_ccb_char_val_l_s
            WHERE     wc_ccb_prem_char_s.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM wc_ccb_prem_char_s TMP
                           WHERE     TMP.premise_id =
                                        wc_ccb_prem_char_s.premise_id
                                 AND TMP.characteristic_type_code = 'OFCLOC')
                  AND wc_ccb_prem_char_s.characteristic_type_code = 'OFCLOC'
                  AND wc_ccb_prem_char_s.characteristic_type_code =
                         wc_ccb_char_val_l_s.characteristic_type_code
                  AND wc_ccb_prem_char_s.CHARACTERISTIC_VALUE =
                         wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE) office_location,
          (SELECT tmp.fa_id, tmp.CHARACTERISTIC_VALUE, tmp2.description
             FROM wc_ccb_fa_char_s TMP, WC_CCB_CHAR_VAL_L_S TMP2
            WHERE     1 = 1
                  AND TMP.characteristic_type_code =
                         TMP2.characteristic_type_code
                  AND TMP.CHARACTERISTIC_VALUE = TMP2.CHARACTERISTIC_VALUE
                  AND TMP.characteristic_type_code = 'LEAKTO'
                  AND sequence_number =
                         (SELECT MIN (sequence_number)
                            FROM wc_ccb_fa_char_s t1
                           WHERE     t1.characteristic_type_code = 'LEAKTO'
                                 AND t1.fa_id = tmp.fa_id)) odor_class
    WHERE     1 = 1
          --and ci_fa.fa_id = ci_fa_log.fa_id
          AND WC_CCB_FA_S.INTEGRATION_ID = loc.fa_id(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = odor_class.fa_id(+)
          AND WC_CCB_FA_S.SERVICE_POINT_ID = WC_CCB_SP_S.INTEGRATION_ID
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID
          AND WC_CCB_PREM_S.INTEGRATION_ID = office_location.PREMISE_ID
          AND WC_CCB_FA_S.INTEGRATION_ID = arrival.fa_id(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = taken.fa_id(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = dispatched.fa_id(+)
          AND WC_CCB_FA_S.INTEGRATION_ID = completed.fa_id(+)
          AND WC_CCB_FA_S.ACTIVITY_TYPE_CODE = 'SP-LEAK'
          AND WC_CCB_FA_S.user_id <> 'CONV'
          and wc_ccb_fa_s.fa_cancel_reason_code is null
         -- AND WC_CCB_FA_S.INTEGRATION_ID = '1396460339'
          ;



--20131002 BN - FOR THE AM/PM REPORT FOR ORDER CONTROL
-- 	This is a very customized view/table that is only for this report.
--  This could have been better designed but the report was needed right away.

--20131018 BN - Adding UNION ALL to be able to bring in if a record is calculated in OVERALL or not.
--20131025 BN - Adding logic to consider when a job is scheduled for the completed flags
--20131113 bn - Mike S. has asked that a lot of FA types be excluded.  Hardcoding all these.
--20131114 bn - 2 more FA Types to exclude; also changed the times for AM from 00:00 to 12:00 TO 00:00 to 11:59 and PM TO 12:00 to 17:00
CREATE OR REPLACE VIEW MDW.WC_CCB_FA_AM_PM_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   FA_ID,
   SCHEDULED_PERIOD,
   LOG_CREATED_PERIOD,
   JOB_COMPLETED_PERIOD,
   ORDER_CREATION_DATE,
   ORDER_CREATION_DATE_TRUNC,
   JOB_COMPLETED_DATE,
   JOB_COMPLETED_DATE_TRUNC,
   SCHEDULED_DATE,
   SCHEDULED_DATE_TRUNC,
   OFFICE_LOCATION,
   SCHED_TYPE,
   ORDERED_TYPE,
   COMPLETED_TYPE,
   SCHED_AM,
   SCHED_PM,
   SCHED_AFTER_PM,
   ORDERED_AM,
   ORDERED_PM,
   ORDERED_AFTER_PM,
   COMP_AM,
   COMP_PM,
   COMP_AFTER_PM
)
AS
   SELECT wc_ccb_fa_s.integration_id|| '::AMPM',
          wc_ccb_fa_s.datasource_num_id,
          wc_ccb_fa_s.w_insert_dt,
          wc_ccb_fa_s.w_update_dt,
          wc_ccb_fa_s.w_load_number,
          wc_ccb_fa_s.fa_id,
          TO_CHAR (wc_ccb_fa_s.schedule_date, 'MON-YY') scheduled_period,
          TO_CHAR (created.log_dttm, 'MON-YY') log_created_period,
          TO_CHAR (completed.log_dttm, 'MON-YY') job_completed_period,
          created.log_dttm order_creation_date,
          TRUNC(created.log_dttm),
          completed.log_dttm job_completed_date,
          TRUNC (completed.log_dttm) job_completed_date_trunc,
          wc_ccb_fa_s.schedule_date scheduled_date,
          TRUNC(wc_ccb_fa_s.schedule_date),
          office_location.description office_location,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'
                                                                      AND '11:59'
              THEN
                 'AM'
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:00'
                                                                      AND '16:59'
              THEN
                 'PM'
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:00'
                                                                      AND '23:59'
              THEN
                 'AFTER-HOURS'
              ELSE
                 NULL
           END)
             SCHED_TYPE,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                             AND '11:59'
              THEN
                 'AM'
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '12:00'
                                                             AND '16:59'
              THEN
                 'PM'
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '17:00'
                                                             AND '23:59'
              THEN
                 'AFTER-HOURS'
              ELSE
                 NULL
           END)
             ORDERED_TYPE,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                               AND '11:59'
              THEN
                 'AM'
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '12:00'
                                                               AND '16:59'
              THEN
                 'PM'
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '17:00'
                                                               AND '23:59'
              THEN
                 'AFTER-HOURS'
              ELSE
                 NULL
           END)
             COMPLETED_TYPE,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'
                                                                      AND '11:59'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_AM,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:00'
                                                                      AND '16:59'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_PM,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:00'
                                                                      AND '23:59'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_AFTER_PM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                             AND '11:59'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_AM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '12:00'
                                                             AND '16:59'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_PM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '17:00'
                                                             AND '23:59'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_AFTER_PM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                               AND '11:59'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '11:59'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_AM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '12:00'
                                                               AND '16:59'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:00'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '16:59'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_PM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '17:00'
                                                               AND '23:59'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:00'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '23:59'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_AFTER_PM
     FROM wc_ccb_fa_s,
          WC_CCB_SP_S,
          WC_CCB_PREM_S,
          (  SELECT fa_id, MIN (log_dttm) log_dttm
               FROM wc_ccb_fa_log_s
              WHERE log_type = 'OCRP'
           GROUP BY fa_id) created,         --When the order was taken/created
          (SELECT fa_id, log_dttm
             FROM wc_ccb_fa_log_s
            WHERE log_type = 'EXCM') completed,   --When the job was completed
          (SELECT *
             FROM wc_ccb_prem_char_s, wc_ccb_char_val_l_s
            WHERE     wc_ccb_prem_char_s.effective_date =
                         (SELECT MAX (TMP.effective_date)
                            FROM wc_ccb_prem_char_s TMP
                           WHERE     TMP.premise_id =
                                        wc_ccb_prem_char_s.premise_id
                                 AND TMP.characteristic_type_code = 'OFCLOC')
                  AND wc_ccb_prem_char_s.characteristic_type_code = 'OFCLOC'
                  AND wc_ccb_prem_char_s.characteristic_type_code =
                         wc_ccb_char_val_l_s.characteristic_type_code
                  AND wc_ccb_prem_char_s.characteristic_value =
                         wc_ccb_char_val_l_s.characteristic_value) office_location
    WHERE     1 = 1
          AND wc_ccb_fa_s.fa_id = created.fa_id(+)
          AND wc_ccb_fa_s.fa_id = completed.fa_id(+)
          AND WC_CCB_FA_S.SERVICE_POINT_ID = WC_CCB_SP_S.INTEGRATION_ID(+)
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID(+)
          AND WC_CCB_PREM_S.INTEGRATION_ID = office_location.PREMISE_ID(+)
          AND wc_ccb_fa_s.user_id <> 'CONV'
          AND TRIM (wc_ccb_fa_s.fa_cancel_reason_code) IS NULL
          AND created.log_dttm IS NOT NULL
		  and wc_ccb_fa_s.activity_type_code not in (
		  'CB-CLEAR',
			'M-DAILY',
			'M-DISNP',
			'SP-DISSP',
			'SP-HAZRD',
			'M-DIV',
			'LG-AMRI',
			'LG-AMRIA',
			'LG-AMRRD',
			'LG-AMRRP',
			'A-LMSC',
			'A-LMSCD',
			'M-REDCM',
			'A-AMRINS',
			'A-AMREP',
			'A-AMRLMT',
			'S-INS',
			'S-RECO',
			'S-REL',
			'S-INSS',
			'S-SOCG',
			'M-READ',
			'A-MSLU',
			'AP-LEAKN',
			'SP-PCI',
			'M-REREAD',
			'M-SVRAUD',
			'M-STRSTP',
			'SP-BID',  --20131114BN
			'SP-LEAK'
			)
--   and created.log_dttm > sysdate - 60
/*
UNION ALL
  --20131018 BN - Adding to have OVERALL data in the table
   SELECT wc_ccb_fa_s.integration_id || '::OVERALL',
          wc_ccb_fa_s.datasource_num_id,
          wc_ccb_fa_s.w_insert_dt,
          wc_ccb_fa_s.w_update_dt,
          wc_ccb_fa_s.w_load_number,
          wc_ccb_fa_s.fa_id,
          TO_CHAR (wc_ccb_fa_s.schedule_date, 'MON-YY') scheduled_period,
          TO_CHAR (created.log_dttm, 'MON-YY') log_created_period,
          TO_CHAR (completed.log_dttm, 'MON-YY') job_completed_period,
          created.log_dttm order_creation_date,
          TRUNC(created.log_dttm),
          completed.log_dttm job_completed_date,
          TRUNC (completed.log_dttm) job_completed_date_trunc,
          wc_ccb_fa_s.schedule_date scheduled_date,
          TRUNC(wc_ccb_fa_s.schedule_date),
          office_location.description office_location,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'
                                                                      AND '12:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:01'
                                                                      AND '17:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:01'
                                                                      AND '23:59'
              THEN
                 'OVRL-AFTER'
              ELSE
                 NULL
           END)
             SCHED_TYPE,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                             AND '12:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '12:01'
                                                             AND '17:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '17:01'
                                                             AND '23:59'
              THEN
                 'OVRL-AFTER'
              ELSE
                 NULL
           END)
             ORDERED_TYPE,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                               AND '12:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '12:01'
                                                               AND '17:00'
              THEN
                 'OVERALL'
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '17:01'
                                                               AND '23:59'
              THEN
                 'OVRL-AFTER'
              ELSE
                 NULL
           END)
             COMPLETED_TYPE,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'
                                                                      AND '12:00'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_AM,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:01'
                                                                      AND '17:00'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_PM,
          (CASE
              WHEN TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:01'
                                                                      AND '23:59'
              THEN
                 1
              ELSE
                 0
           END)
             SCHED_AFTER_PM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                             AND '12:00'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_AM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '12:01'
                                                             AND '17:00'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_PM,
          (CASE
              WHEN TO_CHAR (created.LOG_DTTM, 'HH24:MI') BETWEEN '17:01'
                                                             AND '23:59'
              THEN
                 1
              ELSE
                 0
           END)
             ORDERED_AFTER_PM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '00:00'
                                                               AND '12:00'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '00:00'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '12:00'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_AM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '12:01'
                                                               AND '17:00'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '12:01'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '17:00'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_PM,
          (CASE
              WHEN TO_CHAR (completed.LOG_DTTM, 'HH24:MI') BETWEEN '17:01'
                                                               AND '23:59'
                               AND TO_CHAR (wc_ccb_fa_s.schedule_date, 'HH24:MI') BETWEEN '17:01'  --20131025 bn - adding additional logic to consider when the FA was scheduled
                                                                      AND '23:59'
                              AND TRUNC ( completed.LOG_DTTM )  = TRUNC(wc_ccb_fa_s.schedule_date)  --20131025 bn - adding additional logic to consider when the FA was scheduled
              THEN
                 1
              ELSE
                 0
           END)
             COMP_AFTER_PM
     FROM wc_ccb_fa_s,
          WC_CCB_SP_S,
          WC_CCB_PREM_S,
          (  SELECT fa_id, MIN (log_dttm) log_dttm
               FROM wc_ccb_fa_log_s
              WHERE log_type = 'OCRP'
           GROUP BY fa_id) created,         --When the order was taken/created
          (SELECT fa_id, log_dttm
             FROM wc_ccb_fa_log_s
            WHERE log_type = 'EXCM') completed,   --When the job was completed
          (SELECT *
             FROM wc_ccb_prem_char_s, wc_ccb_char_val_l_s
            WHERE     wc_ccb_prem_char_s.effective_date =
                         (SELECT MAX (TMP.effective_date)
                            FROM wc_ccb_prem_char_s TMP
                           WHERE     TMP.premise_id =
                                        wc_ccb_prem_char_s.premise_id
                                 AND TMP.characteristic_type_code = 'OFCLOC')
                  AND wc_ccb_prem_char_s.characteristic_type_code = 'OFCLOC'
                  AND wc_ccb_prem_char_s.characteristic_type_code =
                         wc_ccb_char_val_l_s.characteristic_type_code
                  AND wc_ccb_prem_char_s.characteristic_value =
                         wc_ccb_char_val_l_s.characteristic_value) office_location
    WHERE     1 = 1
          AND wc_ccb_fa_s.fa_id = created.fa_id(+)
          AND wc_ccb_fa_s.fa_id = completed.fa_id(+)
          AND WC_CCB_FA_S.SERVICE_POINT_ID = WC_CCB_SP_S.INTEGRATION_ID(+)
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID(+)
          AND WC_CCB_PREM_S.INTEGRATION_ID = office_location.PREMISE_ID(+)
          AND wc_ccb_fa_s.user_id <> 'CONV'
          AND TRIM (wc_ccb_fa_s.fa_cancel_reason_code) IS NULL
          AND created.log_dttm IS NOT NULL
          */
;




/*
    20131025 BN - This view is created for the Bad Debt Write Off report.  Comments are in the view to better explain the filters.
*/
--20131107 bn - adding outerjoin in the orig_sa subquery because some SA's do not have RATECLS defined but have the original SA.
--20131108 BN - ADDING WO SA START DATE PERIOD
--20131230 bn - This view is now more of a summarized view for the bad debt report.  A new view will be created to show details of the original SAs making up the WO SAs.
--20140805 bn - Adding logic to account for Payments made after the face.
--20140814 bn - new logic implemented to bring in all FTs that are happening on WO SAs.
--20140818 bn - new logic to exclude all WOMERC, WOFP, and WOJOB (per John)
--20140922 bn - adding ft gl logic to only pull 144.10
--20150113 bn - For MGE WS3 - Adding CIS Division
CREATE OR REPLACE VIEW WC_CCB_BAD_DEBT_DETAILS_FS_V AS
select
    integration_id,
    datasource_num_id,
    w_insert_dt,
    w_update_dt,
    w_load_number,
    wo_sa_start_date_period,
    wo_sa_start_date_per_ordering,
    wo_acct_id,
    wo_sa_id,
    wo_sa_type_code,
    count(orig_sa_id) orig_sa_id,
    rate_class_code,
    rate_class,
    wo_sa_start_date,
    sa_type_code,
    orig_account_id,
    sum(revenue) revenue,
	
	cis_division --20150113 bn - For MGE WS3 - Adding CIS Division

 from (
select
WC_CCB_SA_S.SA_ID || '::' || orig_sa.characteristic_value || '::' || TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') --20140814 bn - adding period of accounting date to PK.  This is because we are now bringing in all FTs and not just those that happened when the WO SA was created.
 -- || '::' || orig_sa.orig_sa_id  --|| '::' || to_char(wc_ccb_sa_s.start_date, 'MON-YY') --TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY')
                INTEGRATION_ID,  --20131230 BN - Added accounting date to integration id
3000 DATASOURCE_NUM_ID,
SYSDATE W_INSERT_DT,
SYSDATE W_UPDATE_DT,
0 W_LOAD_NUMBER,
--TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') WO_SA_START_DATE_PERIOD,--20131230 BN
--TO_DATE('01-' || to_char(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YYYY'), 'DD-MON-YYYY') WO_SA_START_DATE_PER_ORDERING, --20131230 BN
--20131230 BN - Commenting out to see if using accounting date is correct.  The SA Start Date is not working because payments can happen in different periods
     --20140814 bn - to_char(wc_ccb_sa_s.start_date, 'MON-YY') WO_SA_START_DATE_PERIOD,  --20131108 BN - NEW
        TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') WO_SA_START_DATE_PERIOD, --20140814 bn - Need to use the month that the FT happened since we are going to look at all FTs now.
                                                                                --            - We were previously only looking at FTs that happened the same day as the WO SA Start Date.
        TO_DATE('01-' || to_char(wc_ccb_ft_s.ACCOUNTING_DATE, 'MON-YYYY'), 'DD-MON-YYYY') WO_SA_START_DATE_PER_ORDERING, --20131108 BN - new - only to be used to order the report by period.

wc_ccb_sa_s.account_id wo_acct_id,
wc_ccb_sa_s.sa_id wo_sa_id,
wc_ccb_sa_s.SA_TYPE_CODE WO_SA_TYPE_CODE,  --20131107 BN - new
case 
    when to_char(wc_ccb_sa_s.start_date, 'MON-YY') = TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') 
        then orig_sa.orig_sa_id 
    else 
        null 
    end orig_sa_id,--20140814 bn - changed logic to only get the orig_sa_id IF the FT accounting date is the same as the WO SAs start date.  The value here used to just be orig_sa_id
                   --20131230 bn - adding count to get the count of SAs instead of the IDs.
orig_sa.characteristic_value rate_class_code,
CASE WHEN orig_sa.rate_class IS NOT NULL and wc_ccb_sa_s.sa_type_code not in ('WOMERC','WOFP','WOJOB') THEN orig_sa.rate_class  --20140818 BN - per john, never want to get these BUT we are going to include them in the Non-Utility piece.
     WHEN --orig_sa.rate_class IS NULL AND 
            wc_ccb_sa_s.SA_TYPE_CODE in ('WOFP', 'WOJOB', 'WOMERC') THEN 'Non-Utility'
     WHEN orig_sa.rate_class IS NULL AND wc_ccb_sa_s.SA_TYPE_CODE in ('WOGAS', 'WOTAXS', 'WOTAXG', 'WOTAXC', 'GBNKRPTY', 'GDISPUTE') THEN 'Other Utility'  --20140205 bn - Per Project Charter, this should be Other Utility.  Was defined as Non-Utility as well.
     ELSE NULL
     END RATE_CLASS,   --20131108 bn - adding logic to store OTHER UTILITY and non-UTILITY values.  Other Utility is where no Rate Class but SA Type Code in WOGAS, 3 WOTAX's, BANKRUPT, GDISPUTE
                        -- non-Utility is where sa type code = WOFP, WOJOB, WOMERC

--WC_CCB_FT_S.ACCOUNTING_DATE wo_sa_start_date, --20131230 bn
--20131230 BN - Commenting out to see if using accounting date is correct.  The SA Start Date is not working because payments can happen in different periods
--20140814 bn - wc_ccb_sa_s.start_date wo_sa_start_date,
NULL wo_Sa_start_date, --20140814 bn - this logic is not used so commenting it out
--20131230 bn - Cannot have this as the aggregation is wrong
--orig_sa.sa_type_code,  --20131107 bn - new
--orig_account_id, --20131108 bn - new

null sa_type_code,
null orig_account_id,

--20140922 bn - sum(wc_ccb_ft_s.payoff_amount) revenue
sum(wc_ccb_ft_gl_s.amount) revenue,  --20140922 bn

wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division

from wc_ccb_sa_s,
    wc_ccb_ft_s,
    wc_ccb_sa_type_s,

    --The below subquery gives us the original SA details.  This is only valid for ccb data though.  Converted data will not have the original SA.
    --20131230 bn - added distinct to below because the same values were being returned multiple times
 (select distinct wc_ccb_sa_s.sa_id wo_sa_id,wc_ccb_adj_s_old_sa.sa_id orig_sa_id, CHAR_VAL.characteristic_value, char_val.description rate_class, orig_sa_s.sa_type_code, orig_sa_s.account_id orig_account_id
    , wc_ccb_ft_s.integration_id ft_id  --20140922 bn 
    from wc_ccb_sa_s,
        wc_ccb_adj_s,
        wc_ccb_adj_s wc_ccb_adj_s_old_sa,
        wc_ccb_sa_type_s,
            (SELECT *
                   FROM wc_ccb_sa_char_s
                  WHERE     wc_ccb_sa_char_s.effective_date =
                               (SELECT MAX (TMP.effective_date)
                                  FROM wc_ccb_sa_char_s TMP
                                 WHERE     TMP.SA_ID = wc_ccb_sa_char_s.SA_ID
                                       AND TMP.characteristic_type_code = 'RATECLS')
                        AND wc_ccb_sa_char_s.characteristic_type_code = 'RATECLS') wc_ccb_sa_char_s,
        (select * from wc_ccb_char_val_l_s where characteristic_type_code = 'RATECLS') CHAR_VAL ,
        wc_ccb_sa_s orig_sa_s,
        wc_ccb_ft_s,       --20140922 bn
        wc_ccb_ft_gl_s       --20140922 bn
    where 1=1
        and wc_ccb_sa_s.sa_type_code = wc_ccb_sa_type_s.sa_type_code
        and wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.cis_division
        --20140922 bnand wc_ccb_sa_type_s.special_role_flag = 'WO'
        and wc_ccb_adj_s.adjustment_type_code <> 'BENEFIT'  --Do not want to include this adjustment type (per Corey)
        --and wc_ccb_sa_s.INTEGRATION_ID = wc_ccb_adj_s.sa_id
        and wc_ccb_ft_s.ft_type_flag in ('AD','AX')
        and wc_ccb_ft_s.sibling_id = wc_ccb_adj_s.integration_id
        and wc_ccb_adj_s.transfer_adjustment_id = wc_ccb_adj_s_old_sa.adjustment_id
        AND wc_ccb_adj_s_old_sa.SA_ID = wc_ccb_sa_char_s.SA_ID (+)
        AND wc_ccb_sa_char_s.characteristic_value = CHAR_VAL.characteristic_value(+)
        and wc_ccb_adj_s_old_sa.sa_id = orig_sa_s.sa_id
        and wc_ccb_sa_s.integration_id = wc_ccb_ft_s.sa_id
        and wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id       --20140922 bn
        and wc_ccb_ft_gl_s.gl_account like 'LGC.144100%'       --20140922 bn
    ) orig_sa,
    
    wc_ccb_ft_gl_s --20140922 bn

where 1=1
    and wc_ccb_sa_s.sa_type_code = wc_ccb_sa_type_s.sa_type_code
    and wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.cis_division
     --and wc_ccb_sa_type_s.special_role_flag = 'WO'  --currently return 9 SA Types       --20140922 bn
    and wc_ccb_sa_s.INTEGRATION_ID = wc_ccb_ft_s.sa_id
    and wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id       --20140922 bn
    and wc_ccb_ft_gl_s.gl_account like 'LGC.144100%'       --20140922 bn
    and wc_ccb_ft_s.integration_id = orig_sa.ft_id (+)  --20140922 bn
    --and wc_ccb_sa_s.INTEGRATION_ID = orig_sa.wo_sa_id(+)  --outer join is needed because converted data does not have the original SA
                                                          --so we cannot get the rate class (rate class will be null in report)
    --20131230 BN - Commenting out this filter and adding a new filter on the freeze switch instead.  This will allow us to pick up historical data for WO SAs in status 60.
    --and wc_ccb_sa_s.sa_status_flag <> '60'  --if a WO SA is 60, that means the debt has been paid or transferred to another account.  We do not want to include these.
    AND WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW = 'Y'
    --   and  to_char(wc_ccb_sa_s.start_date, 'MON-YY') >= TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY')  --20131230 bn - Only care about the day the WO occurs.
    --20140814 bn - Per John, we need to account for all FTs that happen on the WO SAs (payments, etc.) so commenting out the above line and changed the logic for counts of original SAs and snapshot date.
    group by wc_ccb_sa_s.account_id , wc_ccb_sa_s.sa_id , wc_ccb_sa_s.sa_type_code, --20140814 bn - orig_sa.orig_sa_id,
    --20140814 bn - new column
    case 
    when to_char(wc_ccb_sa_s.start_date, 'MON-YY') = TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') 
        then orig_sa.orig_sa_id 
    else 
        null 
    end,
    orig_sa.characteristic_value , orig_sa.rate_class,
        --WC_CCB_FT_S.ACCOUNTING_DATE,
         --20140814 bn - Having this in group by causes duplicates
          TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY'),
          to_char(wc_ccb_ft_s.ACCOUNTING_DATE, 'MON-YYYY'),
	wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
		  --20140814 bn - changed to accounting date from sa start date
         --, --20131230 bn
        --orig_sa.sa_type_code, orig_account_id
)
where revenue <> 0
                

  --20140814 bn - use for testing new logic          and wo_sa_id = '2713380346'


group by
    integration_id,
    datasource_num_id,
    w_insert_dt,
    w_update_dt,
    w_load_number,
    wo_sa_start_date_period,
    wo_sa_start_date_per_ordering,
    wo_acct_id,
    wo_sa_id,
    wo_sa_type_code,
    rate_class_code,
    rate_class,
    wo_sa_start_date,
    sa_type_code,
    orig_account_id,--,
	cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
    --revenue       --20140922 bn


;




--20131230 bn - Created a new view for the Missouri Jurisdiction Bad Debt report.
--            - The above view is now a summarized view of the data.  To see the original Accounts/SAs making up WO SAs, you will use the below view.
--20140814 bn - Changed logic as was done in the Summary View.
--20140922 bn - adding ft gl logic to only pull 144.10
--20150113 bn - For MGE WS3 - Adding CIS Division
CREATE OR REPLACE VIEW WC_CCB_BAD_DEBT_DET_FS_V AS
select
WC_CCB_SA_S.SA_ID || '::' || orig_sa.characteristic_value || '::' || orig_sa.orig_sa_id || '::' || TO_CHAR(wc_ccb_ft_s.accounting_date, 'MM/DD/YYYY') --20140814 bn - Added accounting date to PK
-- || '::' || orig_sa.orig_sa_id  --|| '::' || to_char(wc_ccb_sa_s.start_date, 'MON-YY') --TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY')
                INTEGRATION_ID,  --20131230 BN - Added accounting date to integration id
3000 DATASOURCE_NUM_ID,
SYSDATE W_INSERT_DT,
SYSDATE W_UPDATE_DT,
0 W_LOAD_NUMBER,
--TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') WO_SA_START_DATE_PERIOD,--20131230 BN
--TO_DATE('01-' || to_char(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YYYY'), 'DD-MON-YYYY') WO_SA_START_DATE_PER_ORDERING, --20131230 BN
--20131230 BN - Commenting out to see if using accounting date is correct.  The SA Start Date is not working because payments can happen in different periods
        to_char(wc_ccb_ft_s.accounting_date, 'MON-YY') WO_SA_START_DATE_PERIOD, --20140814 bn  --20131108 BN - NEW
        TO_DATE('01-' || to_char(wc_ccb_ft_s.accounting_date, 'MON-YYYY'), 'DD-MON-YYYY') WO_SA_START_DATE_PER_ORDERING, --20140814 bn  --20131108 BN - new - only to be used to order the report by period.

wc_ccb_sa_s.account_id wo_acct_id,
wc_ccb_sa_s.sa_id wo_sa_id,
wc_ccb_sa_s.SA_TYPE_CODE WO_SA_TYPE_CODE,  --20131107 BN - new
orig_sa.orig_sa_id,--20131230 bn - adding count to get the count of SAs instead of the IDs.
orig_sa.characteristic_value rate_class_code,
CASE WHEN orig_sa.rate_class IS NOT NULL and wc_ccb_sa_s.sa_type_code not in ('WOMERC','WOFP','WOJOB') THEN orig_sa.rate_class  --20140818 BN - per john, never want to get these BUT we are going to include them in the Non-Utility piece.
     WHEN --orig_sa.rate_class IS NULL AND 
            wc_ccb_sa_s.SA_TYPE_CODE in ('WOFP', 'WOJOB', 'WOMERC') THEN 'Non-Utility'
     WHEN orig_sa.rate_class IS NULL AND wc_ccb_sa_s.SA_TYPE_CODE in ('WOGAS', 'WOTAXS', 'WOTAXG', 'WOTAXC', 'GBNKRPTY', 'GDISPUTE') THEN 'Other Utility'  --20140205 bn - Per Project Charter, this should be Other Utility.  Was defined as Non-Utility as well.
     ELSE NULL
     END RATE_CLASS,   --20131108 bn - adding logic to store OTHER UTILITY and non-UTILITY values.  Other Utility is where no Rate Class but SA Type Code in WOGAS, 3 WOTAX's, BANKRUPT, GDISPUTE
                        -- non-Utility is where sa type code = WOFP, WOJOB, WOMERC

WC_CCB_FT_S.ACCOUNTING_DATE wo_sa_start_date, --20140814 bn - THIS IS NO LONGER THE WO_SA_START_DATE (will be renamed in RPD) --20131230 bn
--20131230 BN - Commenting out to see if using accounting date is correct.  The SA Start Date is not working because payments can happen in different periods
--20140814 bn - wc_ccb_sa_s.start_date wo_sa_start_date,
--null wo_sa_start_date,
--20131230 bn - Cannot have this as the aggregation is wrong
orig_sa.sa_type_code,  --20131107 bn - new
orig_account_id, --20131108 bn - new

--20140922 bn - changing this to now use ft gl
--sum(wc_ccb_ft_s.payoff_amount) revenue

sum(wc_ccb_ft_gl_s.amount) revenue,

wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division

from wc_ccb_sa_s,
    wc_ccb_ft_s,
    wc_ccb_sa_type_s,

    --The below subquery gives us the original SA details.  This is only valid for ccb data though.  Converted data will not have the original SA.
    --20131230 bn - added distinct to below because the same values were being returned multiple times
    --20140922 bn - added ft_gl logic
 (select distinct wc_ccb_sa_s.sa_id wo_sa_id,wc_ccb_adj_s_old_sa.sa_id orig_sa_id, CHAR_VAL.characteristic_value, char_val.description rate_class, orig_sa_s.sa_type_code, orig_sa_s.account_id orig_account_id
    , wc_ccb_ft_s.integration_id ft_id  --20140922 bn 
    from wc_ccb_sa_s,
        wc_ccb_adj_s,
        wc_ccb_adj_s wc_ccb_adj_s_old_sa,
        wc_ccb_sa_type_s,
            (SELECT *
                   FROM wc_ccb_sa_char_s
                  WHERE     wc_ccb_sa_char_s.effective_date =
                               (SELECT MAX (TMP.effective_date)
                                  FROM wc_ccb_sa_char_s TMP
                                 WHERE     TMP.SA_ID = wc_ccb_sa_char_s.SA_ID
                                       AND TMP.characteristic_type_code = 'RATECLS')
                        AND wc_ccb_sa_char_s.characteristic_type_code = 'RATECLS') wc_ccb_sa_char_s,
        (select * from wc_ccb_char_val_l_s where characteristic_type_code = 'RATECLS') CHAR_VAL ,
        wc_ccb_sa_s orig_sa_s,
        wc_ccb_ft_s,       --20140922 bn
        wc_ccb_ft_gl_s       --20140922 bn
    where 1=1
        and wc_ccb_sa_s.sa_type_code = wc_ccb_sa_type_s.sa_type_code
        and wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.cis_division
        --20140922 bnand wc_ccb_sa_type_s.special_role_flag = 'WO'
        and wc_ccb_adj_s.adjustment_type_code <> 'BENEFIT'  --Do not want to include this adjustment type (per Corey)
        --and wc_ccb_sa_s.INTEGRATION_ID = wc_ccb_adj_s.sa_id
        and wc_ccb_ft_s.ft_type_flag in ('AD','AX')
        and wc_ccb_ft_s.sibling_id = wc_ccb_adj_s.integration_id
        and wc_ccb_adj_s.transfer_adjustment_id = wc_ccb_adj_s_old_sa.adjustment_id
        AND wc_ccb_adj_s_old_sa.SA_ID = wc_ccb_sa_char_s.SA_ID (+)
        AND wc_ccb_sa_char_s.characteristic_value = CHAR_VAL.characteristic_value(+)
        and wc_ccb_adj_s_old_sa.sa_id = orig_sa_s.sa_id
        and wc_ccb_sa_s.integration_id = wc_ccb_ft_s.sa_id
        and wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id       --20140922 bn
        and wc_ccb_ft_gl_s.gl_account like 'LGC.144100%'       --20140922 bn
    ) orig_sa,
    
    wc_ccb_ft_gl_s --20140922 bn


where 1=1
    and wc_ccb_sa_s.sa_type_code = wc_ccb_sa_type_s.sa_type_code
    and wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.cis_division
    --and wc_ccb_sa_type_s.special_role_flag = 'WO'  --currently return 9 SA Types       --20140922 bn
    and wc_ccb_sa_s.INTEGRATION_ID = wc_ccb_ft_s.sa_id
    and wc_ccb_ft_gl_s.ft_id = wc_ccb_ft_s.integration_id       --20140922 bn
    and wc_ccb_ft_gl_s.gl_account like 'LGC.144100%'       --20140922 bn
    and wc_ccb_ft_s.integration_id = orig_sa.ft_id (+)  --20140922 bn
    --20140922 bn - and wc_ccb_sa_s.INTEGRATION_ID = orig_sa.wo_sa_id(+)  --outer join is needed because converted data does not have the original SA
                                                          --so we cannot get the rate class (rate class will be null in report)
    --20131230 BN - Commenting out this filter and adding a new filter on the freeze switch instead.  This will allow us to pick up historical data for WO SAs in status 60.
    --and wc_ccb_sa_s.sa_status_flag <> '60'  --if a WO SA is 60, that means the debt has been paid or transferred to another account.  We do not want to include these.
    AND WC_CCB_FT_S.FROZEN_POSTED_TO_ACCOUNT_SW = 'Y'
  --20140814 bn -  and  to_char(wc_ccb_sa_s.start_date, 'MON-YY') >= TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY')  --20131230 bn - Only care about the day the WO occurs.
    group by wc_ccb_sa_s.account_id , wc_ccb_sa_s.sa_id , wc_ccb_sa_s.sa_type_code, orig_sa.orig_sa_id,
    orig_sa.characteristic_value , orig_sa.rate_class,
        --WC_CCB_FT_S.ACCOUNTING_DATE,
        --20140814 bn -  wc_ccb_sa_s.start_date, --20131230 bn
        WC_CCB_FT_S.ACCOUNTING_DATE, --20140814 bn
        --orig_sa.sa_type_code, orig_account_id
        orig_sa.sa_type_code,  --20131107 bn - new
orig_account_id,
wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
;






--20140522 BN - NEW COLUMN FOR RECONNECTS WITHOUT SA REPORT
--20140729 bn - updated active_sa_flag logic
--20160726 bn - adding trunc for date comparisons.  This was causing the report to
--              show records that shouldnt in the report.
--20160914 bn - adding logic to exclude cancelled sas from active sa flag.
CREATE OR REPLACE VIEW MDW.WC_CCB_SA_SP_FA_OFF_LOC_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SA_SP_ID,
   FA_ID,
   SA_ID,
   SP_ID,
   ACTIVITY_TYPE_CODE,
   FA_CANCEL_REASON_CODE,
   SERVICE_POINT_ID,
   FA_PRIORITY_FLAG,
   FA_CREATED_BY,
   SCHEDULE_DATE,
   FA_STATUS_FLAG,
   ELIGIBLE_FOR_DISPATCH_SW,
   DISPATCH_GROUP_CODE,
   FIELD_ORDER_ID,
   CREATE_DATE,
   TEST_SELECTION_ID,
   USER_ID,
   INSTRUCTIONS,
   LONG_DESCRIPTION,
   FA_VERSION,
   APPT_PERIOD_ID,
   FA_EXTERNAL_ID,
   FA_INTERMEDIATE_STATUS_FLAG,
   FA_RESCHEDULE_REASON_CODE,
   FA_DATA_AREA,
   CIS_DIVISION,
   SA_TYPE_CODE,
   START_OPTION_CODE,
   START_DATE,
   SA_STATUS_FLAG,
   ACCOUNT_ID,
   END_DATE,
   OLD_ACCOUNT_ID,
   CUSTOMER_READ_FLAG,
   ALLOW_ESTIMATES_SW,
   SIC_CODE,
   CHARACTERISTIC_PREMISE_ID,
   TOTAL_TO_BILL_AMOUNT,
   CURRENCY_CODE,
   SA_VERSION,
   SA_RELATIONSHIP_ID,
   START_REASON_FLAG,
   STOP_REASON_FLAG,
   START_REQUESTED_BY,
   STOP_REQUESTED_BY,
   MAXIMUM_BILL_THRESHOLD_AMOUNT,
   DEPOSIT_INTEREST_CALC_DATE,
   CIAC_REVIEW_DATE,
   BUSINESS_ACTIVITY_DESCRIPTION,
   IB_SA_CUTOFF_TIME,
   IB_SA_START_DAY_OPTION,
   ENROLLMENT_ID,
   SPECIAL_USAGE_FLAG,
   PROPOSAL_SA_STATUS_FLAG,
   PROPOSAL_DECLINE_REASON_CODE,
   PROPOSAL_SA_ID,
   NUMBER_OF_PAYMENT_PERIODS,
   NBB_RECOMMENDATION_RULE,
   EXPIRATION_DATE,
   RENEWAL_DATE,
   NBB_AUTOPAY_FLAG,
   SA_DATA_AREA,
   DIVISION_CID,
   SA_ACCOUNT_CID,
   SA_PREMISE_CID,
   CURRENCY_CID,
   BILL_PERIOD_CODE,
   LPC_CALC_ALGORITHM_CODE,
   GL_DIVISION,
   SERVICE_POINTS_REQUIRED_SW,
   DISTRIBUTION_CODE,
   PAYMENT_SEGMENT_TYPE_CODE,
   NSF_ADJUSTMENT_TYPE,
   SERVICE_TYPE_CODE,
   BILL_SEGMENT_TYPE_CODE,
   REVENUE_CLASS_CODE,
   DEBT_CLASS_CODE,
   RATE_REQUIRED_SW,
   RATE_SELECTION_DATE_FLAG,
   DO_NOT_OVERPAY_SW,
   PAYMENT_PRIORITY_FLAG,
   MINIMUM_DAYS_FOR_BILLING,
   ELIGIBLE_FOR_BILLING_SW,
   CHAR_PREMISE_REQUIRED_SW,
   ONE_TIME_CHARGE_SW,
   START_OPTION_REQUIRED_SW,
   LATE_PAYMENT_CHARGE_SW,
   DISPLAY_AS_ALERT_SW,
   BILL_PRINT_PRIORITY_FLAG,
   GRAPH_UNIT_OF_MEASURE,
   USE_CALENDAR_BILLING,
   ANNIVERSARY_BILL_FREQ_CODE,
   SPECIAL_ROLE_FLAG,
   SA_TYPE_VERSION,
   ADJUSTMENT_TYPE_TRANSFER,
   ADJUSTMENT_TYPE_0,
   CIAC_REFUND_PROCESS_CODE,
   ADJUSTMENT_TYPE_SYNCH,
   TOTAL_BILL_AMOUNT,
   RECURRING_CHARGE_FLAG,
   RECURRING_CHARGE_FREQ_CODE,
   MAXIMUM_BILL_THRESHOLD,
   SUB_SA_SW,
   DEPOSIT_CLASS_CODE,
   ELIGIBLE_FOR_BUDGET_SW,
   WRITE_OFF_DEBT_CLASS_CODE,
   CIAC_SA_TYPE_SW,
   DELINQUENT_PAY_PRIORITY_FLAG,
   BILLING_PROCESSING_SEQUENCE,
   INITIAL_START_OPTION_DATE,
   LOAD_AR_DISTRIBUTION_CODE,
   OVERRIDE_INTEREST_FLAG,
   INTEREST_BILL_FACTOR,
   SA_RENEWAL_FLAG,
   RENEWAL_DAYS_BEFORE_EXP,
   NBB_ELIGIBILITY_FLAG,
   NBB_MONITOR_FLAG,
   RATE_SOURCE_FLAG,
   STOP_OPTION_FLAG,
   GL_DIVISION_CID,
   NSF_ADJUSTMENT_TYPE_CID,
   REVENUE_CLASS_CID,
   ADJUSTMENT_TYPE_TRANSFER_CID,
   ADJUSTMENT_TYPE_0_CID,
   ADJUSTMENT_TYPE_SYNCH_CID,
   DEPOSIT_CLASS_CID,
   DISCONNECTED_LOCATION_CODE,
   SP_TYPE_CODE,
   PREMISE_ID,
   SP_STATUS_FLAG,
   INSTALL_DATE,
   SP_SOURCE_STATUS_FLAG,
   MR_SERVICE_CYCLE_CODE,
   MR_SERVICE_ROUTE_CODE,
   METER_LOCATION_CODE,
   MR_SERVICE_SYSCLE_ROUTE_SEQ,
   FACILITY_LEVEL_1_CODE,
   METER_LOCATION_DETAILS,
   FACILITY_LEVEL_2_CODE,
   FACILITY_LEVEL_3_CODE,
   SP_VERSION,
   SP_LONG_DESCRIPTION,
   ABOLISHED_DATE,
   OVERRIDE_PREMISE_FLD_INFO_FLAG,
   MR_INSTRUCTION_CODE,
   MR_WARNING_CODE,
   KEY_SW,
   KEY_ID,
   OK_TO_ENTER_SW,
   MR_INSTRUCTION_DETAILS,
   SP_DATA_AREA,
   DISCONNECTED_LOCATION_CID,
   PREMISE_CID,
   METER_READ_CYCLE_CID,
   OFFICE,
   BILL_DATE,
   ACTIVE_SA_FLAG --20140522 BN - for Reconnects without SA report
)
AS  /* 20131031 BN - Completely changed the logic in this view.  It was using the WC_CCB_SA_SP_FA_F table but that table does not contain all FA's */
   SELECT         --20140523 BN - This view was rejecting records due to an SA being turned on twice for the same SP.  Had to add SA SP Integration ID to the integration_id.
          WC_CCB_FA_S.INTEGRATION_ID || '::' || WC_CCB_SA_SP_S.INTEGRATION_ID || '::' ||  WC_CCB_SA_S.INTEGRATION_ID,
          WC_CCB_FA_S.DATASOURCE_NUM_ID,
          WC_CCB_FA_S.W_INSERT_DT,
          WC_CCB_FA_S.W_UPDATE_DT,
          WC_CCB_FA_S.W_LOAD_NUMBER,
          WC_CCB_SA_SP_S.SA_SP_ID,
          WC_CCB_FA_S.FA_ID,
          WC_CCB_SA_S.SA_ID,
          WC_CCB_SP_S.SP_ID,
          WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
          WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
          WC_CCB_FA_S.SERVICE_POINT_ID,
          WC_CCB_FA_S.FA_PRIORITY_FLAG,
          WC_CCB_FA_S.FA_CREATED_BY,
          TRUNC(WC_CCB_FA_S.SCHEDULE_DATE),
          WC_CCB_FA_S.FA_STATUS_FLAG,
          WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
          WC_CCB_FA_S.DISPATCH_GROUP_CODE,
          WC_CCB_FA_S.FIELD_ORDER_ID,
          WC_CCB_FA_S.CREATE_DATE,
          WC_CCB_FA_S.TEST_SELECTION_ID,
          WC_CCB_FA_S.USER_ID,
          WC_CCB_FA_S.INSTRUCTIONS,
          WC_CCB_FA_S.LONG_DESCRIPTION,
          WC_CCB_FA_S.FA_VERSION,
          WC_CCB_FA_S.APPT_PERIOD_ID,
          WC_CCB_FA_S.FA_EXTERNAL_ID,
          WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
          WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
          WC_CCB_FA_S.FA_DATA_AREA,
          WC_CCB_SA_S.CIS_DIVISION,
          WC_CCB_SA_S.SA_TYPE_CODE,
          WC_CCB_SA_S.START_OPTION_CODE,
          WC_CCB_SA_S.START_DATE,
          WC_CCB_SA_S.SA_STATUS_FLAG,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_SA_S.END_DATE,
          WC_CCB_SA_S.OLD_ACCOUNT_ID,
          WC_CCB_SA_S.CUSTOMER_READ_FLAG,
          WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
          WC_CCB_SA_S.SIC_CODE,
          WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
          WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
          WC_CCB_SA_S.CURRENCY_CODE,
          WC_CCB_SA_S.SA_VERSION,
          WC_CCB_SA_S.SA_RELATIONSHIP_ID,
          WC_CCB_SA_S.START_REASON_FLAG,
          WC_CCB_SA_S.STOP_REASON_FLAG,
          WC_CCB_SA_S.START_REQUESTED_BY,
          WC_CCB_SA_S.STOP_REQUESTED_BY,
          WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
          WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
          WC_CCB_SA_S.CIAC_REVIEW_DATE,
          WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
          WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
          WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
          WC_CCB_SA_S.ENROLLMENT_ID,
          WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
          WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
          WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
          WC_CCB_SA_S.PROPOSAL_SA_ID,
          WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
          WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
          WC_CCB_SA_S.EXPIRATION_DATE,
          WC_CCB_SA_S.RENEWAL_DATE,
          WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
          WC_CCB_SA_S.SA_DATA_AREA,
          WC_CCB_SA_S.DIVISION_CID,
          WC_CCB_SA_S.ACCOUNT_CID,
          WC_CCB_SA_S.PREMISE_CID,
          WC_CCB_SA_S.CURRENCY_CID,
          WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
          WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
          WC_CCB_SA_TYPE_S.GL_DIVISION,
          WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
          WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
          WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
          WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
          WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
          WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
          WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
          WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
          WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
          WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
          WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
          WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
          WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
          WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
          WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
          WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
          WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
          WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
          WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
          WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
          WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
          WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
          WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
          WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
          WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
          WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
          WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
          WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
          WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
          WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
          WC_CCB_SA_TYPE_S.SUB_SA_SW,
          WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
          WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
          WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
          WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
          WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
          WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
          WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
          WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
          WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
          WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
          WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
          WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
          WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
          WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
          WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
          WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
          WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
          WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
          WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
          WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
          WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
          WC_CCB_SP_S.DISCONNECTED_LOCATION_CODE,
          WC_CCB_SP_S.SP_TYPE_CODE,
          WC_CCB_SP_S.PREMISE_ID,
          WC_CCB_SP_S.SP_STATUS_FLAG,
          WC_CCB_SP_S.INSTALL_DATE,
          WC_CCB_SP_S.SP_SOURCE_STATUS_FLAG,
          WC_CCB_SP_S.MR_SERVICE_CYCLE_CODE,
          WC_CCB_SP_S.MR_SERVICE_ROUTE_CODE,
          WC_CCB_SP_S.METER_LOCATION_CODE,
          WC_CCB_SP_S.MR_SERVICE_SYSCLE_ROUTE_SEQ,
          WC_CCB_SP_S.FACILITY_LEVEL_1_CODE,
          WC_CCB_SP_S.METER_LOCATION_DETAILS,
          WC_CCB_SP_S.FACILITY_LEVEL_2_CODE,
          WC_CCB_SP_S.FACILITY_LEVEL_3_CODE,
          WC_CCB_SP_S.SP_VERSION,
          WC_CCB_SP_S.SP_LONG_DESCRIPTION,
          WC_CCB_SP_S.ABOLISHED_DATE,
          WC_CCB_SP_S.OVERRIDE_PREMISE_FLD_INFO_FLAG,
          WC_CCB_SP_S.MR_INSTRUCTION_CODE,
          WC_CCB_SP_S.MR_WARNING_CODE,
          WC_CCB_SP_S.KEY_SW,
          WC_CCB_SP_S.KEY_ID,
          WC_CCB_SP_S.OK_TO_ENTER_SW,
          WC_CCB_SP_S.MR_INSTRUCTION_DETAILS,
          WC_CCB_SP_S.SP_DATA_AREA,
          WC_CCB_SP_S.DISCONNECTED_LOCATION_CID,
          WC_CCB_SP_S.PREMISE_CID,
          WC_CCB_SP_S.METER_READ_CYCLE_CID,
          WC_CCB_PREM_CHAR_S.OFFICE,
   WC_CCB_BILL_S.BILL_DATE,
   CASE WHEN ACTIVE_SA_FLAG.SP_ID IS NULL THEN 'N' ELSE 'Y' END ACTIVE_SA_FLAG --20140522 BN - for Reconnects without SA report   
     FROM --WC_CCB_SA_SP_FA_F,
        WC_CCB_FA_S,
        WC_CCB_SP_S,
        WC_CCB_SA_SP_S,
        WC_CCB_SA_S,
        WC_CCB_SA_TYPE_S,

          --WC_CCB_PREM_S,
          (SELECT
                PREMISE_ID, CHARACTERISTIC_VALUE OFFICE
           FROM
                WC_CCB_PREM_CHAR_S
           WHERE 1=1
                AND CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
                AND EFFECTIVE_DATE = (
                                                        SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                        WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                            AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
                                                            AND TRUNC(TMP.EFFECTIVE_DATE) < TRUNC(SYSDATE)
                                        )
          ) WC_CCB_PREM_CHAR_S,
          (SELECT ACCOUNT_ID, MAX(BILL_DATE) BILL_DATE FROM WC_CCB_BILL_S GROUP BY ACCOUNT_ID) WC_CCB_BILL_S,
    /* --20140729 BN - new logic for Reconnects query below
          ( SELECT distinct SP_ID sp_id
            FROM WC_CCB_SA_SP_S, WC_CCB_SA_S
            WHERE WC_CCB_SA_SP_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
                AND WC_CCB_SA_S.SA_STATUS_FLAG IN ('20','30','50')
          ) ACTIVE_SA_FLAG --20140522 BN - for Reconnects without SA report
       */   
          ( SELECT SP_ID sp_id, max(NVL(end_date, TO_DATE('1/1/2099','MM/DD/YYYY'))) SA_END_DATE
            FROM WC_CCB_SA_SP_S, WC_CCB_SA_S
            WHERE WC_CCB_SA_SP_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
               -- AND WC_CCB_SA_S.SA_STATUS_FLAG IN ('20','30','50')
               and wc_ccb_sa_s.sa_status_flag <> '70' --20160914 bn - for reconnect w/out sas issue
            group by sp_id
          ) ACTIVE_SA_FLAG
     WHERE 1=1
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID (+)
          --AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID (+)
          AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_BILL_S.ACCOUNT_ID (+)

          AND WC_CCB_FA_S.SERVICE_POINT_ID = WC_CCB_SP_S.INTEGRATION_ID
          AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SP_ID (+)
          AND WC_CCB_SA_SP_S.SA_ID = WC_CCB_SA_S.SA_ID (+)
          AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE (+)
          AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION (+)
        AND WC_CCB_FA_S.SERVICE_POINT_ID = ACTIVE_SA_FLAG.SP_ID (+) --20140522 BN - for Reconnects without SA report
        AND trunc(WC_CCB_FA_S.SCHEDULE_DATE) <= trunc(SA_END_DATE(+))  --20160726 bn - adding TRUNC for both dates due to data issue mentioned in 128552 --20140728 bn - to see if there was an active SA at the time 
;


--20131101 BN - to fix the issue with Tax Rates not showing up properly (Sales Tax Report)

CREATE OR REPLACE VIEW WC_CCB_CITY_TAX_RATE_STG_TMP_V AS
 SELECT  WC_CCB_FT_S.INTEGRATION_ID, BF.VAL TAX_RATE, BILL_FACTOR_CODE
 FROM
           (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'CITYTCI'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                   ) BF,
         (SELECT PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT  MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) TOWN,
            WC_CCB_SA_S,
            WC_CCB_FT_S
WHERE
    WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
    AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID = TOWN.PREMISE_ID
    AND TOWN.TOWN_CODE =  BF.CHARACTERISTIC_VALUE
    AND  BF.EFFECTIVE_DATE =  (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'CITYTCI'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          BF.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          wc_ccb_ft_s.ACCOUNTING_DATE)
union all
 SELECT  WC_CCB_FT_S.INTEGRATION_ID, BF.VAL TAX_RATE, BILL_FACTOR_CODE
 FROM
           (SELECT *
               FROM WC_CCB_BF_VAL_S
              WHERE     1 = 1
                    AND BILL_FACTOR_CODE = 'CITYTCI'
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                   ) BF,
         (SELECT PREMISE_ID, CHARACTERISTIC_VALUE TOWN_CODE
               FROM WC_CCB_PREM_CHAR_S
              WHERE     1 = 1
                    AND CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                    AND EFFECTIVE_DATE =
                           (SELECT  MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          TRUNC (SYSDATE))) TOWN,
            WC_CCB_SA_S,
            WC_CCB_FT_S
WHERE
    WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
    AND WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID = TOWN.PREMISE_ID
    AND TOWN.TOWN_CODE =  BF.CHARACTERISTIC_VALUE
    AND  BF.EFFECTIVE_DATE =  (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_BF_VAL_S TMP
                             WHERE     TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                                   AND TMP.BILL_FACTOR_CODE = 'CITYTCI'
                                   AND TMP.CHARACTERISTIC_VALUE =
                                          BF.CHARACTERISTIC_VALUE
                                   AND TRUNC (TMP.EFFECTIVE_DATE) <
                                          wc_ccb_ft_s.ACCOUNTING_DATE)      ;





--20131120 BN - FOR USAGE BILLING ARCHIVE REPORT
--20131121 BN - Adding logic to only get the SA associated with the Read. (by sa_sp start/stop dates)
--20131204 bn - Created 4 temp tables that will be loaded BEFORE this view is sourced in the ETL.  The temp tables will be dropped and created daily.
--              - The temp tables allow for the view to return data a lot faster.
--				- Added MR_SOURCE_CODE, REGISTER_ID , HIGH_LOW_FLAG
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_USAGE_BILLING_CONS_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT_CID,
   PREMISE_CID,
   ACCOUNT_ID,
   BILL_ID,
   BSEG_ID,
   BSEG_READ_ID,
   START_REG_READ_ID,
   END_REG_READ_ID,
   SA_ID,
   SA_SP_ID,
   SP_ID,
   PREM_ID,
   SP_MTR_HIST_ID,
   MTR_CONFIG_ID,
   START_MR_ID,
   END_MR_ID,
   ADDRESS1,
   RATE_CLASS_CODE,
   RATE_CLASS_DESCRIPTION,
   BADGE_NUMBER,
   METER_SIZE,
   EFFECTIVE_DATE,
   START_CORRECTED_UNCOR_FLAG,
   END_CORRECTED_UNCOR_FLAG,
   START_METER_READ_DATE,
   START_USE_ON_BILL_FLAG,
   START_MR_READ_DATE,
   END_METER_READ_DATE,
   END_USE_ON_BILL_FLAG,
   END_MR_READ_DATE,
   START_REGISTER_READING,
   START_READ_TYPE_CODE,
   START_READ_TYPE_DESCRIPTION,
   END_REGISTER_READING,
   END_READ_TYPE_CODE,
   END_READ_TYPE_DESCRIPTION,
   START_REGISTER_CONSTANT,
   END_REGISTER_CONSTANT,
   BTU_FACTOR,
   THERMS,
   BILL_DATE,
   CURRENT_AMOUNT,
   ACCOUNTING_DATE,
   ACCOUNTING_PERIOD,
   INSTALLATION_CONSTANT,
   PRESSURE_FACTOR,
   DEGREE_DAY,
   DAYS_SINCE_LAST_BILL,
   FT_TYPE_FLAG,
   MR_SOURCE_CODE,    --20131204 BN
   REGISTER_ID,		  --20131204 BN
   HIGH_LOW_FLAG,	  --20131204 BN
   FT_BILL_ID,		  --20131205 BN - Needed because a bill cancellation can originate from one bill but be on a different bill.
   LINE_TYPE		  --20131206 BN - Used to see what Reads were on a bill and which were not.
)
AS  --1ST Query returns all reads associated with a bill.

   SELECT   WC_CCB_ACCT_S.INTEGRATION_ID
          || '::'
          || WC_CCB_REG_READ_S_start.INTEGRATION_ID
          || '::'
          || WC_CCB_REG_READ_S_end.INTEGRATION_ID
          || '::'
          || WC_CCB_FT_S_bill.FT_TYPE_FLAG
		  || '::'
		  || wc_ccb_bseg_s.integration_id  --20131205 bn - adding because a bseg can be part of multiple months/ft types
             INTEGRATION_ID,
          3000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          WC_CCB_ACCT_S.INTEGRATION_ID ACCOUNT_CID,
          WC_CCB_PREM_S.INTEGRATION_ID PREMISE_CID,
          WC_CCB_ACCT_S.INTEGRATION_ID ACCOUNT_ID,
          WC_CCB_BILL_S.INTEGRATION_ID BILL_ID,
          WC_CCB_BSEG_S.INTEGRATION_ID BSEG_ID,
          WC_CCB_BSEG_READ_S.INTEGRATION_ID BSEG_READ_ID,
          WC_CCB_REG_READ_S_start.INTEGRATION_ID START_REG_READ_ID,
          WC_CCB_REG_READ_S_end.INTEGRATION_ID END_REG_READ_ID,
          WC_CCB_SA_S.INTEGRATION_ID SA_ID,
          WC_CCB_SA_SP_S.INTEGRATION_ID SA_SP_ID,
          WC_CCB_SP_S.INTEGRATION_ID SP_ID,
          WC_CCB_PREM_S.INTEGRATION_ID PREM_ID,
          WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID SP_MTR_HIST_ID,
          WC_CCB_MTR_CONFIG_S.INTEGRATION_ID MTR_CONFIG_ID,
          WC_CCB_MR_S_start.INTEGRATION_ID START_MR_ID,
          WC_CCB_MR_S_end.INTEGRATION_ID END_MR_ID,
          --PERSON_NAME --join to account d
          WC_CCB_PREM_S.ADDRESS1,
          WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE RATE_CLASS_CODE,
          WC_CCB_CHAR_VAL_L_S_ratecls.DESCRIPTION RATE_CLASS_DESCRIPTION,
          WC_CCB_MTR_S.BADGE_NUMBER,
          WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE METER_SIZE,
          WC_CCB_MTR_CONFIG_S.EFFECTIVE_DATE,
          CASE
             WHEN WC_CCB_REG_S_start.UNIT_OF_MEASURE_CODE IN ('CCFC', 'MCFC')
             THEN
                'Corrected'
             WHEN WC_CCB_REG_S_start.UNIT_OF_MEASURE_CODE IN ('CCFU', 'MCFU')
             THEN
                'Uncorrected'
             ELSE
                'N/A'
          END
             START_CORRECTED_UNCOR_FLAG,
          CASE
             WHEN WC_CCB_REG_S_end.UNIT_OF_MEASURE_CODE IN ('CCFC', 'MCFC')
             THEN
                'Corrected'
             WHEN WC_CCB_REG_S_end.UNIT_OF_MEASURE_CODE IN ('CCFU', 'MCFU')
             THEN
                'Uncorrected'
             ELSE
                'N/A'
          END
             END_CORRECTED_UNCOR_FLAG,
          WC_CCB_MR_S_start.START_READ_DATE START_METER_READ_DATE,
          WC_CCB_MR_S_start.START_USE_ON_BILL_SW START_USE_ON_BILL_FLAG,
          WC_CCB_MR_S_start.START_READ_DATE START_MR_READ_DATE,
          WC_CCB_MR_S_end.START_READ_DATE END_METER_READ_DATE,
          WC_CCB_MR_S_end.START_USE_ON_BILL_SW END_USE_ON_BILL_FLAG,
          WC_CCB_MR_S_end.START_READ_DATE END_MR_READ_DATE,
          WC_CCB_REG_READ_S_start.START_REGISTER_READING
             START_REGISTER_READING,
          WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG START_READ_TYPE_CODE,
          CASE
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '20'
             THEN
                'No Read'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '30'
             THEN
                'System Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '35'
             THEN
                'Service Provider Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '40'
             THEN
                'Office Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '45'
             THEN
                'System Prorate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '50'
             THEN
                'Customer Read'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '60'
             THEN
                'Regular'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '70'
             THEN
                'Verified'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '80'
             THEN
                'Billing Force'
             ELSE
                'N/A'
          END
             START_READ_TYPE_DESCRIPTION,
          WC_CCB_REG_READ_S_end.START_REGISTER_READING END_REGISTER_READING,
          WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG END_READ_TYPE_CODE,
          CASE
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '20'
             THEN
                'No Read'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '30'
             THEN
                'System Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '35'
             THEN
                'Service Provider Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '40'
             THEN
                'Office Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '45'
             THEN
                'System Prorate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '50'
             THEN
                'Customer Read'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '60'
             THEN
                'Regular'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '70'
             THEN
                'Verified'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '80'
             THEN
                'Billing Force'
             ELSE
                'N/A'
          END
             END_READ_TYPE_DESCRIPTION,
          WC_CCB_REG_S_start.REGISTER_CONSTANT START_REGISTER_CONSTANT,
          WC_CCB_REG_S_end.REGISTER_CONSTANT END_REGISTER_CONSTANT,
          WC_CCB_BSEG_SQ_S_btu.BTU_FACTOR,
          WC_CCB_BSEG_SQ_S_therms.THERMS,
          WC_CCB_BILL_S.BILL_DATE,
          WC_CCB_FT_S_bill.CURRENT_AMOUNT,
          WC_CCB_FT_S_bill.ACCOUNTING_DATE,
          TO_CHAR (WC_CCB_FT_S_bill.ACCOUNTING_DATE, 'MON-YY')
             ACCOUNTING_PERIOD,
          WC_CCB_SP_MTR_HIST_S.INSTALLATION_CONSTANT,
            WC_CCB_SP_MTR_HIST_S.INSTALLATION_CONSTANT
          * WC_CCB_REG_S_end.REGISTER_CONSTANT
             PRESSURE_FACTOR,
          WC_CCB_DEG_DAY_S.DEGREE_DAY,
          wc_ccb_bill_s.bill_date - (select max(bill_date) from wc_ccb_bill_s t
                                     where t.account_id = wc_Ccb_bill_s.account_id and
                                     t.bill_date < wc_ccb_bill_s.bill_date)
            DAYS_SINCE_LAST_BILL,               --20131204 bn - Added logic for this column (previously was 999)
          WC_CCB_FT_S_bill.FT_TYPE_FLAG, --20131121
          WC_CCB_MR_S_start.START_MR_SOURCE_CODE MR_SOURCE_CODE,    --20131204 BN
		  WC_CCB_REG_READ_S_end.START_REGISTER_ID REGISTER_ID, --20131204 BN
		  WC_CCB_REG_READ_S_end.START_REVIEW_HIGH_LOW_SW HIGH_LOW_FLAG,  --20131204 BN
		  WC_CCB_FT_S_bill.BILL_ID FT_BILL_ID,
		  'BILLED READS' LINE_TYPE --20131206 BN
     FROM WC_CCB_ACCT_S,
          WC_CCB_BILL_S,
          WC_CCB_BSEG_S,
          /*  20131204 BN
          (SELECT BILL_SEGMENT_ID, BILLABLE_SERVICE_QUANTITY btu_factor -- SUM(WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY) BTU_FACTOR
             FROM WC_CCB_BSEG_SQ_S
            WHERE WC_CCB_BSEG_SQ_S.SQI_CODE = 'BTUFCT' --   GROUP BY BILL_SEGMENT_ID
                                                      )*/
            WC_CCB_BSEG_SQ_S_btu,
         /* (SELECT BILL_SEGMENT_ID,
                  WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY THERMS
             FROM WC_CCB_BSEG_SQ_S
            WHERE WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'TH' -- GROUP BY BILL_SEGMENT_ID
                                                              )*/
             WC_CCB_BSEG_SQ_S_therms,
          WC_CCB_BSEG_READ_S,
          WC_CCB_REG_READ_S WC_CCB_REG_READ_S_start,  --start register read id
          WC_CCB_REG_READ_S WC_CCB_REG_READ_S_end       --end register read id
                                                 ,
 --20131204 BN       WC_CCB_SA_TYPE_S,
  --20131204 BN         WC_CCB_SA_S,

            wc_ccb_usage_bill_sa_sub_tmp           WC_CCB_SA_S,
          WC_CCB_SA_SP_S,
          WC_CCB_SP_S,
          WC_CCB_PREM_S,
          WC_CCB_SP_MTR_HIST_S,
          WC_CCB_MTR_CONFIG_S,
          WC_CCB_MR_S WC_CCB_MR_S_start,
          WC_CCB_MR_S WC_CCB_MR_S_end,
          (SELECT *
             FROM WC_CCB_SA_CHAR_S
            WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_SA_CHAR_S TMP
                           WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                  AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S_ratecls,
          WC_CCB_CHAR_VAL_L_S WC_CCB_CHAR_VAL_L_S_ratecls,
          WC_CCB_REG_S WC_CCB_REG_S_start,
          WC_CCB_REG_S WC_CCB_REG_S_end,
          (SELECT *
             FROM WC_CCB_MTR_CHAR_S
            WHERE     WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_MTR_CHAR_S TMP
                           WHERE     TMP.METER_ID =
                                        WC_CCB_MTR_CHAR_S.METER_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                  AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE') WC_CCB_MTR_CHAR_S,
          WC_CCB_MTR_S,
 /* 20131204 BN
          (SELECT a.INTEGRATION_ID SP_MTR_HIST_ID,
                  b2.START_READ_DATE start_mr_date,
                  NVL (c2.START_READ_DATE,
                       TO_DATE ('12/31/2199', 'mm/dd/yyyy'))
                     end_mr_date
             FROM WC_CCB_SP_MTR_HIST_S a,
                  WC_CCB_SP_MTR_EVT_S b,
                  WC_CCB_SP_MTR_EVT_S c,
                  WC_CCB_MR_S b2,
                  WC_CCB_MR_S c2
            WHERE     1 = 1
                  --and a.mtr_config_id = '8012945447' -- '3954601451'
                  AND a.INTEGRATION_ID = b.SP_METER_HISTORY_ID
                  AND a.INTEGRATION_ID = c.SP_METER_HISTORY_ID(+)
                  AND b.METER_READ_ID = b2.INTEGRATION_ID
                  AND c.METER_READ_ID = c2.INTEGRATION_ID(+)
                  AND b.SP_METER_EVENT_TYPE IN ('I')
                  AND c.SP_METER_EVENT_TYPE(+) IN ('R')) START_STOP_MR, --20131120 BN
                  */
                  wc_ccb_usage_bill_subquery_tmp START_STOP_MR,
          (SELECT SIBLING_ID, ACCOUNTING_DATE, CURRENT_AMOUNT, FT_TYPE_FLAG, bill_id
             FROM WC_CCB_FT_S
            WHERE FT_TYPE_FLAG IN ('BS', 'BX')) WC_CCB_FT_S_bill, --20131120 BN
          WC_CCB_TREND_AREA_S,                                   --20131120 BN
          WC_CCB_DEG_DAY_S                                       --20131120 BN
    WHERE     1 = 1
   --20131204 BN          AND WC_CCB_SA_TYPE_S.SA_TYPE_CODE = WC_CCB_SA_S.SA_TYPE_CODE
   --20131204 BN          AND WC_CCB_SA_TYPE_S.CIS_DIVISION = WC_CCB_SA_S.CIS_DIVISION
          --AND WC_CCB_ACCT_S.INTEGRATION_ID = '2577730000'   --'0188818788'
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_BILL_S.ACCOUNT_ID
          AND WC_CCB_BILL_S.INTEGRATION_ID = WC_CCB_BSEG_S.BILL_ID
          AND WC_CCB_BSEG_S.INTEGRATION_ID =
                 WC_CCB_BSEG_SQ_S_btu.BILL_SEGMENT_ID(+)
          AND WC_CCB_BSEG_S.INTEGRATION_ID =
                 WC_CCB_BSEG_SQ_S_therms.BILL_SEGMENT_ID(+)
          AND WC_CCB_BSEG_S.INTEGRATION_ID =
                 WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID
          AND WC_CCB_BSEG_READ_S.START_REGISTER_READ_ID =
                 WC_CCB_REG_READ_S_start.INTEGRATION_ID
          AND WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID =
                 WC_CCB_REG_READ_S_end.INTEGRATION_ID
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_SA_S.ACCOUNT_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SA_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_BSEG_S.SA_ID   --20131120 BN
          AND WC_CCB_SA_SP_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID
          AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID
          AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID =
                 WC_CCB_MTR_CONFIG_S.INTEGRATION_ID
          AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID =
                 WC_CCB_MR_S_start.START_METER_CONFIGURATION_ID
          AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID =
                 WC_CCB_MR_S_end.START_METER_CONFIGURATION_ID
          AND WC_CCB_REG_READ_S_start.START_METER_READ_ID =
                 WC_CCB_MR_S_start.INTEGRATION_ID
          AND WC_CCB_REG_READ_S_end.START_METER_READ_ID =
                 WC_CCB_MR_S_end.INTEGRATION_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_ratecls.SA_ID(+)
          AND WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE =
                 WC_CCB_CHAR_VAL_L_S_ratecls.CHARACTERISTIC_VALUE(+)
           AND WC_CCB_PREM_S.TREND_AREA_CODE =
                 WC_CCB_TREND_AREA_S.INTEGRATION_ID              --20131120 BN
          AND WC_CCB_TREND_AREA_S.TREND_AREA_CODE =
                 WC_CCB_DEG_DAY_S.TREND_AREA_CODE                --20131120 BN
          AND WC_CCB_DEG_DAY_S.DEGREE_DAY_DATE = WC_CCB_BILL_S.BILL_DATE --20131120 BN                                                                   ???????????????????????????????????????????
          AND WC_CCB_CHAR_VAL_L_S_ratecls.CHARACTERISTIC_TYPE_CODE(+) =
                 'RATECLS'
          AND WC_CCB_REG_READ_S_start.START_REGISTER_ID =
                 WC_CCB_REG_S_start.INTEGRATION_ID(+)
          AND WC_CCB_REG_READ_S_end.START_REGISTER_ID =
                 WC_CCB_REG_S_end.INTEGRATION_ID(+)
          AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID(+)
          AND WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID =
                 START_STOP_MR.SP_MTR_HIST_ID                    --20131120 bn
     -- 20131204 BN           AND WC_CCB_MR_S_start.START_READ_DATE >=
     -- 20131204 BN                  START_STOP_MR.START_MR_DATE                     --20131120 bn
    -- 20131204 BN            AND WC_CCB_MR_S_end.START_READ_DATE <= START_STOP_MR.END_MR_DATE --20131120 bn
           AND WC_CCB_MR_S_start.START_READ_DATE    BETWEEN START_STOP_MR.START_MR_DATE AND START_STOP_MR.END_MR_DATE  --20131204 BN

          AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_FT_S_bill.SIBLING_ID

       -- 20131204 BN       AND WC_CCB_SA_SP_S.START_DATE <= WC_CCB_MR_S_start.START_READ_DATE            --20131121 BN - per corey, to get the correct SA
       -- 20131204 BN       AND nvl(WC_CCB_SA_SP_S.STOP_DATE, to_date('12/31/2199','mm/dd/yyyy')) >= WC_CCB_MR_S_end.START_READ_DATE           --20131121 BN - per corey, to get the correct SA

                             and wc_ccb_mr_s_start.start_read_date between WC_CCB_SA_SP_S.START_DATE and nvl(WC_CCB_SA_SP_S.STOP_DATE, to_date('12/31/2199','mm/dd/yyyy'))   --20131204 BN


    --20131204 BN           AND WC_CCB_SA_S.SA_STATUS_FLAG <> '70' --20131121 BN - per corey we do not need cancelled SAs
    --20131204 BN           and revenue_class_code in ('C', 'CH','DC','DI','I','IH')  --20131121 bn - only bringing in commercial/industrial now (etl takes too long)
          UNION ALL --2ND Query returns all Reads that are not associated with Bills


   SELECT    WC_CCB_ACCT_S.INTEGRATION_ID
          || '::'
          || WC_CCB_REG_READ_S_start.INTEGRATION_ID
		  || '::'
		  || WC_CCB_SA_S.INTEGRATION_ID --20131205 bn - Needed because SPs can be attached to multiple SAs as in the example of sp id = 0095201065
 --         || '::'
     --     || WC_CCB_REG_READ_S_end.INTEGRATION_ID
             INTEGRATION_ID,
          3000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          WC_CCB_ACCT_S.INTEGRATION_ID ACCOUNT_CID,
          WC_CCB_PREM_S.INTEGRATION_ID PREMISE_CID,
          WC_CCB_ACCT_S.INTEGRATION_ID ACCOUNT_ID,
          NULL BILL_ID,              --  WC_CCB_BILL_S.INTEGRATION_ID BILL_ID,
          NULL BSEG_ID,               -- WC_CCB_BSEG_S.INTEGRATION_ID BSEG_ID,
          NULL BSEG_READ_ID, --WC_CCB_BSEG_READ_S.INTEGRATION_ID BSEG_READ_ID,
          WC_CCB_REG_READ_S_start.INTEGRATION_ID START_REG_READ_ID,
        null end_reg_read_id, --   WC_CCB_REG_READ_S_end.INTEGRATION_ID END_REG_READ_ID,
          WC_CCB_SA_S.INTEGRATION_ID SA_ID,
          WC_CCB_SA_SP_S.INTEGRATION_ID SA_SP_ID,
          WC_CCB_SP_S.INTEGRATION_ID SP_ID,
          WC_CCB_PREM_S.INTEGRATION_ID PREM_ID,
          WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID SP_MTR_HIST_ID,
          WC_CCB_MTR_CONFIG_S.INTEGRATION_ID MTR_CONFIG_ID,
          WC_CCB_MR_S_start.INTEGRATION_ID START_MR_ID,
          null end_mr_id, --WC_CCB_MR_S_end.INTEGRATION_ID END_MR_ID,
          --PERSON_NAME --join to account d
          WC_CCB_PREM_S.ADDRESS1,
          WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE RATE_CLASS_CODE,
          WC_CCB_CHAR_VAL_L_S_ratecls.DESCRIPTION RATE_CLASS_DESCRIPTION,
          WC_CCB_MTR_S.BADGE_NUMBER,
          WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE METER_SIZE,
          WC_CCB_MTR_CONFIG_S.EFFECTIVE_DATE,
          CASE
             WHEN WC_CCB_REG_S_start.UNIT_OF_MEASURE_CODE IN ('CCFC', 'MCFC')
             THEN
                'Corrected'
             WHEN WC_CCB_REG_S_start.UNIT_OF_MEASURE_CODE IN ('CCFU', 'MCFU')
             THEN
                'Uncorrected'
             ELSE
                'N/A'
          END
             START_CORRECTED_UNCOR_FLAG,
  /*        CASE
             WHEN WC_CCB_REG_S_end.UNIT_OF_MEASURE_CODE IN ('CCFC', 'MCFC')
             THEN
                'Corrected'
             WHEN WC_CCB_REG_S_end.UNIT_OF_MEASURE_CODE IN ('CCFU', 'MCFU')
             THEN
                'Uncorrected'
             ELSE
                'N/A'
          END */
          null   END_CORRECTED_UNCOR_FLAG,
          WC_CCB_MR_S_start.START_READ_DATE START_METER_READ_DATE,
          WC_CCB_MR_S_start.START_USE_ON_BILL_SW START_USE_ON_BILL_FLAG,
          WC_CCB_MR_S_start.START_READ_DATE START_MR_READ_DATE,
          null end_meter_read_date, --WC_CCB_MR_S_end.START_READ_DATE END_METER_READ_DATE,
          null end_use_on_bill_flag, --WC_CCB_MR_S_end.START_USE_ON_BILL_SW END_USE_ON_BILL_FLAG,
          null end_mr_read_date, --WC_CCB_MR_S_end.START_READ_DATE END_MR_READ_DATE,
          WC_CCB_REG_READ_S_start.START_REGISTER_READING
             START_REGISTER_READING,
          WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG START_READ_TYPE_CODE,
          CASE
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '20'
             THEN
                'No Read'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '30'
             THEN
                'System Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '35'
             THEN
                'Service Provider Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '40'
             THEN
                'Office Estimate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '45'
             THEN
                'System Prorate'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '50'
             THEN
                'Customer Read'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '60'
             THEN
                'Regular'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '70'
             THEN
                'Verified'
             WHEN WC_CCB_REG_READ_S_start.START_READ_TYPE_FLAG = '80'
             THEN
                'Billing Force'
             ELSE
                'N/A'
          END
             START_READ_TYPE_DESCRIPTION,
            null end_register_reading, --WC_CCB_REG_READ_S_end.START_REGISTER_READING END_REGISTER_READING,
            null end_read_type_code, --    WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG END_READ_TYPE_CODE,
      /*    CASE
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '20'
             THEN
                'No Read'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '30'
             THEN
                'System Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '35'
             THEN
                'Service Provider Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '40'
             THEN
                'Office Estimate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '45'
             THEN
                'System Prorate'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '50'
             THEN
                'Customer Read'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '60'
             THEN
                'Regular'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '70'
             THEN
                'Verified'
             WHEN WC_CCB_REG_READ_S_end.START_READ_TYPE_FLAG = '80'
             THEN
                'Billing Force'
             ELSE
                'N/A'
          END */
         null    END_READ_TYPE_DESCRIPTION,
          WC_CCB_REG_S_start.REGISTER_CONSTANT START_REGISTER_CONSTANT,
            null end_register_constant, --      WC_CCB_REG_S_end.REGISTER_CONSTANT END_REGISTER_CONSTANT,
          NULL BTU_FACTOR,                  --WC_CCB_BSEG_SQ_S_btu.BTU_FACTOR,
          NULL THERMS,                       --WC_CCB_BSEG_SQ_S_therms.THERMS,
          NULL BILL_DATE,                           --WC_CCB_BILL_S.BILL_DATE,
          NULL CURRENT_AMOUNT,              --WC_CCB_FT_S_bill.CURRENT_AMOUNT,
          NULL ACCOUNTING_DATE,            --WC_CCB_FT_S_bill.ACCOUNTING_DATE,
          NULL ACCOUNTING_PERIOD, --TO_CHAR(WC_CCB_FT_S_bill.ACCOUNTING_DATE, 'MON-YY') ACCOUNTING_PERIOD,
          WC_CCB_SP_MTR_HIST_S.INSTALLATION_CONSTANT,
            WC_CCB_SP_MTR_HIST_S.INSTALLATION_CONSTANT
          * WC_CCB_REG_S_start.REGISTER_CONSTANT
             PRESSURE_FACTOR,
          null degree_day, --WC_CCB_DEG_DAY_S.DEGREE_DAY,
          null DAYS_SINCE_LAST_BILL,               --???????????????????????????
          NULL FT_TYPE_FLAG,
          WC_CCB_MR_S_start.START_MR_SOURCE_CODE MR_SOURCE_CODE,    --20131204 BN
		  WC_CCB_REG_READ_S_start.START_REGISTER_ID REGISTER_ID, --20131204 BN
		  WC_CCB_REG_READ_S_start.START_REVIEW_HIGH_LOW_SW HIGH_LOW_FLAG,  --20131204 BN
		  NULL FT_BILL_ID,
		  'UNBILLED READS' LINE_TYPE --20131206 BN
     FROM WC_CCB_ACCT_S,
          -- WC_CCB_BILL_S,
          -- WC_CCB_BSEG_S,
          --   (SELECT BILL_SEGMENT_ID, BILLABLE_SERVICE_QUANTITY btu_factor-- SUM(WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY) BTU_FACTOR
          --       FROM WC_CCB_BSEG_SQ_S
          --       WHERE WC_CCB_BSEG_SQ_S.SQI_CODE = 'BTUFCT'
          --    --   GROUP BY BILL_SEGMENT_ID
          --   ) WC_CCB_BSEG_SQ_S_btu,
          --   (SELECT BILL_SEGMENT_ID, WC_CCB_BSEG_SQ_S.BILLABLE_SERVICE_QUANTITY THERMS
          --       FROM WC_CCB_BSEG_SQ_S
          --       WHERE WC_CCB_BSEG_SQ_S.UNIT_OF_MEASURE_CODE = 'TH'
          --      -- GROUP BY BILL_SEGMENT_ID
          --   ) WC_CCB_BSEG_SQ_S_therms,
          --   WC_CCB_BSEG_READ_S,

          WC_CCB_REG_READ_S WC_CCB_REG_READ_S_start,  --start register read id
     --     WC_CCB_REG_READ_S WC_CCB_REG_READ_S_end       --end register read id
        --                                         ,
 --20131204 BN       WC_CCB_SA_TYPE_S,
  --20131204 BN         WC_CCB_SA_S,

            wc_ccb_usage_bill_sa_sub_tmp           WC_CCB_SA_S,

          WC_CCB_SA_SP_S,
          WC_CCB_SP_S,
          WC_CCB_PREM_S,
          WC_CCB_SP_MTR_HIST_S,
          WC_CCB_MTR_CONFIG_S,
          WC_CCB_MR_S WC_CCB_MR_S_start,
 --         WC_CCB_MR_S WC_CCB_MR_S_end,
          (SELECT *
             FROM WC_CCB_SA_CHAR_S
            WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_SA_CHAR_S TMP
                           WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                  AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S_ratecls,
          WC_CCB_CHAR_VAL_L_S WC_CCB_CHAR_VAL_L_S_ratecls,
          WC_CCB_REG_S WC_CCB_REG_S_start,
 --         WC_CCB_REG_S WC_CCB_REG_S_end,
          (SELECT *
             FROM WC_CCB_MTR_CHAR_S
            WHERE     WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_MTR_CHAR_S TMP
                           WHERE     TMP.METER_ID =
                                        WC_CCB_MTR_CHAR_S.METER_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                  AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE') WC_CCB_MTR_CHAR_S,
          WC_CCB_MTR_S,
 /* 20131204 BN
          (SELECT a.INTEGRATION_ID SP_MTR_HIST_ID,
                  b2.START_READ_DATE start_mr_date,
                  NVL (c2.START_READ_DATE,
                       TO_DATE ('12/31/2199', 'mm/dd/yyyy'))
                     end_mr_date
             FROM WC_CCB_SP_MTR_HIST_S a,
                  WC_CCB_SP_MTR_EVT_S b,
                  WC_CCB_SP_MTR_EVT_S c,
                  WC_CCB_MR_S b2,
                  WC_CCB_MR_S c2
            WHERE     1 = 1
                  --and a.mtr_config_id = '8012945447' -- '3954601451'
                  AND a.INTEGRATION_ID = b.SP_METER_HISTORY_ID
                  AND a.INTEGRATION_ID = c.SP_METER_HISTORY_ID(+)
                  AND b.METER_READ_ID = b2.INTEGRATION_ID
                  AND c.METER_READ_ID = c2.INTEGRATION_ID(+)
                  AND b.SP_METER_EVENT_TYPE IN ('I')
                  AND c.SP_METER_EVENT_TYPE(+) IN ('R')) START_STOP_MR, --20131120 BN
                  */
                  wc_ccb_usage_bill_subquery_tmp START_STOP_MR
          --          (SELECT
          --              SIBLING_ID,
          --              ACCOUNTING_DATE,
          --              CURRENT_AMOUNT
          --           FROM
          --              WC_CCB_FT_S
          --           WHERE
          --              FT_TYPE_FLAG IN ('BS','BX'))   WC_CCB_FT_S_bill,        --20131120 BN

   --       WC_CCB_TREND_AREA_S,                                   --20131120 BN
   --       WC_CCB_DEG_DAY_S                                       --20131120 BN

                , WC_CCB_BSEG_READ_S
                , wc_ccb_bseg_read_s wc_ccb_bseg_read_s2
    WHERE     1 = 1
          --AND WC_CCB_ACCT_S.INTEGRATION_ID = '2577730000'   --'0188818788'
          --AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_BILL_S.ACCOUNT_ID
          --AND WC_CCB_BILL_S.INTEGRATION_ID = WC_CCB_BSEG_S.BILL_ID
          --AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_SQ_S_btu.BILL_SEGMENT_ID (+)
          --AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_SQ_S_therms.BILL_SEGMENT_ID (+)
          --AND WC_CCB_BSEG_S.INTEGRATION_ID = WC_CCB_BSEG_READ_S.BILL_SEGMENT_ID
          --AND WC_CCB_BSEG_READ_S.START_REGISTER_READ_ID = WC_CCB_REG_READ_S_start.INTEGRATION_ID
          --AND WC_CCB_BSEG_READ_S.END_REGISTER_READ_ID = WC_CCB_REG_READ_S_end.INTEGRATION_ID
   -- 20131204 BN         AND WC_CCB_SA_TYPE_S.SA_TYPE_CODE = WC_CCB_SA_S.SA_TYPE_CODE
   -- 20131204 BN         AND WC_CCB_SA_TYPE_S.CIS_DIVISION = WC_CCB_SA_S.CIS_DIVISION
          AND WC_CCB_REG_READ_S_start.INTEGRATION_ID = wc_ccb_bseg_read_s.start_register_read_id(+)
          and wc_ccb_bseg_read_s.integration_id is null
          AND WC_CCB_REG_READ_S_start.INTEGRATION_ID = wc_ccb_bseg_read_s2.end_register_read_id(+)
          and wc_ccb_bseg_read_s2.integration_id is null
  --        AND WC_CCB_REG_READ_S_end.INTEGRATION_ID NOT IN
       --          (SELECT START_REGISTER_READ_ID FROM WC_CCB_BSEG_READ_S)
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_SA_S.ACCOUNT_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SA_ID
          --       AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_BSEG_S.SA_ID  --20131120 BN
          AND WC_CCB_SA_SP_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID
          AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID
          AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID =
                 WC_CCB_MTR_CONFIG_S.INTEGRATION_ID
          AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID =
                 WC_CCB_MR_S_start.START_METER_CONFIGURATION_ID
   --       AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID =
--                 WC_CCB_MR_S_end.START_METER_CONFIGURATION_ID
          AND WC_CCB_REG_READ_S_start.START_METER_READ_ID =
                 WC_CCB_MR_S_start.INTEGRATION_ID
   --       AND WC_CCB_REG_READ_S_end.START_METER_READ_ID =
      --           WC_CCB_MR_S_end.INTEGRATION_ID
          AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_ratecls.SA_ID(+)
          AND WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE =
                 WC_CCB_CHAR_VAL_L_S_ratecls.CHARACTERISTIC_VALUE(+)
          AND WC_CCB_CHAR_VAL_L_S_ratecls.CHARACTERISTIC_TYPE_CODE(+) =
                 'RATECLS'
          AND WC_CCB_REG_READ_S_start.START_REGISTER_ID =
                 WC_CCB_REG_S_start.INTEGRATION_ID(+)
   --       AND WC_CCB_REG_READ_S_end.START_REGISTER_ID =
   --              WC_CCB_REG_S_end.INTEGRATION_ID(+)
          AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID(+)
          AND WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID =
                 START_STOP_MR.SP_MTR_HIST_ID                    --20131120 bn
   -- 20131204 BN              AND WC_CCB_MR_S_start.START_READ_DATE >=
   -- 20131204 BN                  START_STOP_MR.START_MR_DATE                     --20131120 bn
   -- 20131204 BN          AND WC_CCB_MR_S_start.START_READ_DATE <=
   -- 20131204 BN                 START_STOP_MR.END_MR_DATE                     --20131120 bn
       AND WC_CCB_MR_S_start.START_READ_DATE    BETWEEN START_STOP_MR.START_MR_DATE AND START_STOP_MR.END_MR_DATE  --20131204 BN
   -- 20131204 BN             AND WC_CCB_SA_SP_S.START_DATE <= WC_CCB_MR_S_start.START_READ_DATE            --20131121 BN - per corey, to get the correct SA
  -- 20131204 BN              AND nvl(WC_CCB_SA_SP_S.STOP_DATE, to_date('12/31/2199','mm/dd/yyyy')) >= WC_CCB_MR_S_start.START_READ_DATE           --20131121 BN - per corey, to get the correct SA
                   and wc_ccb_mr_s_start.start_read_date between WC_CCB_SA_SP_S.START_DATE and nvl(WC_CCB_SA_SP_S.STOP_DATE, to_date('12/31/2199','mm/dd/yyyy'))   --20131204 BN
 -- 20131204 BN         AND WC_CCB_SA_S.SA_STATUS_FLAG <> '70' --20131121 BN - per corey we do not need cancelled SAs
 -- 20131204 BN           and revenue_class_code in ('C', 'CH','DC','DI','I','IH')    --20131121 bn - only bringing in commercial/industrial now (etl takes too long)

          ;





--20131216 bn - for unbilled accounts report
--			  - originally created by Bob
--			  - Added Description column.

CREATE OR REPLACE VIEW "MDW"."WC_CCB_SA_TYPE_DS_V"
(
"INTEGRATION_ID",
"DATASOURCE_NUM_ID",
"W_INSERT_DT",
"W_UPDATE_DT",
"W_LOAD_NUMBER",
"CIS_DIVISION",
"SA_TYPE_CODE",
"BILL_PERIOD_CODE",
"LPC_CALC_ALGORITHM_CODE",
"GL_DIVISION",
"SERVICE_POINTS_REQUIRED_SW",
"DISTRIBUTION_CODE",
"PAYMENT_SEGMENT_TYPE_CODE",
"NSF_ADJUSTMENT_TYPE",
"SERVICE_TYPE_CODE",
"BILL_SEGMENT_TYPE_CODE",
"REVENUE_CLASS_CODE",
"DEBT_CLASS_CODE",
"RATE_REQUIRED_SW",
"RATE_SELECTION_DATE_FLAG",
"ALLOW_ESTIMATES_SW",
"DO_NOT_OVERPAY_SW",
"PAYMENT_PRIORITY_FLAG",
"MINIMUM_DAYS_FOR_BILLING",
"ELIGIBLE_FOR_BILLING_SW",
"CHAR_PREMISE_REQUIRED_SW",
"ONE_TIME_CHARGE_SW",
"START_OPTION_REQUIRED_SW",
"LATE_PAYMENT_CHARGE_SW",
"DISPLAY_AS_ALERT_SW",
"BILL_PRINT_PRIORITY_FLAG",
"GRAPH_UNIT_OF_MEASURE",
"USE_CALENDAR_BILLING",
"ANNIVERSARY_BILL_FREQ_CODE",
"SPECIAL_ROLE_FLAG",
"SA_TYPE_VERSION",
"ADJUSTMENT_TYPE_TRANSFER",
"ADJUSTMENT_TYPE_0",
"CIAC_REFUND_PROCESS_CODE",
"ADJUSTMENT_TYPE_SYNCH",
"TOTAL_BILL_AMOUNT",
"RECURRING_CHARGE_FLAG",
"RECURRING_CHARGE_FREQ_CODE",
"MAXIMUM_BILL_THRESHOLD",
"SUB_SA_SW",
"DEPOSIT_CLASS_CODE",
"ELIGIBLE_FOR_BUDGET_SW",
"WRITE_OFF_DEBT_CLASS_CODE",
"CIAC_SA_TYPE_SW",
"DELINQUENT_PAY_PRIORITY_FLAG",
"BILLING_PROCESSING_SEQUENCE",
"INITIAL_START_OPTION_DATE",
"LOAD_AR_DISTRIBUTION_CODE",
"OVERRIDE_INTEREST_FLAG",
"INTEREST_BILL_FACTOR",
"SA_RENEWAL_FLAG",
"RENEWAL_DAYS_BEFORE_EXP",
"NBB_ELIGIBILITY_FLAG",
"NBB_MONITOR_FLAG",
"RATE_SOURCE_FLAG",
"STOP_OPTION_FLAG",
"GL_DIVISION_CID",
"NSF_ADJUSTMENT_TYPE_CID",
"REVENUE_CLASS_CID",
"ADJUSTMENT_TYPE_TRANSFER_CID",
"ADJUSTMENT_TYPE_0_CID",
"ADJUSTMENT_TYPE_SYNCH_CID",
"DEPOSIT_CLASS_CID",
DESCRIPTION
)
AS

SELECT
WC_CCB_SA_TYPE_S.INTEGRATION_ID,
WC_CCB_SA_TYPE_S.DATASOURCE_NUM_ID,
WC_CCB_SA_TYPE_S.W_INSERT_DT,
WC_CCB_SA_TYPE_S.W_UPDATE_DT,
WC_CCB_SA_TYPE_S.W_LOAD_NUMBER,
WC_CCB_SA_TYPE_S.CIS_DIVISION,
WC_CCB_SA_TYPE_S.SA_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_PERIOD_CODE,
WC_CCB_SA_TYPE_S.LPC_CALC_ALGORITHM_CODE,
WC_CCB_SA_TYPE_S.GL_DIVISION,
WC_CCB_SA_TYPE_S.SERVICE_POINTS_REQUIRED_SW,
WC_CCB_SA_TYPE_S.DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.PAYMENT_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE,
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,
WC_CCB_SA_TYPE_S.BILL_SEGMENT_TYPE_CODE,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE,
WC_CCB_SA_TYPE_S.DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.RATE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.RATE_SELECTION_DATE_FLAG,
WC_CCB_SA_TYPE_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_TYPE_S.DO_NOT_OVERPAY_SW,
WC_CCB_SA_TYPE_S.PAYMENT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.MINIMUM_DAYS_FOR_BILLING,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BILLING_SW,
WC_CCB_SA_TYPE_S.CHAR_PREMISE_REQUIRED_SW,
WC_CCB_SA_TYPE_S.ONE_TIME_CHARGE_SW,
WC_CCB_SA_TYPE_S.START_OPTION_REQUIRED_SW,
WC_CCB_SA_TYPE_S.LATE_PAYMENT_CHARGE_SW,
WC_CCB_SA_TYPE_S.DISPLAY_AS_ALERT_SW,
WC_CCB_SA_TYPE_S.BILL_PRINT_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.GRAPH_UNIT_OF_MEASURE,
WC_CCB_SA_TYPE_S.USE_CALENDAR_BILLING,
WC_CCB_SA_TYPE_S.ANNIVERSARY_BILL_FREQ_CODE,
WC_CCB_SA_TYPE_S.SPECIAL_ROLE_FLAG,
WC_CCB_SA_TYPE_S.SA_TYPE_VERSION,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0,
WC_CCB_SA_TYPE_S.CIAC_REFUND_PROCESS_CODE,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH,
WC_CCB_SA_TYPE_S.TOTAL_BILL_AMOUNT,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FLAG,
WC_CCB_SA_TYPE_S.RECURRING_CHARGE_FREQ_CODE,
WC_CCB_SA_TYPE_S.MAXIMUM_BILL_THRESHOLD,
WC_CCB_SA_TYPE_S.SUB_SA_SW,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CODE,
WC_CCB_SA_TYPE_S.ELIGIBLE_FOR_BUDGET_SW,
WC_CCB_SA_TYPE_S.WRITE_OFF_DEBT_CLASS_CODE,
WC_CCB_SA_TYPE_S.CIAC_SA_TYPE_SW,
WC_CCB_SA_TYPE_S.DELINQUENT_PAY_PRIORITY_FLAG,
WC_CCB_SA_TYPE_S.BILLING_PROCESSING_SEQUENCE,
WC_CCB_SA_TYPE_S.INITIAL_START_OPTION_DATE,
WC_CCB_SA_TYPE_S.LOAD_AR_DISTRIBUTION_CODE,
WC_CCB_SA_TYPE_S.OVERRIDE_INTEREST_FLAG,
WC_CCB_SA_TYPE_S.INTEREST_BILL_FACTOR,
WC_CCB_SA_TYPE_S.SA_RENEWAL_FLAG,
WC_CCB_SA_TYPE_S.RENEWAL_DAYS_BEFORE_EXP,
WC_CCB_SA_TYPE_S.NBB_ELIGIBILITY_FLAG,
WC_CCB_SA_TYPE_S.NBB_MONITOR_FLAG,
WC_CCB_SA_TYPE_S.RATE_SOURCE_FLAG,
WC_CCB_SA_TYPE_S.STOP_OPTION_FLAG,
WC_CCB_SA_TYPE_S.GL_DIVISION_CID,
WC_CCB_SA_TYPE_S.NSF_ADJUSTMENT_TYPE_CID,
WC_CCB_SA_TYPE_S.REVENUE_CLASS_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_TRANSFER_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_0_CID,
WC_CCB_SA_TYPE_S.ADJUSTMENT_TYPE_SYNCH_CID,
WC_CCB_SA_TYPE_S.DEPOSIT_CLASS_CID,
WC_CCB_SA_TYPE_L_S.DESCRIPTION
FROM
 WC_CCB_SA_TYPE_S, WC_CCB_SA_TYPE_L_S
WHERE 1=1
	AND WC_CCB_SA_TYPE_S.INTEGRATION_ID = WC_CCB_SA_TYPE_L_S.INTEGRATION_ID
;

--20131220 bn - for count of active meters report
--20131230 bn - new column Town Code needed for active meters report.
--20140122 BN - new column Town Code Description needed for active meters report.
--20151216 bn - new request to get site from meter char [ 71470 ]
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_CUR_METERS_INSTAL_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT_ID,
   SA_ID,
   START_DATE,
   END_DATE,
   CIS_DIVISION,
   ADHOC_CHARACTERISTIC_VALUE,
   CHARACTERISTIC_TYPE_CODE,
   CHARACTERISTIC_VALUE,
   ACTIVE_INACTIVE_STATUS,
   METER_ID,
   REMOVAL_DATE,
   METER_START_DATE,
   TOWN_CODE, --20131230 BN - new requirement to add Town Code.
   TOWN_CODE_DESCRIPTION, --20140122 BN - new requirement to add Town Code Description
   meter_site --20151216 bn - new request to get site from meter char [ 71470 ]
)
AS 
   SELECT distinct     --20140523 BN - This view was rejecting records due to an SA being turned on twice for the same SP.  Doing a distinct should fix the issue.
          WC_CCB_SA_S.INTEGRATION_ID || '::' || WC_CCB_MTR_S.INTEGRATION_ID || '::' || WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID INTEGRATION_ID,
          2000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_SA_S.INTEGRATION_ID SA_ID,
          WC_CCB_SA_S.START_DATE,
          NVL (WC_CCB_SA_S.END_DATE, TO_DATE ('12/31/2050', 'MM/DD/YYYY'))
             END_DATE,
          WC_CCB_SA_S.CIS_DIVISION,
          WC_CCB_MTR_CHAR_S.ADHOC_CHARACTERISTIC_VALUE,
          WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE,
          WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE,
          CASE
             WHEN WC_CCB_SA_S.SA_STATUS_FLAG IN ('10', '20', '30', '50')
             THEN
                'Active'
             ELSE
                'Inactive'
          END
             ACTIVE_INACTIVE_STATUS,
          WC_CCB_MTR_S.INTEGRATION_ID METER_ID,
          NVL(WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE, TO_DATE ('12/31/2050', 'MM/DD/YYYY')),
          WC_CCB_MR_S.START_READ_DATE METER_START_DATE, --20131226 BN - When the SP was installed
          WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE TOWN_CODE, --20131230 BN - new requirement to add Town Code.
          PREM_CHAR_VAL.DESCRIPTION TOWN_CODE_DESCRIPTION,  --20140122 BN - new requirement to add Town Code Description
          
          WC_CCB_CHAR_VAL_L_S_meter_site.description meter_site --20151216 bn - new request to get site from meter char [ 71470 ]
     FROM wc_ccb_mtr_s,
          wc_ccb_mtr_config_s,
          wc_ccb_sp_mtr_hist_s,
          wc_ccb_sa_sp_s,
          wc_ccb_sa_s,
          WC_CCB_SP_S,
          (SELECT *
             FROM WC_CCB_MTR_CHAR_S
            WHERE     WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_MTR_CHAR_S TMP
                           WHERE     TMP.METER_ID =
                                        WC_CCB_MTR_CHAR_S.METER_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                  AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE') WC_CCB_MTR_CHAR_S,

                  (SELECT * FROM WC_CCB_SP_MTR_EVT_S WHERE SP_METER_EVENT_TYPE = 'I') WC_CCB_SP_MTR_EVT_S,      --20131226 BN
                  WC_CCB_MR_S, --20131226 BN

          (SELECT * FROM WC_CCB_PREM_CHAR_S
                       WHERE WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_PREM_CHAR_S TMP
                                                                 WHERE TMP.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID
                                                                       AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD')
                            AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
            ) WC_CCB_PREM_CHAR_S,  --20131230 bn - new requirement to have Town Code.

        WC_CCB_CHAR_VAL_L_S PREM_CHAR_VAL, --20140122 BN - new requirement to add Town Code Description
        
       (SELECT *
             FROM WC_CCB_MTR_CHAR_S
            WHERE     WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_MTR_CHAR_S TMP
                           WHERE     TMP.METER_ID =
                                        WC_CCB_MTR_CHAR_S.METER_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'CM-MTSTE')
                  AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'CM-MTSTE') WC_CCB_MTR_CHAR_S_meter_site,
        WC_CCB_CHAR_VAL_L_S WC_CCB_CHAR_VAL_L_S_meter_site

    WHERE     1 = 1
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CONFIG_S.METER_ID
          AND WC_CCB_MTR_CONFIG_S.INTEGRATION_ID =
                 WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID
          --AND WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE IS NULL --Only want meters that are installed
          AND WC_CCB_SP_MTR_HIST_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID
          and wc_ccb_sp_s.premise_id = WC_CCB_PREM_CHAR_S.PREMISE_ID (+) --20131230 bn - new requirement to have Town Code.
          AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SP_ID(+)
          AND WC_CCB_SA_SP_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID(+)
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID(+)
          AND WC_CCB_SP_MTR_HIST_S.INTEGRATION_ID = WC_CCB_SP_MTR_EVT_S.SP_METER_HISTORY_ID (+)
          AND WC_CCB_SP_MTR_EVT_S.METER_READ_ID = WC_CCB_MR_S.INTEGRATION_ID (+)
          AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE = PREM_CHAR_VAL.CHARACTERISTIC_VALUE (+)  --20140122 bn
          AND PREM_CHAR_VAL.CHARACTERISTIC_TYPE_CODE (+) = 'TWNCD'    --20140122 bn
          
          --20151216 bn - new request to get site from meter char [ 71470 ]
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S_meter_site.METER_ID(+)
          and WC_CCB_MTR_CHAR_S_meter_site.characteristic_value = WC_CCB_CHAR_VAL_L_S_meter_site.characteristic_value (+)
          and WC_CCB_CHAR_VAL_L_S_meter_site.characteristic_type_code (+) = 'CM-MTSTE'
          ;


--20140321 BN - for suspense account payments report
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_LOOKUP_VAL_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   EFF_STATUS,
   FIELD_NAME,
   FIELD_VALUE,
   OWNER_FLAG,
   JAVA_VALUE_NAME,
   LOOKUP_VAL_VERSION,
   DESCRIPTION,
   LONG_DESCRIPTION,
   DESCRIPTION_OVERRIDE,
   LANGUAGE_CODE,
   LANGUAGE_OWNER_FLAG,
   LOOKUP_VAL_L_VERSION
)
AS
   SELECT "INTEGRATION_ID",
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "EFF_STATUS",
          "FIELD_NAME",
          "FIELD_VALUE",
          "OWNER_FLAG",
          "JAVA_VALUE_NAME",
          "LOOKUP_VAL_VERSION",
          "DESCRIPTION",
          "LONG_DESCRIPTION",
          "DESCRIPTION_OVERRIDE",
          "LANGUAGE_CODE",
          "LANGUAGE_OWNER_FLAG",
          "LOOKUP_VAL_L_VERSION"
     FROM WC_CCB_LOOKUP_VAL_S;


--20140328 bn - for trial balance by sa type report
--20140401 bn - Updated view per new requirements approved by laura s.
--20140623 BN - Adding accounting period for AR Balance by SA Type report
--20140724 bn - changing accounting_date to post_to_gl_on_or_after_date per meeting today with keri and tim
/*  --20160607 bn - no longer used... logic is in procedure
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_FT_GL_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SERVICE_TYPE_CODE,
   SA_TYPE_CODE,
   GL_ACCOUNT,
   BATCH_NUMBER,
   FT_TYPE_FLAG,
   USE_IN_TRIAL_BALANCE_FLAG,
   AMOUNT,
   ACCOUNTING_PERIOD, --20140623 BN - FOR AR BALANCE BY SA TYPE REPORT
   SA_TYPE_CID --20140623 BN - FOR AR BALANCE BY SA TYPE REPORT
)
AS
     SELECT    SA_TYPE_CODE
			|| '::' || CIS_DIVISION			--20150602 BN - Adding for MGE WS3 go-livev
            || '::'
			
            || GL_ACCOUNT
            || '::'
            || BATCH_NUMBER
            || '::'
            || FT_TYPE_FLAG
            || '::'
            || to_char(post_to_gl_on_or_after_date, 'MON-YY')  --20140724 bn - modifying to transfer to gl date per meeting with keri/tim --20140623 bn - added accounting period to integration id 
               INTEGRATION_ID,
            3000 DATASOURCE_NUM_ID,
            SYSDATE W_INSERT_DT,
            SYSDATE W_UPDATE_DT,
            0 W_LOAD_NUMBER,
            SERVICE_TYPE_CODE,
            SA_TYPE_CODE,
            GL_ACCOUNT,
            BATCH_NUMBER,
            FT_TYPE_FLAG,*/
            --20140401 bn - per discussion with laura s, this logic is no longer needed
            /*      CASE
                           WHEN SUBSTR (GL_ACCOUNT, 5, 1) IN ('4', '7', '8', '9') THEN 'N'
                          ELSE 'Y'
                     END */
     /*       'Y'  USE_IN_TRIAL_BALANCE_FLAG,
            SUM (AMOUNT) AMOUNT,
            to_char(post_to_gl_on_or_after_date, 'MON-YY'),   --20140724 bn - modifying to transfer to gl date per meeting with keri/tim  --20140623  BN - FOR AR BALANCE BY SA TYPE REPORT
            SA_TYPE_CODE || '::' || CIS_DIVISION SA_TYPE_CID --20140623 BN - FOR AR BALANCE BY SA TYPE REPORT
       FROM WC_CCB_FT_GL_F
   GROUP BY SERVICE_TYPE_CODE,
            SA_TYPE_CODE,
            GL_ACCOUNT,
            BATCH_NUMBER,
            FT_TYPE_FLAG,
            to_char(post_to_gl_on_or_after_date, 'MON-YY'),   --20140724 bn - modifying to transfer to gl date per meeting with keri/tim  --20140623 BN - FOR AR BALANCE BY SA TYPE REPORT
            SA_TYPE_CODE || '::' || CIS_DIVISION --20140623 BN - FOR AR BALANCE BY SA TYPE REPORT*/
          --20140401 bn - per discussion with laura s, this logic is no longer needed
          /*  CASE
               WHEN SUBSTR (GL_ACCOUNT, 5, 1) IN ('4', '7', '8', '9')
               THEN
                  'N'
               ELSE
                  'Y'
            END */
       --     ;






/*
--20140404 BN - New table for Inactive Meters but also for Standardized tables
CREATE OR REPLACE VIEW WC_CCB_SA_DS_V
(
INTEGRATION_ID,
DATASOURCE_NUM_ID,
W_INSERT_DT,
W_UPDATE_DT,
W_LOAD_NUMBER,
CIS_DIVISION,
SA_TYPE_CODE,
SA_ID,
START_OPTION_CODE,
START_DATE,
SA_STATUS_FLAG,
ACCOUNT_ID,
END_DATE,
OLD_ACCOUNT_ID,
CUSTOMER_READ_FLAG,
ALLOW_ESTIMATES_SW,
SIC_CODE,
CHARACTERISTIC_PREMISE_ID,
TOTAL_TO_BILL_AMOUNT,
CURRENCY_CODE,
SA_VERSION,
SA_RELATIONSHIP_ID,
START_REASON_FLAG,
STOP_REASON_FLAG,
START_REQUESTED_BY,
STOP_REQUESTED_BY,
MAXIMUM_BILL_THRESHOLD_AMOUNT,
DEPOSIT_INTEREST_CALC_DATE,
CIAC_REVIEW_DATE,
BUSINESS_ACTIVITY_DESCRIPTION,
IB_SA_CUTOFF_TIME,
IB_SA_START_DAY_OPTION,
ENROLLMENT_ID,
SPECIAL_USAGE_FLAG,
PROPOSAL_SA_STATUS_FLAG,
PROPOSAL_DECLINE_REASON_CODE,
PROPOSAL_SA_ID,
NUMBER_OF_PAYMENT_PERIODS,
NBB_RECOMMENDATION_RULE,
EXPIRATION_DATE,
RENEWAL_DATE,
NBB_AUTOPAY_FLAG,
SA_DATA_AREA,
RATE_CLASS_CODE,
RATE_CLASS_DESCRIPTION,
LEGACY_ACCOUNT_ID,
CONTRACT_NUMBER,
CONTRACT_EFFECTIVE_DATE
)
AS
SELECT
WC_CCB_SA_S.INTEGRATION_ID,
WC_CCB_SA_S.DATASOURCE_NUM_ID,
WC_CCB_SA_S.W_INSERT_DT,
WC_CCB_SA_S.W_UPDATE_DT,
WC_CCB_SA_S.W_LOAD_NUMBER,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.SA_ID,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE RATE_CLASS_CODE,
WC_CCB_CHAR_VAL_L_S.DESCRIPTION RATE_CLASS_DESCRIPTION,
WC_CCB_SA_CHAR_S_legacct.ADHOC_CHARACTERISTIC_VALUE LEGACY_ACCOUNT_ID,
WC_CCB_SA_CHAR_S_contract_num.ADHOC_CHARACTERISTIC_VALUE CONTRACT_NUMBER,
TRUNC (WC_CCB_SA_CHAR_S_contract_num.EFFECTIVE_DATE) CONTRACT_EFFECTIVE_DATE
FROM
    WC_CCB_SA_S,
	(SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S_ratecls,
	(select * from wc_ccb_char_val_l_s where CHARACTERISTIC_TYPE_CODE = 'RATECLS') wc_ccb_char_val_l_s,
	(SELECT * FROM WC_CCB_SA_CHAR_S
	 WHERE CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
		AND EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
								WHERE TMP.CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
								AND TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID)
	) WC_CCB_SA_CHAR_S_legacct,
	(SELECT * FROM WC_CCB_SA_CHAR_S
     WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                    AND TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT')
        AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT'
    ) WC_CCB_SA_CHAR_S_contract_num
WHERE 1=1
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_ratecls.SA_ID (+)
	AND WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE = wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE (+)
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_legacct.SA_ID (+)
	AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_contract_num.SA_ID (+)
;

*/ 


--20170227 BN - UPDATED PER VIKAS CHANGE


  CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_SA_DS_V" ("INTEGRATION_ID", "DATASOURCE_NUM_ID", "W_INSERT_DT", "W_UPDATE_DT", "W_LOAD_NUMBER", "CIS_DIVISION", "SA_TYPE_CODE", "SA_ID", "START_OPTION_CODE", "START_DATE", "SA_STATUS_FLAG", "ACCOUNT_ID", "END_DATE", "OLD_ACCOUNT_ID", "CUSTOMER_READ_FLAG", "ALLOW_ESTIMATES_SW", "SIC_CODE", "CHARACTERISTIC_PREMISE_ID", "TOTAL_TO_BILL_AMOUNT", "CURRENCY_CODE", "SA_VERSION", "SA_RELATIONSHIP_ID", "START_REASON_FLAG", "STOP_REASON_FLAG", "START_REQUESTED_BY", "STOP_REQUESTED_BY", "MAXIMUM_BILL_THRESHOLD_AMOUNT", "DEPOSIT_INTEREST_CALC_DATE", "CIAC_REVIEW_DATE", "BUSINESS_ACTIVITY_DESCRIPTION", "IB_SA_CUTOFF_TIME", "IB_SA_START_DAY_OPTION", "ENROLLMENT_ID", "SPECIAL_USAGE_FLAG", "PROPOSAL_SA_STATUS_FLAG", "PROPOSAL_DECLINE_REASON_CODE", "PROPOSAL_SA_ID", "NUMBER_OF_PAYMENT_PERIODS", "NBB_RECOMMENDATION_RULE", "EXPIRATION_DATE", "RENEWAL_DATE", "NBB_AUTOPAY_FLAG", "SA_DATA_AREA", "SA_TYPE_CD", "SERVICE_TYPE_CODE", "RATE_CLASS_CODE", "RATE_CLASS_DESCRIPTION", "LEGACY_ACCOUNT_ID", "CONTRACT_NUMBER", "CONTRACT_EFFECTIVE_DATE") AS 
  SELECT
WC_CCB_SA_S.INTEGRATION_ID,
WC_CCB_SA_S.DATASOURCE_NUM_ID,
WC_CCB_SA_S.W_INSERT_DT,
WC_CCB_SA_S.W_UPDATE_DT,
WC_CCB_SA_S.W_LOAD_NUMBER,
WC_CCB_SA_S.CIS_DIVISION,
WC_CCB_SA_S.SA_TYPE_CODE,
WC_CCB_SA_S.SA_ID,
WC_CCB_SA_S.START_OPTION_CODE,
WC_CCB_SA_S.START_DATE,
WC_CCB_SA_S.SA_STATUS_FLAG,
WC_CCB_SA_S.ACCOUNT_ID,
WC_CCB_SA_S.END_DATE,
WC_CCB_SA_S.OLD_ACCOUNT_ID,
WC_CCB_SA_S.CUSTOMER_READ_FLAG,
WC_CCB_SA_S.ALLOW_ESTIMATES_SW,
WC_CCB_SA_S.SIC_CODE,
WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID,
WC_CCB_SA_S.TOTAL_TO_BILL_AMOUNT,
WC_CCB_SA_S.CURRENCY_CODE,
WC_CCB_SA_S.SA_VERSION,
WC_CCB_SA_S.SA_RELATIONSHIP_ID,
WC_CCB_SA_S.START_REASON_FLAG,
WC_CCB_SA_S.STOP_REASON_FLAG,
WC_CCB_SA_S.START_REQUESTED_BY,
WC_CCB_SA_S.STOP_REQUESTED_BY,
WC_CCB_SA_S.MAXIMUM_BILL_THRESHOLD_AMOUNT,
WC_CCB_SA_S.DEPOSIT_INTEREST_CALC_DATE,
WC_CCB_SA_S.CIAC_REVIEW_DATE,
WC_CCB_SA_S.BUSINESS_ACTIVITY_DESCRIPTION,
WC_CCB_SA_S.IB_SA_CUTOFF_TIME,
WC_CCB_SA_S.IB_SA_START_DAY_OPTION,
WC_CCB_SA_S.ENROLLMENT_ID,
WC_CCB_SA_S.SPECIAL_USAGE_FLAG,
WC_CCB_SA_S.PROPOSAL_SA_STATUS_FLAG,
WC_CCB_SA_S.PROPOSAL_DECLINE_REASON_CODE,
WC_CCB_SA_S.PROPOSAL_SA_ID,
WC_CCB_SA_S.NUMBER_OF_PAYMENT_PERIODS,
WC_CCB_SA_S.NBB_RECOMMENDATION_RULE,
WC_CCB_SA_S.EXPIRATION_DATE,
WC_CCB_SA_S.RENEWAL_DATE,
WC_CCB_SA_S.NBB_AUTOPAY_FLAG,
WC_CCB_SA_S.SA_DATA_AREA,
WC_CCB_SA_TYPE_S.SA_TYPE_CODE SA_TYPE_CD,                                    -- Added Column for Accounts Without an Active report - 90013 --08/31/2016
WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,                                          --Added Column for Accounts Without an Active report - 90013 --08/31/2016
WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE RATE_CLASS_CODE,
WC_CCB_CHAR_VAL_L_S.DESCRIPTION RATE_CLASS_DESCRIPTION,
WC_CCB_SA_CHAR_S_legacct.ADHOC_CHARACTERISTIC_VALUE LEGACY_ACCOUNT_ID,
WC_CCB_SA_CHAR_S_contract_num.ADHOC_CHARACTERISTIC_VALUE CONTRACT_NUMBER,
TRUNC (WC_CCB_SA_CHAR_S_contract_num.EFFECTIVE_DATE) CONTRACT_EFFECTIVE_DATE
FROM
    WC_CCB_SA_S,
    (SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS')
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S_ratecls,
    (select * from wc_ccb_char_val_l_s where CHARACTERISTIC_TYPE_CODE = 'RATECLS') wc_ccb_char_val_l_s,
    (SELECT * FROM WC_CCB_SA_CHAR_S
     WHERE CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
        AND EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                WHERE TMP.CHARACTERISTIC_TYPE_CODE = 'LEGACCT'
                                AND TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID)
    ) WC_CCB_SA_CHAR_S_legacct,
    (SELECT * FROM WC_CCB_SA_CHAR_S
     WHERE WC_CCB_SA_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SA_CHAR_S TMP
                                                WHERE TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                                    AND TMP.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT')
        AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TRNSCNRT'
    ) WC_CCB_SA_CHAR_S_contract_num,
    WC_CCB_SA_TYPE_S
WHERE 1=1
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_ratecls.SA_ID (+)
    AND WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE = wc_ccb_char_val_l_s.CHARACTERISTIC_VALUE (+)
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_legacct.SA_ID (+)
    AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_contract_num.SA_ID (+)
    AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE                      ----Added Column for Accounts Without an Active report - 90013 --08/31/2016
    AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION
;



--20140404 BN - New view that will source all Inactive SPs (Meters)
--20150113 bn - For MGE WS3 - Adding CIS Division
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_INACTIVE_METERS_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   METER_SIZE,
   METER_LOCATION_CODE,
   SERVICE_ADDRESS,
   CITY,
   STATE,
   ZIP_CODE,
   TOWN,
   GRID,
   OFFICE,
   CUSTOMER_NAME,
   PREMISE_ID,
   STOP_DATE,
   START_DATE,
   SA_ID,
   SP_ID,
   cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
)
AS
   SELECT CI_SA_SP.SA_ID || '::' || CI_SA_SP.SP_ID INTEGRATION_ID,
          3000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          WC_CCB_MTR_CHAR_S.CHARACTERISTIC_VALUE AS METER_SIZE,
          WC_CCB_SP_S.METER_LOCATION_CODE,
          WC_CCB_PREM_S.ADDRESS1 AS SERVICE_ADDRESS,
          WC_CCB_PREM_S.CITY,
          WC_CCB_PREM_S.STATE,
          WC_CCB_PREM_S.POSTAL AS ZIP_CODE,
          WC_CCB_PREM_CHAR_S.TOWN,
          WC_CCB_PREM_GEO_S.GEOGRAPHIC_VALUE AS GRID,
          CI_PREM_CHAR_OFF.OFFICE,
          WC_CCB_PER_NAME_S.PERSON_NAME AS CUSTOMER_NAME,
          WC_CCB_PREM_S.PREMISE_ID,
          CI_SA_SP.STOP_DATE,
          CI_SA_SP.START_DATE,
		  CI_SA_SP.SA_ID,
		  CI_SA_SP.SP_ID,
		  wc_ccb_sa_s.cis_division --20150113 bn - For MGE WS3 - Adding CIS Division
     FROM WC_CCB_SP_S,
          WC_CCB_SA_S,
          WC_CCB_MTR_S,
          (SELECT *
             FROM WC_CCB_MTR_CHAR_S
            WHERE     WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_MTR_CHAR_S TMP
                           WHERE     TMP.METER_ID =
                                        WC_CCB_MTR_CHAR_S.METER_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                  AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE') WC_CCB_MTR_CHAR_S,
          (SELECT *
             FROM WC_CCB_SA_SP_S
            WHERE WC_CCB_SA_SP_S.START_DATE =
                     (SELECT MAX (TMP.START_DATE)
                        FROM WC_CCB_SA_SP_S TMP
                       WHERE TMP.SP_ID = WC_CCB_SA_SP_S.SP_ID)) CI_SA_SP, --to get the most recent Starting of an SP
          WC_CCB_ACCT_S,
          WC_CCB_ACCT_PER_S,
          WC_CCB_PREM_S,
          (SELECT WC_CCB_PREM_CHAR_S.PREMISE_ID,
                  WC_CCB_CHAR_VAL_L_S.DESCRIPTION AS TOWN
             FROM WC_CCB_PREM_CHAR_S, WC_CCB_CHAR_VAL_L_S
            WHERE     1 = 1
                  AND WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_TYPE_CODE =
                         WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE
                  AND WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE =
                         WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE(+)
                  AND WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_PREM_CHAR_S TMP
                           WHERE     TMP.PREMISE_ID =
                                        WC_CCB_PREM_CHAR_S.PREMISE_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD')
                  AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD') WC_CCB_PREM_CHAR_S,
          (SELECT WC_CCB_PREM_CHAR_S.PREMISE_ID,
                  WC_CCB_CHAR_VAL_L_S.DESCRIPTION AS OFFICE
             FROM WC_CCB_PREM_CHAR_S, WC_CCB_CHAR_VAL_L_S
            WHERE     1 = 1
                  AND WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_TYPE_CODE =
                         WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE
                  AND WC_CCB_CHAR_VAL_L_S.CHARACTERISTIC_VALUE =
                         WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE(+)
                  AND WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE =
                         (SELECT MAX (TMP.EFFECTIVE_DATE)
                            FROM WC_CCB_PREM_CHAR_S TMP
                           WHERE     TMP.PREMISE_ID =
                                        WC_CCB_PREM_CHAR_S.PREMISE_ID
                                 AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC')
                  AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOC') CI_PREM_CHAR_OFF,
          WC_CCB_PREM_GEO_S,
          WC_CCB_PER_S,
          WC_CCB_PER_NAME_S,
          --     CI_PER_PHONE,
          WC_CCB_SP_MTR_HIST_S,
          WC_CCB_MTR_CONFIG_S
    WHERE     1 = 1
          AND CI_SA_SP.SA_ID = WC_CCB_SA_S.INTEGRATION_ID(+)
          AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCT_S.INTEGRATION_ID(+)
          AND WC_CCB_ACCT_S.INTEGRATION_ID = WC_CCB_ACCT_PER_S.ACCOUNT_ID(+)
          AND WC_CCB_ACCT_PER_S.MAIN_CUSTOMER_FLAG(+) = 'Y'
          AND WC_CCB_ACCT_PER_S.PERSON_ID = WC_CCB_PER_S.INTEGRATION_ID(+)
          AND WC_CCB_PER_S.INTEGRATION_ID = WC_CCB_PER_NAME_S.PERSON_ID(+)
          AND WC_CCB_PER_NAME_S.PRIMARY_NAME_FLAG(+) = 'Y'
          --   AND CI_PER.PER_ID = CI_PER_PHONE.PER_ID

          AND CI_SA_SP.SP_ID = WC_CCB_SP_S.INTEGRATION_ID(+)
          AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_GEO_S.PREMISE_ID(+)
          AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID(+)
          AND WC_CCB_PREM_S.INTEGRATION_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID(+)
          AND WC_CCB_PREM_S.INTEGRATION_ID = CI_PREM_CHAR_OFF.PREMISE_ID(+)
          AND WC_CCB_SP_S.INTEGRATION_ID = WC_CCB_SP_MTR_HIST_S.SP_ID(+)
          AND WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID =
                 WC_CCB_MTR_CONFIG_S.INTEGRATION_ID(+)
          AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID(+)
          AND WC_CCB_MTR_S.INTEGRATION_ID = WC_CCB_MTR_CHAR_S.METER_ID(+)
          AND WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE IS NULL   --20140411 bn - making this inner join so we only get the records have meters
          AND WC_CCB_PREM_GEO_S.GEOGRAPHIC_TYPE_CODE(+) = 'GRIDCODE' -- Grid Code
          --    AND CI_SP.MTR_LOC_CD = 'OUT'                          -- Outside Meters        --20140404 bn - want to include all locdations
          AND CI_SA_SP.STOP_DATE IS NOT NULL       --Only want inactive meters
;



--20140411 bn - Old view but must have been missed in scripts.
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SC_USER_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCESS_GROUP_CODE,
   DASHBOARD_WIDTH,
   DISPLAY_ALL_PREMISES_FLAG,
   DISPLAY_PROFILE_CODE,
   USER_EMAIL_ID,
   FAVORITES_PROFILE_USER_ID,
   FIRST_NAME,
   HOME_PAGE_CODE,
   LANGUAGE_CODE,
   LAST_NAME,
   DATA_OWNER,
   PORTALS_PROFILE_USER_ID,
   TO_DO_ENTRY_AGE_DAYS1,
   TO_DO_ENTRY_AGE_DAYS2,
   TENDER_SOURCE_CODE,
   USER_ID,
   USER_TYPE_FLAG,
   USER_VERSION
)
AS
   SELECT INTEGRATION_ID,
          DATASOURCE_NUM_ID,
          W_INSERT_DT,
          W_UPDATE_DT,
          W_LOAD_NUMBER,
          ACCESS_GROUP_CODE,
          DASHBOARD_WIDTH,
          DISPLAY_ALL_PREMISES_FLAG,
          DISPLAY_PROFILE_CODE,
          USER_EMAIL_ID,
          FAVORITES_PROFILE_USER_ID,
          FIRST_NAME,
          HOME_PAGE_CODE,
          LANGUAGE_CODE,
          LAST_NAME,
          DATA_OWNER,
          PORTALS_PROFILE_USER_ID,
          TO_DO_ENTRY_AGE_DAYS1,
          TO_DO_ENTRY_AGE_DAYS2,
          TENDER_SOURCE_CODE,
          USER_ID,
          USER_TYPE_FLAG,
          USER_VERSION
     FROM WC_CCB_SC_USER_S
    WHERE 1 = 1;


--20140414 bn - Bob created but just now adding to documentation
CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_LOG_FS_V"
(
"INTEGRATION_ID",
"DATASOURCE_NUM_ID",
"W_INSERT_DT",
"W_UPDATE_DT",
"W_LOAD_NUMBER",
"FA_ID",
"SEQUENCE",
"LOG_TYPE",
"LOG_USER_ID",
"LOG_VERSION",
"LOG_DETAILS",
"LOG_DTTM",
"LOG_DESCRIPTION",
"ACTIVITY_TYPE_CODE",
"FA_CANCEL_REASON_CODE",
"SERVICE_POINT_ID",
"FA_PRIORITY_FLAG",
"FA_CREATED_BY",
"SCHEDULE_DATE",
"FA_STATUS_FLAG",
"ELIGIBLE_FOR_DISPATCH_SW",
"DISPATCH_GROUP_CODE",
"FIELD_ORDER_ID",
"CREATE_DATE",
"TEST_SELECTION_ID",
"USER_ID",
"INSTRUCTIONS",
"LONG_DESCRIPTION",
"FA_VERSION",
"APPT_PERIOD_ID",
"FA_EXTERNAL_ID",
"FA_INTERMEDIATE_STATUS_FLAG",
"FA_RESCHEDULE_REASON_CODE",
"FA_DATA_AREA",
"SCHED_AM",
"SCHED_PM",
"LOG_AM",
"LOG_PM"
)
AS

SELECT
WC_CCB_FA_LOG_S.INTEGRATION_ID,
WC_CCB_FA_LOG_S.DATASOURCE_NUM_ID,
WC_CCB_FA_LOG_S.W_INSERT_DT,
WC_CCB_FA_LOG_S.W_UPDATE_DT,
WC_CCB_FA_LOG_S.W_LOAD_NUMBER,
WC_CCB_FA_LOG_S.FA_ID,
WC_CCB_FA_LOG_S.SEQUENCE,
WC_CCB_FA_LOG_S.LOG_TYPE,
WC_CCB_FA_LOG_S.USER_ID,
WC_CCB_FA_LOG_S.VERSION,
WC_CCB_FA_LOG_S.DETAILS,
WC_CCB_FA_LOG_S.LOG_DTTM,
(SELECT
  DESCRIPTION
  FROM WC_CCB_LOOKUP_VAL_S
  WHERE FIELD_NAME = 'FA_LOG_TYP_FLG'
  AND FIELD_VALUE  = WC_CCB_FA_LOG_S.LOG_TYPE
) LOG_DESCRIPTION,
WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
WC_CCB_FA_S.SERVICE_POINT_ID,
WC_CCB_FA_S.FA_PRIORITY_FLAG,
WC_CCB_FA_S.FA_CREATED_BY,
WC_CCB_FA_S.SCHEDULE_DATE,
WC_CCB_FA_S.FA_STATUS_FLAG,
WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
WC_CCB_FA_S.DISPATCH_GROUP_CODE,
WC_CCB_FA_S.FIELD_ORDER_ID,
WC_CCB_FA_S.CREATE_DATE,
WC_CCB_FA_S.TEST_SELECTION_ID,
WC_CCB_FA_S.USER_ID,
WC_CCB_FA_S.INSTRUCTIONS,
WC_CCB_FA_S.LONG_DESCRIPTION,
WC_CCB_FA_S.FA_VERSION,
WC_CCB_FA_S.APPT_PERIOD_ID,
WC_CCB_FA_S.FA_EXTERNAL_ID,
WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
WC_CCB_FA_S.FA_DATA_AREA,

(CASE
  WHEN TO_CHAR (WC_CCB_FA_S.SCHEDULE_DATE, 'HH24:MI:SS') BETWEEN '00:00:00' AND '12:00:00'
  THEN 1
  ELSE 0
  END
) SCHED_AM,

(CASE
  WHEN TO_CHAR (WC_CCB_FA_S.SCHEDULE_DATE, 'HH24:MI:SS') BETWEEN '12:00:01' AND '17:00:00'
  THEN 1
  ELSE 0
  END
) SCHED_PM,

(CASE
  WHEN TO_CHAR (WC_CCB_FA_LOG_S.LOG_DTTM, 'HH24:MI:SS') BETWEEN '00:00:00' AND '12:00:00'
  THEN 1
  ELSE 0
  END
)LOG_AM,

(CASE
  WHEN TO_CHAR (WC_CCB_FA_LOG_S.LOG_DTTM, 'HH24:MI:SS') BETWEEN '12:00:01' AND '17:00:00'
  THEN 1
  ELSE 0
  END
)LOG_PM

FROM
 WC_CCB_FA_LOG_S,
 WC_CCB_FA_S

WHERE 1=1
AND WC_CCB_FA_LOG_S.FA_ID = WC_CCB_FA_S.FA_ID

;


--20140414 RK Lcoked Meter Showing Consumption
CREATE OR REPLACE VIEW WC_CCB_MTR_CONFIG_S_V
AS
(SELECT
       WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID ||'::' ||WC_CCB_SP_MTR_HIST_S.SP_MTR_HIST_ID INTEGRATION_ID,
       3000 DATASOURCE_NUM_ID,
       SYSDATE W_INSERT_DT,
       SYSDATE W_UPDATE_DT,
       0 W_LOAD_NUMBER,
       WC_CCB_MTR_CONFIG_S.EFFECTIVE_DATE,
       WC_CCB_MTR_CONFIG_S.METER_CONFIG_DATA_AREA,
       WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID,
       WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE,
       WC_CCB_MTR_CONFIG_S.METER_ID,
       WC_CCB_MTR_CONFIG_S.MTR_CONFIG_VERSION,
       WC_CCB_SP_MTR_HIST_S.SP_MTR_HIST_ID,
       WC_CCB_SP_MTR_HIST_S.SP_ID,
       WC_CCB_SP_MTR_HIST_S.REMOVAL_MR_ID,
       WC_CCB_MR_S.START_READ_DATE INSTALL_DATE,
       NVL(WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE,TO_DATE('01/9999','MM/YYYY')) REMOVAL_DATE,
       WC_CCB_SP_MTR_HIST_S.VERSION,
       WC_CCB_SP_MTR_HIST_S.INSTALLATION_CONSTANT,
	   WC_CCB_SP_MTR_HIST_S.SP_ID SP_CID,
	   WC_CCB_MTR_CONFIG_S.METER_ID MTR_CID,
	   WC_CCB_SP_S.PREMISE_ID PREMISE_CID,
	   WC_CCB_MTR_S.METER_TYPE_CODE MTR_TYPE_CID
  FROM WC_CCB_MTR_CONFIG_S,
       WC_CCB_SP_MTR_HIST_S,
       WC_CCB_SP_MTR_EVT_S,
       WC_CCB_MR_S,
	   WC_CCB_SP_S,
	   WC_CCB_MTR_S
   WHERE 1 = 1
         AND WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID = WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID(+)
         AND WC_CCB_SP_MTR_HIST_S.SP_MTR_HIST_ID = WC_CCB_SP_MTR_EVT_S.SP_METER_HISTORY_ID(+)
         AND WC_CCB_SP_MTR_EVT_S.METER_READ_ID = WC_CCB_MR_S.START_METER_READ_ID(+)
         AND WC_CCB_SP_MTR_EVT_S.SP_METER_EVENT_TYPE(+) = 'I'
		 AND WC_CCB_SP_MTR_HIST_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID (+)
		 AND WC_CCB_MTR_CONFIG_S.METER_ID = WC_CCB_MTR_S.INTEGRATION_ID (+)
   ) ;

   --20140414 RK Lcoked Meter Showing Consumption
   --20160713 BN - ADDED MAX LOG DATE FOR COMPLETED COLLECTION FIELD CALLS REPORT
CREATE OR REPLACE VIEW WC_CCB_FA_S_V
AS
SELECT WC_CCB_FA_S.INTEGRATION_ID,
       WC_CCB_FA_S.DATASOURCE_NUM_ID,
       WC_CCB_FA_S.W_INSERT_DT,
       WC_CCB_FA_S.W_UPDATE_DT,
       WC_CCB_FA_S.W_LOAD_NUMBER,
       WC_CCB_FA_S.FA_ID,
       WC_CCB_FA_S.ACTIVITY_TYPE_CODE,
       WC_CCB_FA_S.FA_CANCEL_REASON_CODE,
       WC_CCB_FA_S.SERVICE_POINT_ID,
       WC_CCB_FA_S.FA_PRIORITY_FLAG,
       WC_CCB_FA_S.FA_CREATED_BY,
       WC_CCB_FA_S.SCHEDULE_DATE,
       WC_CCB_FA_S.FA_STATUS_FLAG,
       WC_CCB_FA_S.ELIGIBLE_FOR_DISPATCH_SW,
       WC_CCB_FA_S.DISPATCH_GROUP_CODE,
       WC_CCB_FA_S.FIELD_ORDER_ID,
       WC_CCB_FA_S.CREATE_DATE,
       WC_CCB_FA_S.TEST_SELECTION_ID,
       WC_CCB_FA_S.USER_ID,
       WC_CCB_FA_S.INSTRUCTIONS,
       WC_CCB_FA_S.LONG_DESCRIPTION,
       WC_CCB_FA_S.FA_VERSION,
       WC_CCB_FA_S.APPT_PERIOD_ID,
       WC_CCB_FA_S.FA_EXTERNAL_ID,
       WC_CCB_FA_S.FA_INTERMEDIATE_STATUS_FLAG,
       WC_CCB_FA_S.FA_RESCHEDULE_REASON_CODE,
       WC_CCB_FA_S.FA_DATA_AREA,
       WC_CCB_SP_S.PREMISE_CID,
       NULL SEV_EVT_FA_CID,
		DECODE(trim(WC_CCB_FA_S.FA_STATUS_FLAG),'C','Completed','P','Pending','H','Held','X','Canceled') FA_STATUS_FLAG_DESCRIPTION, --20141006 BN - FOR ACI STATUS
	   WC_CCB_FA_F_PRELOAD_TMP1.MAX_LOG_DTTM MAX_LOG_DATE --20160713 BN
  FROM WC_CCB_FA_S,
       WC_CCB_SP_S,
	   WC_CCB_FA_F_PRELOAD_TMP1 --20160713 BN - FOR COMPLETED COLLECTION FIELD CALLS REPORT
 WHERE WC_CCB_FA_S.SERVICE_POINT_ID = WC_CCB_SP_S.SP_ID(+)
	AND WC_CCB_FA_S.INTEGRATION_ID = WC_CCB_FA_F_PRELOAD_TMP1.FA_ID (+) --20160713 BN - FOR COMPLETED COLLECTION FIELD CALLS REPORT
	;


--20140514 BN - FOR BTU CYCLE REPORT
CREATE OR REPLACE VIEW WC_CCB_BILL_CYCLE_SCHED_DS_V
AS
select
    START_CYC.INTEGRATION_ID,
    START_CYC.DATASOURCE_NUM_ID,
    START_CYC.W_INSERT_DT W_INSERT_DT,
    START_CYC.W_UPDATE_DT W_UPDATE_DT,
    START_CYC.W_LOAD_NUMBER W_LOAD_NUMBER,
    start_cyc.bill_cycle_code BILL_CYCLE_CODE,
    START_CYC.WINDOW_START_DATE,
    START_CYC.WINDOW_END_DATE,
    START_CYC.ACCOUNTING_DATE,
    START_CYC.ESTIMATE_DATE,
    START_CYC.FREEZE_AND_COMPLETE_SW,
    START_CYC.BILL_CYCLE_VERSION,
    start_cyc.WINDOW_START_DATE FROM_DATE,
    end_cyc.WINDOW_START_DATE TO_DATE,
    TO_CHAR(end_cyc.WINDOW_START_DATE, 'MON-YY') TO_PERIOD,
    btu_grp_1.val btu_grp_1_value,      --These values are the 30 day btu factors that were effective of the to_date - 1.
    btu_grp_2.val btu_grp_2_value,
    btu_grp_3.val btu_grp_3_value,
    btu_grp_4.val btu_grp_4_value
from
    WC_CCB_BILL_CYC_SCH_S start_cyc,
    WC_CCB_BILL_CYC_SCH_S end_cyc,
    (select * from wc_ccb_bf_val_s where bill_factor_code = 'BTUFCT' and characteristic_value = '01') btu_grp_1,
    (select * from wc_ccb_bf_val_s where bill_factor_code = 'BTUFCT' and characteristic_value = '02') btu_grp_2,
    (select * from wc_ccb_bf_val_s where bill_factor_code = 'BTUFCT' and characteristic_value = '03') btu_grp_3,
    (select * from wc_ccb_bf_val_s where bill_factor_code = 'BTUFCT' and characteristic_value = '04') btu_grp_4
where 1=1
    and start_cyc.bill_cycle_code = end_cyc.bill_cycle_code
    and start_cyc.WINDOW_START_DATE =
        (select max(t.WINDOW_START_DATE) from WC_CCB_BILL_CYC_SCH_S t
         where t.bill_cycle_code = end_cyc.bill_cycle_code
            and t.WINDOW_START_DATE < end_cyc.WINDOW_START_DATE)
    and btu_grp_1.effective_date =
        (select max(t.effective_date) from wc_ccb_bf_val_s t
         where t.bill_factor_code = 'BTUFCT'
            and t.characteristic_value = '01'
            and t.effective_date < end_cyc.WINDOW_START_DATE)
    and btu_grp_2.effective_date =
        (select max(t.effective_date) from wc_ccb_bf_val_s t
         where t.bill_factor_code = 'BTUFCT'
            and t.characteristic_value = '02'
            and t.effective_date < end_cyc.WINDOW_START_DATE)
    and btu_grp_3.effective_date =
        (select max(t.effective_date) from wc_ccb_bf_val_s t
         where t.bill_factor_code = 'BTUFCT'
            and t.characteristic_value = '03'
            and t.effective_date < end_cyc.WINDOW_START_DATE)
    and btu_grp_4.effective_date =
        (select max(t.effective_date) from wc_ccb_bf_val_s t
         where t.bill_factor_code = 'BTUFCT'
            and t.characteristic_value = '04'
            and t.effective_date < end_cyc.WINDOW_START_DATE)
    --and start_cyc.bill_cyc_cd = '01'
    --and start_cyc.WINDOW_START_DATE > to_date('1/1/2014','mm/dd/yyyy')
;



--20140514 BN - FOR SEVERANCE DAILY REPORT
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SEV_EVENT_TYPE_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SEVERANCE_EVENT_TYPE_CODE,
   EVENT_TYPE,
   CONTACT_CLASS_CODE,
   CONTACT_TYPE_CODE,
   AFFECT_CREDIT_RATING_BY,
   AFFECT_CASH_ONLY_SCORE_BY,
   MOS_AFFECTING_CREDIT_RATING,
   VERSION,
   CUSTOMER_EVENT,
   SEVERANCE_EVENT_ALG_CODE,
   LANGUAGE_CODE,
   DESCRIPTION,
   LANGUAGE_VERSION,
   LONG_DESCRIPTION
)
AS
   SELECT "INTEGRATION_ID",
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "SEVERANCE_EVENT_TYPE_CODE",
          "EVENT_TYPE",
          "CONTACT_CLASS_CODE",
          "CONTACT_TYPE_CODE",
          "AFFECT_CREDIT_RATING_BY",
          "AFFECT_CASH_ONLY_SCORE_BY",
          "MOS_AFFECTING_CREDIT_RATING",
          "VERSION",
          "CUSTOMER_EVENT",
          "SEVERANCE_EVENT_ALG_CODE",
          "LANGUAGE_CODE",
          "DESCRIPTION",
          "LANGUAGE_VERSION",
          "LONG_DESCRIPTION"
     FROM WC_CCB_SEV_EVT_TYPE_S;


--20140514 BN - FOR SEVERANCE DAILY REPORT
CREATE OR REPLACE VIEW WC_CCB_SEV_PROC_EVENT_FS_V
AS
SELECT
  WC_CCB_SEV_EVT_S.INTEGRATION_ID,
  WC_CCB_SEV_EVT_S.DATASOURCE_NUM_ID,
  SYSDATE W_INSERT_DT,
  SYSDATE W_UPDATE_DT,
  WC_CCB_SEV_EVT_S.W_LOAD_NUMBER,
  WC_CCB_SEV_EVT_S.SEVERANCE_PROCESS_ID,
  WC_CCB_SEV_EVT_S.EVENT_SEQUENCE,
  WC_CCB_SEV_EVT_S.SEVERANCE_EVENT_STATUS,
  WC_CCB_SEV_EVT_S.SEV_EVENT_TYPE_CODE,
  WC_CCB_SEV_EVT_S.DEP_ON_OTHER_EVENTS,
  WC_CCB_SEV_EVT_S.TRIGGER_DATE,
  WC_CCB_SEV_EVT_S.DAYS_AFTER_PREV_RESPONSE,
  WC_CCB_SEV_EVT_S.COMPLETION_DATE,
  WC_CCB_SEV_EVT_S.TRIGGER_BUSINESS_PROCESS,
  WC_CCB_SEV_EVT_S.VERSION SEV_EVENT_TYPE_VERSION,

  WC_CCB_SEV_PROC_S.INTEGRATION_ID SEV_PROC_INTEGRATION_ID,
  WC_CCB_SEV_PROC_S.COLLECTION_PROCESS_ID,
  WC_CCB_SEV_PROC_S.MESSAGE_CATEGORY,
  WC_CCB_SEV_PROC_S.SEVERANCE_STATUS,
  WC_CCB_SEV_PROC_S.EVENT_SEQUENCE SEV_PROC_EVENT_SEQUENCE,
  WC_CCB_SEV_PROC_S.SEVERANCE_STATUS_REASON,
  WC_CCB_SEV_PROC_S.SA_ID,
  WC_CCB_SEV_PROC_S.CURRENCY_CODE,
  WC_CCB_SEV_PROC_S.PRIORITY,
  WC_CCB_SEV_PROC_S.SEVERANCE_PROCESS_TMPLATE_CODE,
  WC_CCB_SEV_PROC_S.CREATE_DTTM,
  WC_CCB_SEV_PROC_S.ARREARSS_DATE ARREARS_DATE,
  WC_CCB_SEV_PROC_S.ARREARS_AMOUNT,
  WC_CCB_SEV_PROC_S.TRIGGER_BUSINESS_PROCESS SEV_PROC_TRIG_BUS_PROC,
  WC_CCB_SEV_PROC_S.MESSAGE_NUMBER,
  WC_CCB_SEV_PROC_S.COMMENTS,
  WC_CCB_SEV_PROC_S.VERSION SEV_PROC_VERSION,
  
  WC_CCB_SEV_PROC_S.SA_ID SA_CID,
  WC_CCB_SA_S.CHARACTERISTIC_PREMISE_ID PREMISE_CID,
  WC_CCB_SEV_EVT_S.SEV_EVENT_TYPE_CODE SEV_EVENT_TYPE_CID,
  WC_CCB_SA_S.ACCOUNT_CID ACCOUNT_CID
  
FROM WC_CCB_SEV_EVT_S, WC_CCB_SEV_PROC_S, WC_CCB_SA_S
WHERE 1=1
    AND WC_CCB_SEV_EVT_S.SEVERANCE_PROCESS_ID = WC_CCB_SEV_PROC_S.INTEGRATION_ID
    AND WC_CCB_SEV_PROC_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
;    



--20140527 BN - FOR ACCOUNTS WRITTEN OFF REPORT
--20140604 BN - Adding logic to get original SA
--20140609 bn - Changed the logic for Amount.  We will now get the CURRENT AMOUNT from the Adjustment.
--			  - Changed the INTEGRATION_ID to include the Original SA ID.
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_WO_PROC_SA_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   WO_PROC_ID,
   SA_ID,
   WRITE_OFF_SA_STATUS,
   ARREARS_AMOUNT,
   CURRENCY_CODE,
   WO_PROC_SA_VERSION,
   WO_PROC_TMPL_CD,
   WO_STATUS_FLG,
   WO_CNTL_CD,
   WO_STAT_RSN_FLG,
   ACCT_ID,
   CRIT_PRIO_FLG,
   CRE_DTTM,
   TRIGGER_BP_SW,
   MESSAGE_CAT_NBR,
   MESSAGE_NBR,
   COMMENTS,
   WO_PROC_VERSION,
   ACCOUNT_CID,
   SA_CID,
   ORIGINAL_SA_CID,
   ORIGINAL_SA_ID,
   CURRENT_AMOUNT
)
AS
   SELECT WC_CCB_WO_PROC_SA_S.INTEGRATION_ID || '::' || ORIG_SA.ORIG_SA_ID  INTEGRATION_ID,
          WC_CCB_WO_PROC_SA_S.DATASOURCE_NUM_ID,
          WC_CCB_WO_PROC_SA_S.W_INSERT_DT,
          WC_CCB_WO_PROC_SA_S.W_UPDATE_DT,
          WC_CCB_WO_PROC_SA_S.W_LOAD_NUMBER,
          WC_CCB_WO_PROC_SA_S.WO_PROC_ID,
          WC_CCB_WO_PROC_SA_S.SA_ID,
          WC_CCB_WO_PROC_SA_S.WRITE_OFF_SA_STATUS,
          WC_CCB_WO_PROC_SA_S.ARREARS_AMOUNT,
          WC_CCB_WO_PROC_SA_S.CURRENCY_CODE,
          WC_CCB_WO_PROC_SA_S.VERSION WO_PROC_SA_VERSION,
          WC_CCB_WO_PROC_S.WO_PROC_TMPL_CD,
          WC_CCB_WO_PROC_S.WO_STATUS_FLG,
          WC_CCB_WO_PROC_S.WO_CNTL_CD,
          WC_CCB_WO_PROC_S.WO_STAT_RSN_FLG,
          WC_CCB_WO_PROC_S.ACCT_ID,
          WC_CCB_WO_PROC_S.CRIT_PRIO_FLG,
          WC_CCB_WO_PROC_S.CRE_DTTM,
          WC_CCB_WO_PROC_S.TRIGGER_BP_SW,
          WC_CCB_WO_PROC_S.MESSAGE_CAT_NBR,
          WC_CCB_WO_PROC_S.MESSAGE_NBR,
          WC_CCB_WO_PROC_S.COMMENTS,
          WC_CCB_WO_PROC_S.VERSION WO_PROC_VERSION,
          WC_CCB_WO_PROC_S.ACCT_ID ACCOUNT_CID,
          WC_CCB_WO_PROC_SA_S.SA_ID SA_CID,
          ORIG_SA.ORIG_SA_ID ORIGINAL_SA_CID,
          ORIG_SA.ORIG_SA_ID ORIGINAL_SA_ID,
          orig_sa.current_amount        --20140609 bn - new logic to remove duplicates
     FROM WC_CCB_WO_PROC_SA_S,
          WC_CCB_WO_PROC_S,
          --The below subquery gives us the original SA details.  This is only valid for ccb data though.  Converted data will not have the original SA.
          --20140604 bn - added distinct to below because the same values were being returned multiple times
          (SELECT SUM(wc_ccb_adj_s.current_amount) CURRENT_AMOUNT,
                  wc_ccb_sa_s.sa_id wo_sa_id,
                  wc_ccb_adj_s_old_sa.sa_id orig_sa_id
             FROM wc_ccb_sa_s,
                  wc_ccb_adj_s,
                  wc_ccb_adj_s wc_ccb_adj_s_old_sa,
                  wc_ccb_sa_type_s
            /*,  --20140604 bn - we will get this info from SA_D
                (SELECT *
                       FROM wc_ccb_sa_char_s
                      WHERE     wc_ccb_sa_char_s.effective_date =
                                   (SELECT MAX (TMP.effective_date)
                                      FROM wc_ccb_sa_char_s TMP
                                     WHERE     TMP.SA_ID = wc_ccb_sa_char_s.SA_ID
                                           AND TMP.characteristic_type_code = 'RATECLS')
                            AND wc_ccb_sa_char_s.characteristic_type_code = 'RATECLS') wc_ccb_sa_char_s,
            (select * from wc_ccb_char_val_l_s where characteristic_type_code = 'RATECLS') CHAR_VAL ,
            wc_ccb_sa_s orig_sa_s*/
            WHERE     1 = 1
                  AND wc_ccb_sa_s.sa_type_code =
                         wc_ccb_sa_type_s.sa_type_code
                  AND wc_ccb_sa_s.cis_division =
                         wc_ccb_sa_type_s.cis_division
                  AND wc_ccb_sa_type_s.special_role_flag = 'WO'
                  AND wc_ccb_adj_s.adjustment_type_code <> 'BENEFIT' --Do not want to include this adjustment type (per Corey)
                  AND wc_ccb_sa_s.INTEGRATION_ID = wc_ccb_adj_s.sa_id
                  AND wc_ccb_adj_s.transfer_adjustment_id =
                         wc_ccb_adj_s_old_sa.adjustment_id --AND wc_ccb_adj_s_old_sa.SA_ID = wc_ccb_sa_char_s.SA_ID (+)
 --AND wc_ccb_sa_char_s.characteristic_value = CHAR_VAL.characteristic_value(+)
                             --and wc_ccb_adj_s_old_sa.sa_id = orig_sa_s.sa_id
            GROUP BY wc_ccb_sa_s.sa_id,
                  wc_ccb_adj_s_old_sa.sa_id 
          ) orig_sa
    WHERE     WC_CCB_WO_PROC_SA_S.WO_PROC_ID =
                 WC_CCB_WO_PROC_S.INTEGRATION_ID
          AND WC_CCB_WO_PROC_SA_S.SA_ID = ORIG_SA.WO_SA_ID(+) --20140604 BN - Original SA logic
;
		
-- 20140404 RK Locked Meter Showing Consumption
CREATE OR REPLACE VIEW WC_CCB_LCKD_MTR_CONSMPT_SFS_V
AS
SELECT 3000 DATASOURCE_NUM_ID,
       d.fa_id INTEGRATION_ID,
       SYSDATE W_INSERT_DT,
       SYSDATE W_UPDATE_DT,
       0 W_LOAD_NUMBER,
       d.fa_id,
       NVL (d.sp_id, 0) sp_cid,
       NVL (d.PREMISE_ID, 0) premise_cid,
       NVL (meter_id, 0) meter_cid,
       NVL (CASE_ID, 0) CASE_ID,
       NVL (CASE_INIT_DATE, FA_CREATED_DATE) CASE_INIT_DATE,
       NVL (CASE_FA_CREATED_DATE, FA_CREATED_DATE) CASE_FA_CREATED_DATE,
       NVL (case_log_fa_id, 0) case_log_fa_id,
       SCHEDULE_DATE,
       FA_STATUS_FLAG,
       SP_SRC_STATUS_FLG,
       SP_disconnect_LOC_LEFT,
       SP_COMPLETION_DATE
  FROM (SELECT a.fa_id,
               a.service_point_id sp_id,
               b.PREMISE_ID,
               a.create_date FA_CREATED_DATE,
               SCHEDULE_DATE,
               FA_STATUS_FLAG,
               SP_SRC_STATUS_FLG,
               SP_DISCONNECT_LOC_LEFT,   
               SP_COMPLETION_DATE
          FROM WC_CCB_FA_S a,
               WC_CCB_SP_S b,
               (SELECT A.FA_ID,
                       A.DETAILS SP_SRC_STATUS_FLG,
                       B.DETAILS SP_DISCONNECT_LOC_LEFT,
                       G.LOG_DTTM SP_COMPLETION_DATE
                  FROM (SELECT FA_ID, LOG_TYPE, DETAILS
                          FROM WC_CCB_FA_LOG_S
                         WHERE LOG_TYPE = 'SPLF') A,
                       (SELECT FA_ID, LOG_TYPE, DETAILS
                          FROM WC_CCB_FA_LOG_S
                         WHERE LOG_TYPE = 'SPDL') B,
                       (SELECT FA_ID, LOG_TYPE, LOG_DTTM
                          FROM WC_CCB_FA_LOG_S
                         WHERE LOG_TYPE = 'EXCM') G
                 WHERE A.FA_ID = B.FA_ID(+)
                   AND A.FA_ID = G.FA_ID(+)) c
         WHERE     a.service_point_id = b.SP_ID
               AND A.FA_ID = C.FA_ID(+)
               AND ACTIVITY_TYPE_CODE IN ('A-LMSC', 'A-LMSCD')) D,
       (SELECT A.CASE_ID,
               A.PREMISE_ID,
               CASE_INIT_DATE,
               CASE_FA_CREATED_DATE,
               case_log_fa_id
          FROM WC_CCB_CASE_S A,
               (SELECT DISTINCT case_id, LOG_DTTM CASE_INIT_DATE
                  FROM WC_CCB_CASE_LOG_S
                 WHERE     case_type_code = 'CMLOCK'
                       AND case_status_code = 'INITIATE') B,
               (SELECT case_id,
                       LOG_DTTM CASE_FA_CREATED_DATE,
                       characteristic_value_fk1 case_log_fa_id
                  FROM WC_CCB_CASE_LOG_S
                 WHERE case_type_code = 'CMLOCK' AND CHAR_TYPE_CODE = 'CI_FA') C
         WHERE A.CASE_ID = B.CASE_ID AND B.CASE_ID = C.CASE_ID) C,
       WC_CCB_MTR_CONFIG_S_V e
 WHERE     d.PREMISE_ID = c.PREMISE_ID(+)
       AND D.fa_id = c.case_log_fa_id(+)
       AND d.sp_id = e.sp_id(+)
       AND d.FA_CREATED_DATE BETWEEN e.install_date(+) AND e.REMOVAL_DATE(+);
		
		
		
		
--20140605 BN -  for Collection Agency Placement report.
  CREATE OR REPLACE VIEW WC_CCB_COLL_AGY_DS_V AS SELECT * FROM WC_CCB_COLL_AGY_S;	
  
--20140605 BN -  for Collection Agency Placement report. 
CREATE OR REPLACE VIEW WC_CCB_COLL_AGY_REF_HIST_FS_V
AS
SELECT
    WC_CCB_COLL_AGY_HIS_S.INTEGRATION_ID,
    WC_CCB_COLL_AGY_HIS_S.DATASOURCE_NUM_ID,
    WC_CCB_COLL_AGY_HIS_S.W_INSERT_DT,
    WC_CCB_COLL_AGY_HIS_S.W_UPDATE_DT,
    WC_CCB_COLL_AGY_HIS_S.W_LOAD_NUMBER,
    WC_CCB_COLL_AGY_HIS_S.COLL_AGY_REF_ID,
    WC_CCB_COLL_AGY_HIS_S.SEQ_NUM,
    WC_CCB_COLL_AGY_HIS_S.CRE_DT CREATION_DATE,
    WC_CCB_COLL_AGY_HIS_S.REF_AMT REFERRAL_AMOUNT,
    WC_CCB_COLL_AGY_HIS_S.REF_HIST_RSN_FLG REF_HIST_REASON_FLAG,
    WC_CCB_COLL_AGY_HIS_S.SYS_GEN_SW SYSTEM_GENERATED_FLAG,
    WC_CCB_COLL_AGY_HIS_S.TRIGGER_BP_SW TRIGGER_BP_FLAG,
    WC_CCB_COLL_AGY_HIS_S.BATCH_CD BATCH_CODE,
    WC_CCB_COLL_AGY_HIS_S.BATCH_NBR BATCH_NUMBER,
    WC_CCB_COLL_AGY_HIS_S.VERSION COLL_AGY_HIS_VERSION,
    WC_CCB_COLL_AGY_REF_S.COLLECTION_AGENCY_REFERRAL_ID,
    WC_CCB_COLL_AGY_REF_S.ACCT_ID ACCOUNT_ID,
    WC_CCB_COLL_AGY_REF_S.START_DATE,
    WC_CCB_COLL_AGY_REF_S.COLLECTION_AGENCY_CODE,
    WC_CCB_COLL_AGY_REF_S.REFERRAL_STATUS_FLAG,
    WC_CCB_COLL_AGY_REF_S.WO_PROC_ID,
    WC_CCB_COLL_AGY_REF_S.EVENT_SEQUENCE,
    WC_CCB_COLL_AGY_REF_S.USER_ID,
    WC_CCB_COLL_AGY_REF_S.COMMENTS,
    WC_CCB_COLL_AGY_REF_S.VERSION COLL_AGY_REF_VERSION,
    WC_CCB_COLL_AGY_REF_S.ACCT_ID ACCOUNT_CID,
    WC_CCB_COLL_AGY_REF_S.COLLECTION_AGENCY_CODE COLL_AGY_CID
FROM
    WC_CCB_COLL_AGY_HIS_S,
    WC_CCB_COLL_AGY_REF_S
WHERE
    WC_CCB_COLL_AGY_HIS_S.COLL_AGY_REF_ID = WC_CCB_COLL_AGY_REF_S.INTEGRATION_ID(+)
;  
  
  
  
--20140605 BN - FOR AMR METER INSTALL REPORT
CREATE OR REPLACE VIEW WC_CCB_METER_TYPE_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   METER_TYPE_CODE,
   SERVICE_TYPE_CODE,
   MTR_TYPE_VERSION,
   ALLOW_DUP_BADGE_FLAG,
   PPM_FLAG,
   CONTROLLOER_FLAG,
   TRACK_LOC_FLAG,
   DESCRIPTION,
   MTR_TYPE_L_VERSION,
   AMR_FLAG
)
AS
   SELECT WC_CCB_MTR_TYPE_S.INTEGRATION_ID,
          WC_CCB_MTR_TYPE_S.DATASOURCE_NUM_ID,
          WC_CCB_MTR_TYPE_S.W_INSERT_DT,
          WC_CCB_MTR_TYPE_S.W_UPDATE_DT,
          WC_CCB_MTR_TYPE_S.W_LOAD_NUMBER,
          WC_CCB_MTR_TYPE_S.METER_TYPE_CODE,
          WC_CCB_MTR_TYPE_S.SERVICE_TYPE_CODE,
          WC_CCB_MTR_TYPE_S.MTR_TYPE_VERSION,
          WC_CCB_MTR_TYPE_S.ALLOW_DUP_BADGE_FLAG,
          WC_CCB_MTR_TYPE_S.PPM_FLAG,
          WC_CCB_MTR_TYPE_S.CONTROLLOER_FLAG,
          WC_CCB_MTR_TYPE_S.TRACK_LOC_FLAG,
          WC_CCB_MTR_TYPE_S.DESCRIPTION,
          WC_CCB_MTR_TYPE_S.MTR_TYPE_L_VERSION,
          (CASE WHEN EQ.INTEGRATION_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AMR_FLAG
     FROM WC_CCB_MTR_TYPE_S,
        (SELECT * FROM WC_CCB_MTR_TYPE_EQ_S WHERE ITEM_TYPE_CODE_EQ = 'AMR') EQ
     WHERE
        WC_CCB_MTR_TYPE_S.METER_TYPE_CODE = EQ.METER_TYPE_CODE (+)
        ;
  
  
--20140702 bn - For Grunsky report (Dim tables already existed but weren't sourced from views)
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_MTR_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   BADGE_NUMBER,
   LONG_DESCRIPTION,
   MANUFACTURER_CODE,
   MODEL_CODE,
   METER_DATA_AREA,
   METER_ID,
   METER_STATUS,
   METER_TYPE_CODE,
   RECEIVED_DATE,
   RETIRED_DATE,
   RETIRE_REASON_CODE,
   SERIAL_NUMBER,
   MTR_VERSION,
   METER_SAMPLE,					--20140702 BN - FOR GRUNSKY
   METER_SAMPLE_EFFECTIVE_DATE,		--20140702 BN - FOR GRUNSKY
   METER_SAMPLE_DESCRIPTION,		--20140702 BN - FOR GRUNSKY
   METER_SIZE,						--20140702 BN - FOR GRUNSKY
   METER_DESIGNATION,				--20140702 BN - FOR GRUNSKY
   METER_DESIGNATION_DESCR,			--20140702 BN - FOR GRUNSKYMETER_DESIGNATION_DESCR,			--20140702 BN - FOR GRUNSKY
   METER_PRESSURE,				--20140702 BN - FOR GRUNSKY
   METER_PRESSURE_UOM,		--20140702 BN - FOR GRUNSKY
   METER_PRESSURE_UOM_DESCR			--20140702 BN - FOR GRUNSKYMETER_DESIGNATION_DESCR,			--20140702 BN - FOR GRUNSKY
)
AS
   SELECT WC_CCB_MTR_S.INTEGRATION_ID,
          WC_CCB_MTR_S.DATASOURCE_NUM_ID,
          WC_CCB_MTR_S.W_INSERT_DT,
          WC_CCB_MTR_S.W_UPDATE_DT,
          WC_CCB_MTR_S.W_LOAD_NUMBER,
          WC_CCB_MTR_S.BADGE_NUMBER,
          WC_CCB_MTR_S.LONG_DESCRIPTION,
          WC_CCB_MTR_S.MANUFACTURER_CODE,
          WC_CCB_MTR_S.MODEL_CODE,
          WC_CCB_MTR_S.METER_DATA_AREA,
          WC_CCB_MTR_S.METER_ID,
          WC_CCB_MTR_S.METER_STATUS,
          WC_CCB_MTR_S.METER_TYPE_CODE,
          WC_CCB_MTR_S.RECEIVED_DATE,
          WC_CCB_MTR_S.RETIRED_DATE,
          WC_CCB_MTR_S.RETIRE_REASON_CODE,
          WC_CCB_MTR_S.SERIAL_NUMBER,
          WC_CCB_MTR_S.MTR_VERSION,
		  MTR_CHAR_MTRSAM.characteristic_value meter_sample,			--20140702 BN - FOR GRUNSKY
		  MTR_CHAR_MTRSAM.effective_date meter_sample_effective_date,	--20140702 BN - FOR GRUNSKY
		  CHAR_VAL_MTRSAM.description meter_sample_description,			--20140702 BN - FOR GRUNSKY
		  MTR_CHAR_MTRSIZE.characteristic_value meter_size,				--20140702 BN - FOR GRUNSKY
		  MTR_CHAR_MTRDSGN.characteristic_value meter_designation,		--20140702 BN - FOR GRUNSKY
		  CHAR_VAL_MTRDSGN.description meter_designation_descr,			--20140702 BN - FOR GRUNSKY
		  MTR_CHAR_MTRPRESS.adhoc_characteristic_value METER_PRESSURE,				--20140702 BN - FOR GRUNSKY
		  MTR_CHAR_MTRPRUOM.characteristic_value METER_PRESSURE_UOM,		--20140702 BN - FOR GRUNSKY
		  CHAR_VAL_MTRPRUOM.description METER_PRESSURE_UOM_DESCR			--20140702 BN - FOR GRUNSKY
     FROM WC_CCB_MTR_S,
		  (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSAM')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSAM'
          ) MTR_CHAR_MTRSAM,		--20140702 BN - FOR GRUNSKY
		  (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MTRSAM') CHAR_VAL_MTRSAM,
		  (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRSIZE'
          ) MTR_CHAR_MTRSIZE,		--20140702 BN - FOR GRUNSKY		  
		  (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN'
          ) MTR_CHAR_MTRDSGN,		--20140702 BN - FOR GRUNSKY
		  (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MTRDSGN') CHAR_VAL_MTRDSGN,
		  (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRPRUOM')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRPRUOM'
          ) MTR_CHAR_MTRPRUOM,		--20140702 BN - FOR GRUNSKY
		  (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'MTRPRUOM') CHAR_VAL_MTRPRUOM,
		  (SELECT * FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRPRESS')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRPRESS'
          ) MTR_CHAR_MTRPRESS		--20140702 BN - FOR GRUNSKY
	WHERE 1=1
		AND WC_CCB_MTR_S.INTEGRATION_ID = MTR_CHAR_MTRSAM.METER_ID (+) --20140702 BN - FOR GRUNSKY
		AND MTR_CHAR_MTRSAM.CHARACTERISTIC_VALUE = CHAR_VAL_MTRSAM.CHARACTERISTIC_VALUE (+) --20140702 BN - FOR GRUNSKY
		AND WC_CCB_MTR_S.INTEGRATION_ID = MTR_CHAR_MTRSIZE.METER_ID (+) --20140702 BN - FOR GRUNSKY
		AND WC_CCB_MTR_S.INTEGRATION_ID = MTR_CHAR_MTRDSGN.METER_ID (+) --20140702 BN - FOR GRUNSKY
		AND MTR_CHAR_MTRDSGN.CHARACTERISTIC_VALUE = CHAR_VAL_MTRDSGN.CHARACTERISTIC_VALUE (+) --20140702 BN - FOR GRUNSKY
		AND WC_CCB_MTR_S.INTEGRATION_ID = MTR_CHAR_MTRPRUOM.METER_ID (+) --20140702 BN - FOR GRUNSKY
		AND MTR_CHAR_MTRPRUOM.CHARACTERISTIC_VALUE = CHAR_VAL_MTRPRUOM.CHARACTERISTIC_VALUE (+) --20140702 BN - FOR GRUNSKY
		AND WC_CCB_MTR_S.INTEGRATION_ID = MTR_CHAR_MTRPRESS.METER_ID (+) --20140702 BN - FOR GRUNSKY
;

CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SP_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   DISCONNECTED_LOCATION_CODE,
   SP_ID,
   SP_TYPE_CODE,
   PREMISE_ID,
   SP_STATUS_FLAG,
   INSTALL_DATE,
   SP_SOURCE_STATUS_FLAG,
   MR_SERVICE_CYCLE_CODE,
   MR_SERVICE_ROUTE_CODE,
   METER_LOCATION_CODE,
   MR_SERVICE_SYSCLE_ROUTE_SEQ,
   FACILITY_LEVEL_1_CODE,
   METER_LOCATION_DETAILS,
   FACILITY_LEVEL_2_CODE,
   FACILITY_LEVEL_3_CODE,
   SP_VERSION,
   SP_LONG_DESCRIPTION,
   ABOLISHED_DATE,
   OVERRIDE_PREMISE_FLD_INFO_FLAG,
   MR_INSTRUCTION_CODE,
   MR_WARNING_CODE,
   KEY_SW,
   KEY_ID,
   OK_TO_ENTER_SW,
   MR_INSTRUCTION_DETAILS,
   SP_DATA_AREA,
   DISCONNECTED_LOCATION_CID,
   PREMISE_CID,
   METER_READ_CYCLE_CID,
   GRUNSKY_CONFIGURATION,			--20140702 BN - FOR GRUNSKY
   GRUNSKY_CONFIGURATION_DESCR,  	--20140702 BN - FOR GRUNSKY
   SP_STATUS_FLAG_DESCRIPTION		--20141006 BN - FOR ACI STATUS
)
AS
   SELECT WC_CCB_SP_S.INTEGRATION_ID,
          WC_CCB_SP_S.DATASOURCE_NUM_ID,
          WC_CCB_SP_S.W_INSERT_DT,
          WC_CCB_SP_S.W_UPDATE_DT,
          WC_CCB_SP_S.W_LOAD_NUMBER,
          WC_CCB_SP_S.DISCONNECTED_LOCATION_CODE,
          WC_CCB_SP_S.SP_ID,
          WC_CCB_SP_S.SP_TYPE_CODE,
          WC_CCB_SP_S.PREMISE_ID,
          WC_CCB_SP_S.SP_STATUS_FLAG,
          WC_CCB_SP_S.INSTALL_DATE,
          WC_CCB_SP_S.SP_SOURCE_STATUS_FLAG,
          WC_CCB_SP_S.MR_SERVICE_CYCLE_CODE,
          WC_CCB_SP_S.MR_SERVICE_ROUTE_CODE,
          WC_CCB_SP_S.METER_LOCATION_CODE,
          WC_CCB_SP_S.MR_SERVICE_SYSCLE_ROUTE_SEQ,
          WC_CCB_SP_S.FACILITY_LEVEL_1_CODE,
          WC_CCB_SP_S.METER_LOCATION_DETAILS,
          WC_CCB_SP_S.FACILITY_LEVEL_2_CODE,
          WC_CCB_SP_S.FACILITY_LEVEL_3_CODE,
          WC_CCB_SP_S.SP_VERSION,
          WC_CCB_SP_S.SP_LONG_DESCRIPTION,
          WC_CCB_SP_S.ABOLISHED_DATE,
          WC_CCB_SP_S.OVERRIDE_PREMISE_FLD_INFO_FLAG,
          WC_CCB_SP_S.MR_INSTRUCTION_CODE,
          WC_CCB_SP_S.MR_WARNING_CODE,
          WC_CCB_SP_S.KEY_SW,
          WC_CCB_SP_S.KEY_ID,
          WC_CCB_SP_S.OK_TO_ENTER_SW,
          WC_CCB_SP_S.MR_INSTRUCTION_DETAILS,
          WC_CCB_SP_S.SP_DATA_AREA,
          WC_CCB_SP_S.DISCONNECTED_LOCATION_CID,
          WC_CCB_SP_S.PREMISE_CID,
          WC_CCB_SP_S.METER_READ_CYCLE_CID,
		SP_CHAR_GRUCONF.CHARACTERISTIC_VALUE GRUNSKY_CONFIGURATION,			--20140702 BN - FOR GRUNSKY
		CHAR_VAL_GRUCONF.DESCRIPTION GRUNSKY_CONFIGURATION_DESCR,  	--20140702 BN - FOR GRUNSKY
		DECODE(TRIM(WC_CCB_SP_S.SP_STATUS_FLAG),'I','Abolished','R','In Service') SP_STATUS_FLAG_DESCRIPTION		--20141006 BN - FOR ACI STATUS
     FROM WC_CCB_SP_S,
	 	  (SELECT * FROM WC_CCB_SP_CHAR_S
           WHERE WC_CCB_SP_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_SP_CHAR_S TMP
                                                     WHERE TMP.SP_ID = WC_CCB_SP_CHAR_S.SP_ID
                                                           AND TMP.CHARACTERISTIC_TYPE = 'GRUCONF')
                AND WC_CCB_SP_CHAR_S.CHARACTERISTIC_TYPE = 'GRUCONF'
          ) SP_CHAR_GRUCONF,		--20140702 BN - FOR GRUNSKY
		  (SELECT * FROM WC_CCB_CHAR_VAL_L_S WHERE CHARACTERISTIC_TYPE_CODE = 'GRUCONF') CHAR_VAL_GRUCONF
	 WHERE	1=1
		AND WC_CCB_SP_S.INTEGRATION_ID = SP_CHAR_GRUCONF.SP_ID (+)	--20140702 BN - FOR GRUNSKY
		AND SP_CHAR_GRUCONF.CHARACTERISTIC_VALUE = CHAR_VAL_GRUCONF.CHARACTERISTIC_VALUE (+)	--20140702 BN - FOR GRUNSKY
;




--20140710 BN - The below tables were created by Bob a while ago per request from Todd G to store FA Logs info that came from G4.

CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_APPLIANCE_FS_V" ( "INTEGRATION_ID" ,"DATASOURCE_NUM_ID" ,"W_INSERT_DT" ,"W_UPDATE_DT" ,"W_LOAD_NUMBER" ,FA_ID ,LOG_TYPE ,SEQUENCE_NUMBER ,APPLIANCE ,SETTINGS ,APPL_LEFT ,PASSFAIL ,HAZ1 ,HAZ2 ,CV1 ,CV2 )
                                                                                                                           AS
WITH FA_LOG ( INTEGRATION_ID ,DATASOURCE_NUM_ID ,W_INSERT_DT ,W_UPDATE_DT ,W_LOAD_NUMBER ,FA_ID ,LOG_TYPE ,DETAILS ,HIER ) AS
  (SELECT INTEGRATION_ID ,
    DATASOURCE_NUM_ID ,
    W_INSERT_DT ,
    W_UPDATE_DT ,
    W_LOAD_NUMBER ,
    FA_ID ,
    LOG_TYPE ,
    DETAILS ,
    1
  FROM WC_CCB_FA_LOG_S
  WHERE LOG_TYPE = 'AINS'
  UNION ALL
  SELECT L.INTEGRATION_ID ,
    L.DATASOURCE_NUM_ID ,
    L.W_INSERT_DT ,
    L.W_UPDATE_DT ,
    L.W_LOAD_NUMBER ,
    L.FA_ID ,
    L.LOG_TYPE ,
    L.DETAILS ,
    HIER + 1
  FROM FA_LOG F,
    WC_CCB_FA_LOG_S L
  WHERE L.LOG_TYPE = 'AINS'
  AND F.FA_ID      = L.FA_ID
  AND HIER + 1    <= LENGTH(L.DETAILS) - LENGTH(REPLACE(L.DETAILS, ';')) + 1
  )
SELECT (FA_ID
  ||'::'
  ||TO_CHAR(HIER)
  ||'::'
  ||LOG_TYPE) INTEGRATION_ID ,
  DATASOURCE_NUM_ID ,
  W_INSERT_DT ,
  W_UPDATE_DT ,
  W_LOAD_NUMBER ,
  FA_ID ,
  LOG_TYPE ,
  TO_CHAR(HIER) SEQUENCE_NUMBER ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 1),11,3)APPLIANCE ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 2),10,4)SETTINGS ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 4),6,3)APPL_LEFT ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 5),10,2)PASSFAIL ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 6),6,4)HAZ1 ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 7),6,4)HAZ2 ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 8),6,4)CV1 ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ;]+', 1, 9),6,4)CV2
  --,SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)) unparsed_string
  --,DETAILS  -- Full contents of column
FROM FA_LOG
ORDER BY  FA_ID,
          HIER ;

CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_FLAT_RATE_FS_V" ( "INTEGRATION_ID" ,"DATASOURCE_NUM_ID" ,"W_INSERT_DT" ,"W_UPDATE_DT" ,"W_LOAD_NUMBER" ,FA_ID ,LOG_TYPE ,SEQUENCE_NUMBER ,FRAPPLIANCE ,FRCODE ,FRCHARGES )
AS
WITH FA_LOG ( INTEGRATION_ID ,DATASOURCE_NUM_ID ,W_INSERT_DT ,W_UPDATE_DT ,W_LOAD_NUMBER ,FA_ID ,LOG_TYPE ,DETAILS ,HIER ) AS
  (SELECT INTEGRATION_ID ,
    DATASOURCE_NUM_ID ,
    W_INSERT_DT ,
    W_UPDATE_DT ,
    W_LOAD_NUMBER ,
    FA_ID ,
    LOG_TYPE ,
    DETAILS ,
    1
  FROM WC_CCB_FA_LOG_S
  WHERE LOG_TYPE = 'FCHG' 
  UNION ALL
  SELECT L.INTEGRATION_ID ,
    L.DATASOURCE_NUM_ID ,
    L.W_INSERT_DT ,
    L.W_UPDATE_DT ,
    L.W_LOAD_NUMBER ,
    L.FA_ID ,
    L.LOG_TYPE ,
    L.DETAILS ,
    HIER + 1
  FROM FA_LOG F,
    WC_CCB_FA_LOG_S L
  WHERE L.LOG_TYPE = 'FCHG' 
  AND F.FA_ID      = L.FA_ID
  AND HIER + 1    <= LENGTH(L.DETAILS) - LENGTH(REPLACE(L.DETAILS, ';')) + 1
  )
SELECT 
  (FA_ID||'::'||TO_CHAR(HIER)||'::'||LOG_TYPE) INTEGRATION_ID ,
  DATASOURCE_NUM_ID ,
  W_INSERT_DT ,
  W_UPDATE_DT ,
  W_LOAD_NUMBER ,
  FA_ID ,
  LOG_TYPE ,
  TO_CHAR(HIER) SEQUENCE_NUMBER ,
(CASE WHEN SUBSTR(DETAILS,1,12) = 'FRAppliance-' 
  THEN SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, INSTR(DETAILS, ';', 1, HIER - 1) + 1), DECODE(INSTR(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 1),13,3)
  ELSE SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),1,REGEXP_INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),'\d+')-1) END) FRAPPLIANCE,
 
(CASE WHEN SUBSTR(DETAILS,1,12) = 'FRAppliance-' 
  THEN SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, INSTR(DETAILS, ';', 1, HIER - 1) + 1), DECODE(INSTR(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 2),8,600)
  ELSE SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),REGEXP_INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),'\d+'),3) END) FRCODE,
  
(CASE WHEN SUBSTR(DETAILS,1,12) = 'FRAppliance-' 
  THEN SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, INSTR(DETAILS, ';', 1, HIER - 1) + 1), DECODE(INSTR(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ;]+', 1, 3),11,15)
  ELSE  SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),REGEXP_INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),'\d+')+3,15) END) FRCHARGES  
 
-- To Test Data contents
--,SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)) unparsed_string
--,DETAILS  -- Full contents of column

FROM FA_LOG
WHERE 1=1

ORDER BY  FA_ID,
          HIER ;


/******************************************************************************
NAME:         WC_CCB_FA_NEW_PARTS_FS_V
PURPOSE:      Creates view from WC_CCB_FA_LOG (LOG_TYPE='NPRD' - NEW PARTS)
REVISIONS:
Ver        Date        Author           Description
---------  ----------  ---------------  ------------------------------------
1.0        02/10/2014  Bob Canaway      Initial Creation
NOTES:  This script uses  Recursive Subquery Factoring, also known as the 
recursive WITH clause rather than a CONNECT BY which takes too long.  
This is the ANSI standard
******************************************************************************/
  CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_NEW_PARTS_FS_V" ("INTEGRATION_ID", "DATASOURCE_NUM_ID", "W_INSERT_DT", "W_UPDATE_DT", "W_LOAD_NUMBER", "FA_ID", "LOG_TYPE", "SEQUENCE_NUMBER", "UNITS", "PURCHASE_PRICE", "CUSTOMER_PRICE", "PART_DESCRIPTION") AS 
  WITH FA_LOG ( INTEGRATION_ID ,DATASOURCE_NUM_ID ,W_INSERT_DT ,W_UPDATE_DT ,W_LOAD_NUMBER ,FA_ID ,LOG_TYPE ,DETAILS ,HIER ) AS
  (SELECT INTEGRATION_ID ,
    DATASOURCE_NUM_ID ,
    W_INSERT_DT ,
    W_UPDATE_DT ,
    W_LOAD_NUMBER ,
    FA_ID ,
    LOG_TYPE ,
    DETAILS ,
    1
  FROM WC_CCB_FA_LOG_S
  WHERE LOG_TYPE = 'NPRD' AND SUBSTR(DETAILS,1,6) = 'Units-'
  UNION ALL
  SELECT L.INTEGRATION_ID ,
    L.DATASOURCE_NUM_ID ,
    L.W_INSERT_DT ,
    L.W_UPDATE_DT ,
    L.W_LOAD_NUMBER ,
    L.FA_ID ,
    L.LOG_TYPE ,
    L.DETAILS ,
    HIER + 1
  FROM FA_LOG F,
    WC_CCB_FA_LOG_S L
  WHERE L.LOG_TYPE = 'NPRD' AND SUBSTR(L.DETAILS,1,6) = 'Units-'
  AND F.FA_ID      = L.FA_ID
  AND HIER + 1    <= LENGTH(L.DETAILS) - LENGTH(REPLACE(L.DETAILS, ';')) + 1
  )
SELECT (FA_ID||'::'||TO_CHAR(HIER)||'::'||LOG_TYPE) INTEGRATION_ID ,
  DATASOURCE_NUM_ID ,
  W_INSERT_DT ,
  W_UPDATE_DT ,
  W_LOAD_NUMBER ,
  FA_ID ,
  LOG_TYPE ,
  TO_CHAR(HIER) SEQUENCE_NUMBER ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 1),7,1)UNITS ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 2),15,25)PURCHASE_PRICE ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 3),15,25)CUSTOMER_PRICE ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^  ;]+', 1, 4),10,200)PART_DESCRIPTION
  --,SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)) unparsed_string
  --,DETAILS  -- Full contents of column
FROM FA_LOG
ORDER BY  FA_ID,
          HIER;


CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_PARTS_FS_V" ( "INTEGRATION_ID" ,"DATASOURCE_NUM_ID" ,"W_INSERT_DT" ,"W_UPDATE_DT" ,"W_LOAD_NUMBER" ,FA_ID ,LOG_TYPE ,SEQUENCE_NUMBER ,UNITS ,PART_TYPE ,STOCK_NO ,PART_CHARGE )
AS
WITH FA_LOG ( INTEGRATION_ID ,DATASOURCE_NUM_ID ,W_INSERT_DT ,W_UPDATE_DT ,W_LOAD_NUMBER ,FA_ID ,LOG_TYPE ,DETAILS ,HIER ) AS
  (SELECT INTEGRATION_ID ,
    DATASOURCE_NUM_ID ,
    W_INSERT_DT ,
    W_UPDATE_DT ,
    W_LOAD_NUMBER ,
    FA_ID ,
    LOG_TYPE ,
    DETAILS ,
    1
  FROM WC_CCB_FA_LOG_S
  WHERE LOG_TYPE = 'PRTD'
  UNION ALL
  SELECT L.INTEGRATION_ID ,
    L.DATASOURCE_NUM_ID ,
    L.W_INSERT_DT ,
    L.W_UPDATE_DT ,
    L.W_LOAD_NUMBER ,
    L.FA_ID ,
    L.LOG_TYPE ,
    L.DETAILS ,
    HIER + 1
  FROM FA_LOG F,
    WC_CCB_FA_LOG_S L
  WHERE L.LOG_TYPE = 'PRTD'
  AND F.FA_ID      = L.FA_ID
  AND HIER + 1    <= LENGTH(L.DETAILS) - LENGTH(REPLACE(L.DETAILS, ';')) + 1
  )
SELECT (FA_ID||'::'||TO_CHAR(HIER)||'::'||LOG_TYPE) INTEGRATION_ID ,
  DATASOURCE_NUM_ID ,
  W_INSERT_DT ,
  W_UPDATE_DT ,
  W_LOAD_NUMBER ,
  FA_ID ,
  LOG_TYPE ,
  TO_CHAR(HIER) SEQUENCE_NUMBER ,
  SUBSTR(REGEXP_SUBSTR (SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), '[^ ]+', 1, 1),7,1)UNITS ,
  SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), 'PartType-')+9,(INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),'StockNo')-1) - (INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), 'PartType-')+9) )PART_TYPE ,
  SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), 'StockNo-')+8,(INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)),'PartCharge-')-1) - (INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), 'StockNo-')+8) )STOCK_NO ,
  SUBSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), INSTR(SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)), 'PartCharge-')+11 )PART_CHARGE 
 -- ,SUBSTR(DETAILS, DECODE(HIER, 1, 1, instr(DETAILS, ';', 1, HIER - 1) + 1), DECODE(instr(DETAILS, ';', 1, HIER), 0, LENGTH(DETAILS), instr(DETAILS, ';', 1, HIER) - DECODE(HIER, 1, 0, instr(DETAILS, ';', 1, HIER - 1)) - 1)) unparsed_string
  --,DETAILS  -- Full contents of column
 
FROM FA_LOG
ORDER BY  FA_ID,
          HIER ;
		  
		  
		  
--20140728 bn 
CREATE OR REPLACE VIEW  WC_CCB_SCHOOL_AGGR_LER_FS_V AS SELECT * FROM WC_CCB_SCHOOL_AGGREGATE_LER_S;
CREATE OR REPLACE VIEW WC_CCB_SCHOOL_AGGR_ALL_FS_V AS SELECT * FROM WC_CCB_SCHOOL_AGGR_ALL_S;



--20140804 bn - for productivity report
/******************************************************************************
   NAME: 	WC_CCB_TODO_TYPE_DS_V      
   PURPOSE: 	Creates view based upon staging table WC_CCB_TD_TYPE_S.  

   REVISIONS:

   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/24/2013    Bob Canaway      Initial Creation

   NOTES:

******************************************************************************/

CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_TODO_TYPE_DS_V" 
(
"INTEGRATION_ID", 
"DATASOURCE_NUM_ID",             
"W_INSERT_DT",               
"W_UPDATE_DT",               
"W_LOAD_NUMBER",             
"TD_TYPE_CD",    
"CREATION_PROCESS_CODE",   
"MESSAGE_CATEGORY",   
"MESSAGE_NUMBER",   
"ROUTING_PROCESS_CODE",    
"VERSION",   
"DATA_OWNER",    
"TO_DO_TYPE_USAGE",   
"PRIORITY",    
"NAVIGATION_OPTION_CODE",   
"LANGUAGE_CODE",    
"DESCRIPTION",   
"LANGUAGE_VERSION",   
"LANGUAGE_OWNER",   
"LONG_DESCRIPTION"
) 
AS 

SELECT
INTEGRATION_ID, 
DATASOURCE_NUM_ID,             
W_INSERT_DT,                
W_UPDATE_DT,             
W_LOAD_NUMBER,              
TD_TYPE_CD,   
CREATION_PROCESS_CODE,    
MESSAGE_CATEGORY,   
MESSAGE_NUMBER,   
ROUTING_PROCESS_CODE,   
VERSION,   
DATA_OWNER,   
TO_DO_TYPE_USAGE,    
PRIORITY,    
NAVIGATION_OPTION_CODE,   
LANGUAGE_CODE,    
DESCRIPTION,   
LANGUAGE_VERSION,   
LANGUAGE_OWNER,    
LONG_DESCRIPTION

FROM
 WC_CCB_TD_TYPE_S
 
WHERE 1=1
;

/******************************************************************************
   NAME: 	WC_CCB_TODO_ENTRY_FS_V      
   PURPOSE: 	Creates view based upon WC_CCB_TODO_ENTRY_S and WC_CCB_FA_S.  

   REVISIONS:

   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        9/25/2013    Bob Canaway      Initial Creation

   NOTES:

******************************************************************************/

CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_TODO_ENTRY_FS_V" 
(
"INTEGRATION_ID", 
"DATASOURCE_NUM_ID", 
"W_INSERT_DT", 
"W_UPDATE_DT", 
"W_LOAD_NUMBER", 
"TD_ENTRY_ID",  
"BATCH_CONTROL",       
"BATCH_NUMBER",  
"MESSAGE_CATEGORY",
"MESSAGE_NUMBER",  
"ASSIGN_TO_USER",   
"TODO_TYPE_CODE",   
"ROLE_ID",  
"TODO_ENTRY_STATUS",   
"VERSION", 
"CREATE_DTTM",              
"ASSIGNED_DTTM",               
"COMPLETION_DTTM",               
"COMPLETE_USER_ID",   
"COMMENTS", 
"ASSIGNED_USER_ID",   
"PRIORITY",  
"ACCOUNT_ID"
) 
AS 

SELECT
INTEGRATION_ID, 
DATASOURCE_NUM_ID, 
W_INSERT_DT, 
W_UPDATE_DT, 
W_LOAD_NUMBER,
TD_ENTRY_ID, 
BATCH_CONTROL,       
BATCH_NUMBER,  
MESSAGE_CATEGORY,  
MESSAGE_NUMBER, 
ASSIGN_TO_USER,   
TODO_TYPE_CODE,   
ROLE_ID,  
TODO_ENTRY_STATUS,   
VERSION,  
CREATE_DTTM,            
ASSIGNED_DTTM,               
COMPLETION_DTTM,              
COMPLETE_USER_ID,   
COMMENTS,
ASSIGNED_USER_ID,   
PRIORITY,   
ACCOUNT_ID

FROM
 WC_CCB_TD_ENTRY_S
 
WHERE 1=1
;

--20140826 RK final bill
--20151026 bn - need to add logic to only get FTs that happened prior to the 1st Final Bill
CREATE OR REPLACE VIEW WC_CCB_FT_F_FNL_BL_SUM_FS_V
AS
   SELECT A.SA_ACCOUNT_ID||'::'||A.SA_ID||'::'||b.BILL_DATE INTEGRATION_ID,
          3000 DATASOURCE_NUM_ID,
          NVL(A.SA_ACCOUNT_ID,'0') SA_ACCOUNT_ID,
          NVL(A.SA_ID,'0') SA_ID,
          NVL(A.SA_STATUS_FLAG,0) SA_STATUS_FLAG,
          NVL(A.SA_TYPE_CODE,0) SA_TYPE_CODE,
          /*MAX (BILL_DATE)*/ b.BILL_DATE,
          SUM (A.PAYOFF_AMOUNT) PAYOFF_AMOUNT
     FROM WC_CCB_FT_F_V A,
          --20151026 bn - need to add logic to only get FTs that happened prior to the 1st Final Bill - (select DISTINCT sa_id from WC_CCB_BSEG_S where CLOSING_BILL_SEGMENT_SW = 'Y' and BILL_SEGMENT_STATUS_FLAG = '50') B
            (  select sa_id, min(bill_date) bill_date
               from WC_CCB_BSEG_S, wc_ccb_bill_s 
               where CLOSING_BILL_SEGMENT_SW = 'Y' and BILL_SEGMENT_STATUS_FLAG = '50' and wc_ccb_bill_s.integration_id = wc_ccb_bseg_s.bill_id and wc_ccb_bill_s.bill_status_flag = 'C' group by sa_id)  b
    WHERE A.SA_ID = B.SA_ID     
          and a.accounting_date <= b.bill_date
   GROUP BY A.SA_ACCOUNT_ID||'::'||A.SA_ID,
            A.SA_ACCOUNT_ID,
            A.SA_ID,
            A.SA_STATUS_FLAG,
            A.SA_TYPE_CODE,
            b.BILL_DATE
            ;


			
--20140910 BN - For the Final Indexed report for Customer ACCOUNTING_DATE

CREATE OR REPLACE VIEW WC_CCB_FINAL_INDEXED_SFS_V
AS
select distinct
  sa.account_id || '::' || sa.sa_id || '::' || to_char(rr.start_register_reading) || '::' || to_char(bsr.end_register_reading) integration_id,    --This should be unique all the time but adding rownum at end just in case.  
                                                    --The table will be truncated and reloaded every night anyways.
  3000 datasource_num_id,
  sysdate w_insert_dt,
  sysdate w_update_dt,
  0 w_load_number,
  sa.account_id,
  sa.account_id as account_cid,
  sa.sa_id,
  sa.sa_id as sa_cid,
  sa.end_date as sa_end_date,
  sasp.stop_date as sa_sp_stop_date,
  mr.start_read_date as stop_read_date,
  fa.activity_type_code fa_type_code,
  to_char(rr.start_register_reading) as field_reading,
  bsr.end_register_reading,
  ft.frozen_by,
  trunc(ft.freeze_date) as freeze_date
from
 wc_ccb_sa_s sa,
  wc_ccb_sa_sp_s sasp,
  wc_ccb_mr_s mr,
  wc_ccb_sa_sp_fa_s sfa,
  wc_ccb_fa_s fa,
  wc_ccb_mr_s mr2,
  wc_ccb_reg_read_s rr,
  wc_ccb_bseg_s bseg,
  wc_ccb_bseg_read_s bsr,
  wc_ccb_ft_s ft
where sa.integration_id = sasp.sa_id
and sasp.stop_mr_id = mr.start_meter_read_id
and trunc(sa.end_date) - trunc(mr.start_read_date) > 10
and sasp.sa_sp_id = sfa.sa_sp_id
and sfa.field_activity_type_flag = 'SP'
and sfa.fa_id = fa.integration_id
and fa.fa_status_flag = 'C'
and mr.start_meter_configuration_id = mr2.start_meter_configuration_id
and sa.end_date = trunc(mr2.start_read_date)
and mr2.start_use_on_bill_sw = 'Y'
and mr2.start_meter_read_id = rr.start_meter_read_id
and bseg.sa_id = sa.integration_id
and bseg.closing_bill_segment_sw = 'Y'
and bseg.bill_segment_status_flag = '50'
and bseg.integration_id = ft.sibling_id
and ft.ft_type_flAg = 'BS'
and bseg.bill_cycle_code is null
and bseg.integration_id = bsr.bill_segment_id
--and trunc(ft.freeze_date) between to_date('01012013','MMDDYYYY') and to_date('12122013','MMDDYYYY')
union all
select distinct
  sa.account_id || '::' || sa.sa_id || '::::' || to_char(bsr.end_register_reading)  integration_id,    --This should be unique all the time but adding rownum at end just in case.  
                                                    --The table will be truncated and reloaded every night anyways.
  3000 datasource_num_id,
  sysdate w_insert_dt,
  sysdate w_update_dt,
  0 w_load_number,
  sa.account_id,
  sa.account_id as account_cid,
  sa.sa_id,
  sa.sa_id as sa_cid,
  sa.end_date as sa_end_dt,
  sasp.stop_date as sa_sp_stop_dt,
  mr.start_read_date as stop_read_dt,
  fa.activity_type_code fa_type_code,
  ' ',
  bsr.end_register_reading,
  ft.frozen_by,
  trunc(ft.freeze_date)
from
  wc_ccb_sa_s sa,
  wc_ccb_sa_sp_s sasp,
  wc_ccb_mr_s mr,
  wc_ccb_sa_sp_fa_s sfa,
  wc_ccb_fa_s fa,
  wc_ccb_bseg_s bseg,
  wc_ccb_bseg_read_s bsr,
  wc_ccb_ft_s ft
where sa.integration_id = sasp.sa_id
and sasp.stop_mr_id = mr.start_meter_read_id
and trunc(sa.end_date) - trunc(mr.start_read_date) > 10
and sasp.sa_sp_id = sfa.sa_sp_id
and sfa.field_activity_type_flag = 'SP'
and sfa.fa_id = fa.integration_id
and fa.fa_status_flag = 'C'
and not exists (select 'x' from wc_ccb_mr_s mr2
where mr.start_meter_configuration_id = mr2.start_meter_configuration_id
and sa.end_date = trunc(mr2.start_read_date)
and mr2.start_use_on_bill_sw = 'Y')
and bseg.sa_id = sa.integration_id
and bseg.closing_bill_segment_sw = 'Y'
and bseg.bill_segment_status_flag = '50'
and bseg.integration_id = ft.sibling_id
and ft.ft_type_flag = 'BS'
and bseg.bill_cycle_code is null --= ' '
and bseg.integration_id = bsr.bill_segment_id
--and trunc(ft.freeze_date) between to_date('01012013','MMDDYYYY') and to_date('12122013','MMDDYYYY')
;





--20141217 bn - THIS VIEW IS NO LONGER USED.  There is a Procedure in ODI that loads this table.
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_DAYS_TO_BILL_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   BILL_ID,
   ACCOUNT_CID,
   ACCOUNT_ID,
   TD_TYPE_CD,
   TD_TYPE_DESCRIPTION,
   CRE_DTTM,
   COMPLETE_DTTM,
   NUMBER_OF_DAYS,
   TD_ENTRY_ID,
   COMPLETE_USER_ID,
   KEY_VALUE,
   MR_ID,
   PREMISE_ID,
   SP_ID,
   SA_ID            --20141020 BN - New requirement per Brian P.
)
AS
   /*
       Bill Segments in Error (TD-BSERR)
   */
  SELECT 'BSERR::' || CI_BILL.BILL_ID
                || '::' || sa.sa_id integration_id,
            3000 datasource_num_id,
            SYSDATE w_insert_dt,
            SYSDATE w_update_dt,
            0 w_load_number,
            ci_bill.bill_id,
            account.account_id account_cid,
            account.account_id,
            ci_td_type_l.integration_id td_type_cd,
            ci_td_type_l.description td_type_description,
            MIN (trunc(ci_td_entry.create_dttm)) cre_dttm,
            MAX (TRUNC (ci_bill.completion_date)) complete_dttm, --20141022 bn - MAX (ci_td_entry2.completion_dttm) complete_dttm,
            ROUND (
                 MAX (TRUNC (ci_bill.completion_date))
               - MIN (TRUNC (ci_td_entry.create_dttm)),
               0)
               number_of_days,
            NULL td_entry_id,
            NULL complete_user_id,
            NULL key_value,
            NULL mr_id,
            NULL premise_id,
            NULL SP_ID,
            SA.sa_id SA_ID            --20141020 BN - New requirement per Brian P.
            
       FROM WC_CCB_TD_ENTRY_S ci_td_entry,
            wc_ccb_td_type_s ci_td_type_l,
            wc_ccb_bill_s ci_bill,
            --(select td_entry_id, max(log_dttm) from ci_td_log where log_type_flg = 'CMPT' group by td_entry_id) ci_td_log,  --Can I just get the Complete Date from td entry?
            (SELECT td_entry_id, char_val_fk1 account_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'ACCOUNT'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'ACCOUNT')) ACCOUNT,
            (SELECT td_entry_id, char_val_fk1 account_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'ACCOUNT'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'ACCOUNT')) ACCOUNT2,
            (SELECT td_entry_id, char_val_fk1 sa_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'C1-SA'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'C1-SA')) SA,                                   
            WC_CCB_TD_ENTRY_S ci_td_entry2
      WHERE     1 = 1
            AND CI_TD_ENTRY.todo_type_code = 'TD-BSERR'
            AND ci_td_entry.todo_type_code = ci_td_type_l.integration_id
			and ci_td_type_l.integration_id  = 'TD-BSERR' --20141113 bn - tuning
            AND ci_td_entry.integration_id = ACCOUNT.td_entry_id
            AND ci_td_entry.todo_type_code = ci_td_entry2.todo_type_code
            AND ci_td_entry2.integration_id = account2.td_entry_id
            AND account.account_id = account2.account_id
            AND account.account_id = ci_bill.account_id
            AND account2.account_id = ci_bill.account_id
            AND ci_td_entry.integration_id = SA.td_entry_id
            AND ci_td_entry.create_dttm BETWEEN ci_bill.create_date
                                            AND ci_bill.completion_date
            AND ci_td_entry2.create_dttm BETWEEN ci_bill.create_date
                                             AND ci_bill.completion_date --Using Creation Date because Completion Date can be after the Bill was completed
            AND ci_td_entry.completion_dttm IS NOT NULL
            AND ci_td_entry2.completion_dttm IS NOT NULL
            --20141007 bn - new filter to only get to dos related to bills with gas sas.
            and exists (select 1 from wc_ccb_bseg_s, wc_ccb_sa_s, wc_ccb_sa_type_s
                                           where wc_ccb_bseg_s.sa_id = wc_ccb_sa_s.integration_id
                                                 and wc_ccb_sa_s.sa_type_code || '::' || wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.integration_id
                                                 and wc_ccb_sa_type_s.service_type_code = 'G'
                                                 and wc_ccb_bseg_s.bill_id = ci_bill.integration_id
                                                 and wc_ccb_sa_s.integration_id = SA.sa_id
                                                 --and wc_ccb_bseg_s.bill_id = '044016928235'
                                           )
   --and account.account_id = '0'044016928235'398720000'
   --and bill_id = '044016928235'
   --AND ACCOUNT.ACCOUNT_ID = '0440100000'
   GROUP BY ci_bill.bill_id,
            account.account_id,
            ci_td_type_l.integration_id,
            ci_td_type_l.description,
            SA.sa_id            --20141022 BN - PER BRIANS NEW REQUEST

   /*
       Bills in Error (TD-BIERR)
   */
   UNION ALL
     SELECT 'BIERR::' || CI_BILL.BILL_ID integration_id,
            3000 datasource_num_id,
            SYSDATE w_insert_dt,
            SYSDATE w_update_dt,
            0 w_load_number,
            ci_bill.bill_id,
            account.account_id account_cid,
            account.account_id,
            ci_td_type_l.integration_id td_type_cd,
            ci_td_type_l.description td_type_description,
            MIN (trunc(ci_td_entry.create_dttm)) cre_dttm,
            MAX (TRUNC (ci_bill.completion_date)) complete_dttm, --20141022 bn - MAX (ci_td_entry2.completion_dttm) complete_dttm,
            ROUND (
                 MAX (TRUNC (ci_bill.completion_date))
               - MIN (TRUNC (ci_td_entry.create_dttm)),
               0)
               number_of_days,
            NULL td_entry_id,
            NULL complete_user_id,
            NULL key_value,
            NULL mr_id,
            NULL premise_id,
            NULL SP_ID,
            null SA_ID            --20141020 BN - New requirement per Brian P.
       FROM wc_ccb_td_entry_s CI_TD_ENTRY,
            wc_ccb_td_type_s ci_td_type_l,
            wc_ccb_bill_s ci_bill,
            --(select td_entry_id, max(log_dttm) from ci_td_log where log_type_flg = 'CMPT' group by td_entry_id) ci_td_log,  --Can I just get the Complete Date from td entry?
            (SELECT td_entry_id, char_val_fk1 account_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'ACCOUNT'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'ACCOUNT')) ACCOUNT,
            (SELECT td_entry_id, char_val_fk1 account_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'ACCOUNT'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'ACCOUNT')) ACCOUNT2,
            wc_ccb_td_entry_s ci_td_entry2
      WHERE     1 = 1
            AND CI_TD_ENTRY.todo_type_code = 'TD-BIERR'
            AND ci_td_entry.todo_type_code = ci_td_type_l.integration_id
			and ci_td_type_l.integration_id  = 'TD-BIERR' --20141113 bn - tuning
            AND ci_td_entry.integration_id = ACCOUNT.td_entry_id
            AND ci_td_entry.todo_type_code = ci_td_entry2.todo_type_code
            AND ci_td_entry2.integration_id = account2.td_entry_id
            AND account.account_id = account2.account_id
            AND account.account_id = ci_bill.account_id
            AND account2.account_id = ci_bill.account_id
            AND ci_td_entry.create_dttm BETWEEN ci_bill.create_date
                                            AND ci_bill.completion_date
            AND ci_td_entry2.create_dttm BETWEEN ci_bill.create_date
                                             AND ci_bill.completion_date --Using Creation Date because Completion Date can be after the Bill was completed
            AND ci_td_entry.completion_dttm IS NOT NULL
            AND ci_td_entry2.completion_dttm IS NOT NULL
   --and account.account_id = '6579590000'
            --20141007 bn - new filter to only get to dos related to bills with gas sas.
            and exists (select 1 from wc_ccb_bseg_s, wc_ccb_sa_s, wc_ccb_sa_type_s
                                           where wc_ccb_bseg_s.sa_id = wc_ccb_sa_s.integration_id
                                                 and wc_ccb_sa_s.sa_type_code || '::' || wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.integration_id
                                                 and wc_ccb_sa_type_s.service_type_code = 'G'
                                                 and wc_ccb_bseg_s.bill_id = ci_bill.integration_id
                                           )
   GROUP BY ci_bill.bill_id,
            account.account_id,
            ci_td_type_l.integration_id,
            ci_td_type_l.description

   /*
       Meter Read High/Low Error (TD-HILO)
   */
   UNION ALL
    SELECT DISTINCT --20140930 bn - Needs to be DISTINCT because there can be multiple bills in the same day that a To Do is created.
            'HILO::' || ci_td_entry.td_entry_id || '::' || ci_sa.account_id
                || '::' || ci_sa.integration_id     --20141022 bn - per brians request
               integration_id,
            3000 datasource_num_id,
            SYSDATE w_insert_dt,
            SYSDATE w_update_dt,
            0 w_load_number,
            NULL BILL_ID,
            ci_sa.account_id account_cid,
            ci_sa.account_id AS account_id,              --account.account_id,
            ci_td_type_l.integration_id td_type_cd,
            ci_td_type_l.description td_type_description,
            trunc(ci_td_entry.create_dttm),
            MIN (ci_bill.completion_date) completion_date,
            ROUND (MIN (ci_bill.completion_date) - ci_td_entry.create_dttm, 0)
               number_of_days,
            ci_td_entry.td_entry_id,
            ci_td_entry.complete_user_id,
            ci_td_drlkey.drill_value key_value,
            ci_mr.integration_id mr_id,
            PREMISE.premise_id,
            SP.SP_ID,
            CI_SA.INTEGRATION_ID SA_ID            --20141020 BN - New requirement per Brian P.
       FROM wc_ccb_td_entry_s CI_TD_ENTRY,
            wc_ccb_td_type_s ci_td_type_l,
            wc_ccb_td_drlkey_s ci_td_drlkey,
            wc_ccb_mr_s ci_mr,
            (SELECT td_entry_id, char_val_fk1 premise_id
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'PREMISE'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'PREMISE')) PREMISE,
            (SELECT td_entry_id, char_val_fk1 SP_ID
               FROM wc_ccb_td_entry_cha_s ci_td_entry_cha
              WHERE     char_type_cd = 'C1-SP'
                    AND seq_num =
                           (SELECT MAX (t.seq_num)
                              FROM wc_ccb_td_entry_cha_s t
                             WHERE     t.td_entry_id =
                                          ci_td_entry_cha.td_entry_id
                                   AND t.char_type_cd = 'C1-SP')) SP,
            wc_ccb_sa_sp_s ci_sa_sp, --Had to make this a subquery due to multiple SAs being started and stopped on the same day
            wc_ccb_sa_s ci_sa,
            wc_ccb_bill_s ci_bill                                          --1
      WHERE     1 = 1
            AND CI_TD_ENTRY.todo_type_code = 'TD-HILO'
            AND ci_td_entry.todo_type_code = ci_td_type_l.integration_id
			and ci_td_type_l.integration_id  = 'TD-HILO' --20141113 bn - tuning
            AND ci_td_entry.integration_id = ci_td_drlkey.td_entry_id
            AND ci_td_drlkey.drill_value = ci_mr.integration_id(+)
            AND ci_td_entry.integration_id = PREMISE.td_entry_id(+)
            AND ci_td_entry.integration_id = SP.td_entry_id
            AND SP.sp_id = ci_sa_sp.sp_id
            and ci_sa.sa_status_flag <> 70        --20141007 bn - need to make sure that the sa is not cancelled.
            AND ci_sa_sp.start_date <> nvl(ci_sa_sp.stop_date, TO_DATE ('1/1/2099','mm/dd/yyyy'))
            AND TRUNC (ci_td_entry.create_dttm) BETWEEN TRUNC (
                                                           ci_sa_sp.start_date+1)  --Need to account for if an SA SP is stopped and started on the same day.
                                                    AND TRUNC (
                                                           NVL (
                                                              ci_sa_sp.stop_date,
                                                              TO_DATE (
                                                                 '1/1/2099',
                                                                 'mm/dd/yyyy')))
            AND ci_sa_sp.sa_id = ci_sa.integration_id
            AND TRIM (ci_sa_sp.start_mr_id) IS NOT NULL
            AND ci_sa.account_id = ci_bill.account_id                      --1
            AND TRUNC (ci_td_entry.create_dttm) BETWEEN TRUNC (
                                                           ci_bill.create_date)
                                                    AND TRUNC (
                                                           ci_bill.completion_date) --20140929 bn - per Brian, if the To Do is created the same day as the Bill is created, the To Do should be counted.
   --and ci_td_entry.td_entry_id in ('55970890435724','89602317166853','88783497703783','98752800341663','20627172739017','56246051807583')
            --20141007 bn - new filter to only get to dos related to bills with gas sas.
            and exists (select 1 from wc_ccb_bseg_s, wc_ccb_sa_s, wc_ccb_sa_type_s
                                           where wc_ccb_bseg_s.sa_id = wc_ccb_sa_s.integration_id
                                                 and wc_ccb_sa_s.sa_type_code || '::' || wc_ccb_sa_s.cis_division = wc_ccb_sa_type_s.integration_id
                                                 and wc_ccb_sa_type_s.service_type_code = 'G'
                                                 and wc_ccb_bseg_s.bill_id = ci_bill.integration_id
                                                 and wc_ccb_sa_s.integration_id = ci_sa.sa_id       --20141014 bn - to only get the To Dos associated with SAs that are part of the Gas Bill
                                           )
   GROUP BY ci_sa.account_id,
            ci_td_type_l.integration_id,
            ci_td_type_l.description,
            ci_td_entry.create_dttm,
            ci_td_entry.td_entry_id,
            ci_td_entry.complete_user_id,
            ci_td_drlkey.drill_value,
            ci_mr.integration_id,
            PREMISE.premise_id,
            SP.SP_ID,
            CI_SA.INTEGRATION_ID        --20141022 BN - PER BRIANS REQUEST
;
            
		
			
 --20141006 BN - For ACI Status report.
CREATE OR REPLACE VIEW WC_CCB_CASE_TYPE_DS_V AS SELECT * FROM WC_CCB_CASE_TYPE_S;
CREATE OR REPLACE VIEW WC_CCB_CASE_STATUS_DS_V AS SELECT * FROM WC_CCB_CASE_STATUS_S;



--20141212 bn - for the meters report (pam requested an inactive meters report but she can choose to only see inactve by picking the prompt.
--20150409 bn - Changing logic to get active Meters by removing the outerjoin filter on ci_sa_sp that checks the start mr id is not null.  Pam W would like to only filter on the SA/SP Stop Date is NULL since Pending Start do not have the Start MR ID populated.
CREATE OR REPLACE VIEW MDW.WC_CCB_CURRENT_SP_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   SA_SP_ACTIVE_INACTIVE_FLAG,
   ACTIVE_SA_ID,
   ACTIVE_SA_SP_START_DATE,
   INACTIVE_SA_ID,
   MOST_RECENT_SA_SP_STOP_DATE,
   SP_ID,
   METER_LOCATION_CODE,
   DISCONNECT_LOCATION_DESC,
   SP_STATUS_DESCRIPTION,
   SP_SOURCE_STATUS_DESCRIPTION,
   PREMISE_ID,
   PREMISE_ADDRESS1,
   PREMISE_CITY,
   PREMISE_STATE,
   PREMISE_POSTAL,
   PREMISE_COUNTRY,
   TOWN,
   OFFICE_LOCATION,
   GRID,
   METER_ID,
   BADGE_NUMBER,
   METER_SIZE,
   MTR_START_READ_DATE,
   SA_START_DATE,
   ACCOUNT_CID
)
AS
   SELECT to_char(rownum) integration_id,
          3000 datasource_num_id,
          SYSDATE w_insert_dt,
          SYSDATE w_update_dt,
          0 w_load_number,
          SA_SP_Active_Inactive_Flag,
          active_sa_id, --Active is if there is an SA SP relationship, not if the actual SA is active or not.
          active_sa_sp_start_date,
          inactive_sa_id,
          most_recent_sa_sp_stop_date,
          sp_id,
          meter_location_code,
          disconnect_location_desc,
          sp_status_description,
          sp_source_status_description,
          premise_id,
          premise_address1,
          premise_city,
          premise_state,
          premise_postal,
          premise_country,
          town,
          office_location,
          grid,
          meter_id,
          badge_number,
          meter_size,
          mtr_start_read_date,
          sa_start_date,
          (SELECT ACCOUNT_ID
             FROM WC_CCB_SA_S
            WHERE WC_CCB_SA_S.INTEGRATION_ID =
                     NVL (ACTIVE_SA_ID, INACTIVE_SA_ID))
             ACCOUNT_CID
     FROM (SELECT (CASE
                      WHEN ci_sa_sp.sa_id IS NOT NULL THEN 'Active'
                      ELSE 'Inactive'
                   END)
                     SA_SP_Active_Inactive_Flag,
                  ci_sa_sp.sa_id active_sa_id, --Active is if there is an SA SP relationship, not if the actual SA is active or not.
                  ci_sa_sp.start_date active_sa_sp_start_date,
                  (SELECT MAX (t.sa_id)
                     FROM wc_ccb_sa_sp_s t
                    WHERE     t.sp_id = ci_sp.sp_id
                          AND ci_sa_sp.sa_id IS NULL
                          AND stop_date =
                                 (SELECT MAX (t.stop_date)
                                    FROM wc_ccb_sa_sp_s t
                                   WHERE     t.sp_id = ci_sp.sp_id
                                         AND ci_sa_sp.sa_id IS NULL))
                     inactive_sa_id,
                  (SELECT MAX (t.stop_date)
                     FROM wc_ccb_sa_sp_s t
                    WHERE t.sp_id = ci_sp.sp_id AND ci_sa_sp.sa_id IS NULL)
                     most_recent_sa_sp_stop_date,
                  ci_sp.sp_id,
                  ci_sp.meter_location_code meter_location_code,
                  ci_discon_loc_l.description disconnect_location_desc,
                  sp_status_flg.sp_status_description,
                  sp_src_status_flg.sp_source_status_description,
                  ci_prem.premise_id premise_id,
                  ci_prem.address1 premise_address1,
                  ci_prem.city premise_city,
                  ci_prem.state premise_state,
                  ci_prem.postal premise_postal,
                  ci_prem.country premise_country,
                  town.town,
                  office_location.office_location,
                  ci_prem_geo.geographic_value grid,
                  ci_mtr.meter_id,
                  ci_mtr.badge_number,
                  meter_size.meter_size,
                  mr_install.start_read_date mtr_start_read_date,
                  ci_sa_sp.start_date sa_start_date
             FROM WC_CCB_SP_S ci_sp,
                  WC_CCB_PREM_S ci_prem,
                  WC_CCB_SP_MTR_HIST_S ci_sp_mtr_hist,
                  WC_CCB_MTR_CONFIG_S ci_mtr_config,
                  WC_CCB_MTR_S ci_mtr,
                  (SELECT *
                     FROM WC_CCB_SA_SP_S ci_sa_sp
                    WHERE sa_id NOT IN (SELECT sa_id
                                          FROM WC_CCB_SA_S ci_sa
                                         WHERE sa_status_flag = '70')) ci_sa_sp, --filtering out cancelled SAs
                  WC_CCB_SP_MTR_EVT_S install,
                  WC_CCB_MR_S mr_install,
                  WC_CCB_PREM_GEO_S ci_prem_geo,
                  WC_CCB_DISCON_LOC_S ci_discon_loc_l,
                  (SELECT field_value, description sp_status_description
                     FROM WC_CCB_LOOKUP_VAL_S ci_lookup_val_l
                    WHERE field_name = 'SP_STATUS_FLG') sp_status_flg,
                  (SELECT field_value,
                          description sp_source_status_description
                     FROM WC_CCB_LOOKUP_VAL_S ci_lookup_val_l
                    WHERE field_name = 'SP_SRC_STATUS_FLG') sp_src_status_flg,
                  (SELECT ci_prem_char.premise_id,
                          ci_char_val_l.description AS town
                     FROM WC_CCB_PREM_CHAR_S ci_prem_char,
                          WC_CCB_CHAR_VAL_L_S ci_char_val_l
                    WHERE     1 = 1
                          AND ci_prem_char.characteristic_type_code =
                                 ci_char_val_l.characteristic_type_code
                          AND ci_prem_char.characteristic_value =
                                 ci_char_val_l.characteristic_value
                          AND ci_prem_char.effective_date =
                                 (SELECT MAX (t.effective_date)
                                    FROM WC_CCB_PREM_CHAR_S t
                                   WHERE     1 = 1
                                         AND t.premise_id =
                                                ci_prem_char.premise_id
                                         AND t.characteristic_type_code =
                                                'TWNCD')
                          AND ci_prem_char.characteristic_type_code = 'TWNCD') town,
                  (SELECT ci_prem_char.premise_id,
                          ci_char_val_l.description AS office_location
                     FROM WC_CCB_PREM_CHAR_S ci_prem_char,
                          WC_CCB_CHAR_VAL_L_S ci_char_val_l
                    WHERE     1 = 1
                          AND ci_prem_char.characteristic_type_code =
                                 ci_char_val_l.characteristic_type_code
                          AND ci_prem_char.characteristic_value =
                                 ci_char_val_l.characteristic_value
                          AND ci_prem_char.effective_date =
                                 (SELECT MAX (t.effective_date)
                                    FROM WC_CCB_PREM_CHAR_S t
                                   WHERE     1 = 1
                                         AND t.premise_id =
                                                ci_prem_char.premise_id
                                         AND t.characteristic_type_code =
                                                'OFCLOC')
                          AND ci_prem_char.characteristic_type_code =
                                 'OFCLOC') office_location,
                  (SELECT ci_mtr_char.meter_id,
                          ci_mtr_char.characteristic_value meter_size
                     FROM WC_CCB_MTR_CHAR_S ci_mtr_char
                    WHERE     1 = 1
                          AND ci_mtr_char.effective_date =
                                 (SELECT MAX (t.effective_date)
                                    FROM WC_CCB_MTR_CHAR_S t
                                   WHERE     1 = 1
                                         AND t.meter_id =
                                                ci_mtr_char.meter_id
                                         AND t.characteristic_type_code =
                                                'MTRSIZE')
                          AND ci_mtr_char.characteristic_type_code =
                                 'MTRSIZE') meter_size
            WHERE     1 = 1
                  AND ci_sp.sp_status_flag = sp_status_flg.field_value(+)
                  AND ci_sp.sp_source_status_flag =
                         sp_src_status_flg.field_value(+)
                  AND ci_sp.premise_id = ci_prem.premise_id
                  AND ci_prem.premise_id = town.premise_id(+)
                  AND ci_prem.premise_id = office_location.premise_id(+)
                  AND ci_sp.sp_id = ci_sp_mtr_hist.sp_id
                  AND ci_sp_mtr_hist.removal_date IS NULL --Only want records that currently have  meters.
                  AND ci_sp_mtr_hist.meter_config_id =
                         ci_mtr_config.integration_id
                  AND ci_mtr_config.meter_id = ci_mtr.integration_id
                  AND ci_mtr.integration_id = meter_size.meter_id(+)
                  AND ci_sp.sp_id = ci_sa_sp.sp_id(+)
                  AND ci_sa_sp.stop_date(+) IS NULL
                  --20150409 bn - AND ci_sa_sp.start_mr_id(+) IS NOT NULL       --20150409 bn - Changing logic to get active Meters.  Pam would like to only filter on the SA/SP Stop Date is NULL since Pending Start do not have the Start MR ID populated.
                  AND ci_sp_mtr_hist.integration_id =
                         install.sp_meter_history_id(+)
                  AND install.sp_meter_event_type(+) = 'I'
                  AND install.meter_read_id = mr_install.integration_id(+)
                  AND ci_sp.disconnected_location_code =
                         ci_discon_loc_l.integration_id(+)
                  AND ci_prem.premise_id = ci_prem_geo.premise_id(+)
                  AND ci_prem_geo.geographic_type_code(+) = 'GRIDCODE'
                  --   and office_location.office_location in (
                  --   'Missouri Natural Central'
                  --  'St Charles (Laclede)'
                  -- 'Franklin (Missouri Natural)'
                  -- 'Missouri Natural North'
                  --   'Midwest (Missouri Natural)'
                  --  'Missouri Natural South'
                  --    )
                  --AND ci_sp.sp_id = '9519350708'
);

--20150128 BN - FOR NSF REPORT
CREATE OR REPLACE VIEW WC_CCB_NSF_SFS_V AS
SELECT 
    a.sa_id || '::' || to_char(a.nsf_accounting_date, 'YYYYMMDD') INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    a.CUSTOMER_CLASS,
    a.sa_type_code,
    a.ACCOUNT_ID ACCOUNT_ID, 
    a.ACCT_CID ACCOUNT_CID, 
    a.SA_ID, 
    a.NSF_ACCOUNTING_DATE, 
    SUM(a.NSF_FEE) NSF_FEE,         --NSF Charges to SA
    SUM(a.NSF_CANC_REVERSE) NSF_CANC_REVERSE,       --Cancelled/Reversed NSF Charges
    min(NSF_CHECK_FA_TONN_RECON_FLAG) NSF_CHECK_FA_TONN_RECON_FLAG      --NSF Charged, Customer Paid by Check, FA TONN/RECON Pending/Completed
FROM 
(
    /*
        Non-Sufficient Funds Charges
    */
    select
               ci_cust_cl_l.customer_class_description customer_class,
               ci_sa.account_id,
               ci_sa.account_id acct_cid,
               ci_sa.sa_type_code,
               ci_sa.sa_id,
           ft_nsf_fee.accounting_date nsf_accounting_date,
           sum(ft_nsf_fee.cur_amt) nsf_fee,
           0 nsf_canc_reverse,
           'N' NSF_CHECK_FA_TONN_RECON_FLAG
    from
        (
         --20150128 bn -     select sa_id, sum(current_amount) cur_amt, accounting_date, trunc(create_date) create_date
         --20150128 bn -     from wc_ccb_ft_s ci_ft
         --20150128 bn -     where 
         --20150128 bn -         ft_type_flag = 'AD'
         --20150128 bn -         and parent_id = 'NSF'
         --20150128 bn -   group by sa_id, accounting_date, trunc(create_date)
            WC_CCB_NSF_FT_AD_TMP
        ) ft_nsf_fee,      
        wc_ccb_sa_s ci_sa,
        wc_ccb_acct_s ci_acct,
        wc_ccb_cust_cl_s ci_cust_cl_l
    where 1=1
        and ci_sa.integration_id = ft_nsf_fee.sa_id
        and ci_sa.account_id = ci_acct.integration_id
        and ci_acct.customer_class_code = ci_cust_cl_l.customer_class_code
        --and ci_cust_cl_l.language_cd = 'ENG'
    group by
        ci_cust_cl_l.customer_class_description,
        ci_sa.account_id,
        ci_sa.sa_id,
        ci_sa.sa_type_code,
        ft_nsf_fee.accounting_date
    UNION ALL
    /*
        Cancelled / Reversed Non-Sufficient Funds Charges
    */
    select
               ci_cust_cl_l.customer_class_description customer_class,
               ci_sa.account_id,
               ci_sa.account_id acct_cid,
               ci_sa.sa_type_code,
               ci_sa.sa_id,
           ft_nsf_fee_canc_reversal.accounting_date nsf_accounting_date,
           0 nsf_fee,
           sum(ft_nsf_fee_canc_reversal.cur_amt) nsf_canc_reverse,
           'N' NSF_CHECK_FA_TONN_RECON_FLAG
    from
       (
            select sa_id, sum(current_amount) cur_amt, accounting_date
            from wc_ccb_ft_s ci_ft
            where 
                ft_type_flag = 'AX'
                and parent_id = 'NSF'
            group by sa_id, accounting_date
        ) ft_nsf_fee_canc_reversal,  
              
        wc_ccb_sa_s ci_sa,
        wc_ccb_acct_s ci_acct,
        wc_ccb_cust_cl_s ci_cust_cl_l
    where 1=1
        and ci_sa.integration_id = ft_nsf_fee_canc_reversal.sa_id
        and ci_sa.account_id = ci_acct.integration_id
        and ci_acct.customer_class_code = ci_cust_cl_l.customer_class_code
        --and ci_cust_cl_l.language_cd = 'ENG'
    group by
        ci_cust_cl_l.customer_class_description,
        ci_sa.account_id,
        ci_sa.sa_id,
        ci_sa.sa_type_code,
        ft_nsf_fee_canc_reversal.accounting_date
    UNION ALL
        /*  
            For Zachary Hall's requirement to see if there was, in this order, an NSF Fee Charged, then a payment (Check or Auto Pay Checking) made, and then a Pending or Completed Turn-On or Reconnect FA.  These must all happen on the same SA.
        */
        (   --20141230 bn - need distinct in case there were multiple cancelled payments created on the same day.
             select 
               DISTINCT 
               ci_cust_cl_l.customer_class_description customer_class,
               ci_sa.account_id,
               ci_sa.account_id acct_cid,
               ci_sa.sa_type_code,
               ci_sa.sa_id,
               TRUNC(ci_fa.create_date) nsf_accounting_date,
               0 nsf_fee,
               0 nsf_canc_reverse,
               'Y' NSF_CHECK_FA_TONN_RECON_FLAG
             from 
                --20150128 bn - wc_ccb_ft_s ft_ps,
                wc_ccb_nsf_ft_tmp ft_ps, 
                wc_ccb_pay_seg_s ci_pay_seg, 
                wc_ccb_pay_s ci_pay, 
                wc_ccb_pay_tndr_s ci_pay_tndr,
                wc_ccb_sa_s ci_sa,
                wc_ccb_acct_s ci_acct,
                wc_ccb_cust_cl_s ci_cust_cl_l,
                --20150128 BN - wc_ccb_fa_s ci_fa,
                WC_CCB_NSF_FA_TMP ci_fa,
                wc_ccb_sa_sp_s ci_sa_sp
             where 1=1 
                and ci_sa.integration_id = ft_ps.sa_id
               --20150128 bn -  and ft_ps.ft_type_flag = 'PS'
                and ft_ps.sibling_id = ci_pay_seg.integration_id
                and ci_sa.account_id = ci_acct.integration_id
                and ci_acct.customer_class_code = ci_cust_cl_l.integration_id
                --and ci_cust_cl_l.language_code = 'ENG'

                and ci_pay_seg.payment_id = ci_pay.integration_id
                and ci_pay.pay_event_id = ci_pay_tndr.payment_event_id
                and ci_pay_tndr.tender_type_code in (        --Only care if the payment after the NSF fee is by Check
                    'APCK', --Checking - Auto Pay
                    'CHEC' --Check
                   )  
                and ci_fa.service_point_id = ci_sa_sp.sp_id
                and ci_sa_sp.sa_id = ci_sa.integration_id
                and trunc(ci_fa.create_date) between trunc(ci_sa_sp.start_date) and nvl(trunc(ci_sa_sp.stop_date), to_date('1/1/4712','mm/dd/yyyy'))
                --20150128 BN - and ci_fa.activity_type_code in ('M-ON','M-RECON')    --FA must be a turn on or reconnect.  These are the FA Types John Lair gave me.
                --20150128 BN - and ci_fa.fa_status_flag in ('P','C')    --Want Pending and Complete FAs
                and trunc(ci_fa.create_date) >= trunc(ft_ps.create_date)
                and ci_sa_sp.sa_id = ft_ps.sa_id             
           /*   --20150128 bn - included in temp table logic now.
                and exists        --NSF logic
                  (
                        select sa_id
                        from WC_CCB_NSF_FT_AD_TMP ci_ft
                        --20150128 bn -   from wc_ccb_ft_s ci_ft
                        where 1=1
                           --20150128 bn -  ft_type_flag = 'AD'
                           --20150128 bn -  and parent_id = 'NSF'
                            and ci_ft.sa_id = ft_ps.sa_id
                            and ci_ft.create_date <= trunc(ft_ps.create_date)
                    )
                    */
            ) 
) a

WHERE 1=1
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'JUL-13', 'AUG-13','SEP-13')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'OCT-13', 'NOV-13','DEC-13')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'JAN-14', 'FEB-14','MAR-14')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'APR-14', 'MAY-14','JUN-14')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'APR-14' )--, 'MAY-14','JUN-14')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'MAY-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'JUN-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'JUL-14' )--, 'AUG-14','SEP-14')
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'AUG-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'SEP-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'OCT-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'NOV-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'DEC-14' )
    --to_char(a.NSF_ACCOUNTING_DATE, 'MON-YY') IN ( 'OCT-14', 'NOV-14','DEC-14')
   
    --  acct_id =          -- '0762901000' 
    --            '5857940000'
    --exists (select acct_id from ci_acct where bud_plan_cd is not null and a.acct_id = ci_acct.acct_id)
GROUP BY 
    a.CUSTOMER_CLASS, 
    a.sa_type_code,
    a.account_id, 
    a.ACCT_CID, 
    a.SA_ID, 
    a.NSF_ACCOUNTING_DATE
--ORDER BY a.account_id asc, nsf_accounting_date desc  

;



--20150309 BN - FOR SCHOOL AGGREGATION ADDITION AND DELETION REPORT FOR RAMONA
CREATE OR REPLACE VIEW WC_CCB_SCHOOL_AGG_CHANGE_SFS_V AS
SELECT  

        to_char(snapshot.snapshot_date,'MON-YY') 
            || '::' || to_char(ci_acct.INTEGRATION_ID)
            || '::' || to_char(ci_sa.INTEGRATION_ID)
            || '::' || to_char(ci_sp.INTEGRATION_ID)
            || '::' || to_char(ci_prem_on_sp.INTEGRATION_ID)
            || '::' || TO_CHAR(ROWNUM) INTEGRATION_ID,
        3000 DATASOURCE_NUM_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        0 W_LOAD_NUMBER,
		
		to_char(snapshot.snapshot_date,'MON-YY') period,
        
        SNAPSHOT.SNAPSHOT_DATE SNAPSHOT_DATE,
        TO_CHAR(SNAPSHOT.SNAPSHOT_DATE, 'MM') SNAPSHOT_MONTH_NUMBER,
        TO_CHAR(SNAPSHOT.SNAPSHOT_DATE, 'YYYY') SNAPSHOT_YEAR,
        
        CI_ACCT.ACCOUNT_ID ACCOUNT_ID,
        
        CI_SA.SA_ID,
        CI_SP.SP_ID,
        CI_PREM_ON_SP.PREMISE_ID,
        
        CI_SA.SA_STATUS_FLAG SA_STATUS_FLAG,
        CI_SA.START_OPTION_CODE START_OPT_CODE,
        CI_SA.START_DATE SA_START_DATE,
        CI_SA.END_DATE SA_END_DATE,
        
        CI_SA_SP.START_DATE SA_SP_START_DATE,
        CI_SA_SP.STOP_DATE SA_SP_STOP_DATE,
        (CASE WHEN STOP_MR_ID IS NULL THEN 'Y' ELSE 'N' END) SA_SP_CONN_FLAG,       --If the SA SP is still started
        
        CI_SP.SP_TYPE_CODE SP_TYPE_CODE,
        
        CI_PREM_ON_SP.ADDRESS1 PREMISE_ADDRESS1,
        CI_PREM_ON_SP.ADDRESS2 PREMISE_ADDRESS2,
        CI_PREM_ON_SP.CITY PREMISE_CITY,
        CI_PREM_ON_SP.STATE PREMISE_STATE,
        CI_PREM_ON_SP.POSTAL PREMISE_ZIP,
        
        CI_PER_NAME.PERSON_NAME ENTITY_NAME,             --PRIMARY PERSON
        CI_ACCT.BILL_CYCLE_CODE BILL_CYCLE,

        CI_SA_TYPE_l.DESCRIPTION SA_TYPE,

        CI_PREM.ADDRESS1 ACCT_PREM_SERVICE_ADDRESS1,
        CI_PREM.ADDRESS2 ACCT_PREM_SERVICE_ADDRESS2,
        CI_PREM.CITY ACCT_PREM_SERVICE_CITY,
        CI_PREM.STATE ACCT_PREM_SERVICE_STATE,
        CI_PREM.POSTAL ACCT_PREM_SERVICE_ZIP,
        
        
        
    /* All the below Service Address need logic added to them */
    CASE WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'ACOV' THEN  CI_PER_ADDR_OVRD.ADDRESS1
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PER' THEN CI_PER.ADDRESS1
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PREM' THEN CI_PREM.ADDRESS1
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'SOMETHINGHERE' THEN NULL   --For Seasonal Address but no available.
                ELSE NULL
    END MAILING_ADDRESS1,
    CASE WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'ACOV' THEN CI_PER_ADDR_OVRD.ADDRESS2
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PER' THEN CI_PER.ADDRESS2
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PREM' THEN CI_PREM.ADDRESS2
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'SOMETHINGHERE' THEN NULL   --For Seasonal Address but no available.
                ELSE NULL
    END MAILING_ADDRESS2,     
    CASE WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'ACOV' THEN  CI_PER_ADDR_OVRD.CITY
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PER' THEN CI_PER.CITY
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PREM' THEN CI_PREM.CITY
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'SOMETHINGHERE' THEN NULL   --For Seasonal Address but no available.
                ELSE NULL
    END MAILING_CITY,    
    CASE WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'ACOV' THEN CI_PER_ADDR_OVRD.STATE
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PER' THEN CI_PER.STATE
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PREM' THEN CI_PREM.STATE
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'SOMETHINGHERE' THEN NULL   --For Seasonal Address but no available.
                ELSE NULL
    END MAILING_STATE,    
    CASE WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'ACOV' THEN CI_PER_ADDR_OVRD.POSTAL
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PER' THEN CI_PER.POSTAL
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'PREM' THEN CI_PREM.POSTAL
                WHEN CI_ACCT_PER.BILL_ADDRESS_SOURCE_FLAG = 'SOMETHINGHERE' THEN NULL   --For Seasonal Address but no available.
                ELSE NULL
    END MAILING_ZIP,  
    CI_ACCT_PER_filtered.RELATIONSHIP_TYPE_CODE SCHOOL_AGGREGATION_CODE,
    CI_ACCT_REL_TYP_L_filtered.DESCRIPTION SCHOOL_AGG_CODE_DESCRIPTION,
    CI_PER_NAME_filtered.PERSON_NAME SCHOOL_AGGREGATOR,
    CI_ACCT.BILL_PRINT_INTERCEPT SPECIAL_HANDLING_CODE,
	
	CI_PREM_ON_SP.PREMISE_TYPE_CODE
    
FROM
    wc_ccb_acct_s CI_ACCT,     --ACCOUNT
    wc_ccb_acct_per_s CI_ACCT_PER, --MAIN CUSTOMER
    wc_ccb_per_s CI_PER,      --Main Person
    wc_ccb_per_name_s CI_PER_NAME, --MAIN PERSON
    wc_ccb_sa_type_l_s CI_SA_TYPE_L,--SA Type
    wc_ccb_sa_s CI_SA,       --SA
    wc_ccb_sa_sp_s CI_SA_SP,    --SA SP Relationship <- An SA can be associated with multiple SPs.  Example: SA_ID 9140711226
    wc_ccb_sp_s CI_SP,       --SP 
    wc_ccb_prem_s CI_PREM_ON_SP, --Premise that is attached to the SA/SP
    
    wc_ccb_acct_per_s CI_ACCT_PER_filtered,           --SCHOOL AGG
    wc_ccb_acct_rel_typ_l_s CI_ACCT_REL_TYP_L_filtered,
    wc_ccb_per_name_s CI_PER_NAME_filtered,

    wc_ccb_prem_s CI_PREM,    --Premise for Mailing Address
    wc_ccb_per_addr_ovrd_s CI_PER_ADDR_OVRD,
    (SELECT * FROM wc_ccb_per_addr_seas_s CI_PER_ADDR_SEAS WHERE SEQUENCE_NUMBER = (SELECT MAX(TMP.SEQUENCE_NUMBER) FROM wc_ccb_per_addr_seas_s TMP WHERE TMP.PERSON_ID = CI_PER_ADDR_SEAS.PERSON_ID)) CI_PER_ADDR_SEAS,
    
             (select * from wc_ccb_sa_conterm_s ci_sa_conterm 
             where BILL_FACTOR_CODE = 'AGG'
                and START_DATE = (select max(t.START_DATE) from wc_ccb_sa_conterm_s  t
                                where t.BILL_FACTOR_CODE = 'AGG'
                                    and ci_sa_conterm.sa_id = t.sa_id
                               )
            )CI_SA_CONTERM,
    (SELECT SNAPSHOT_DATE FROM WC_SNAPSHOT_MD WHERE ROW_WID = 8) snapshot
 
WHERE 1=1
    AND CI_ACCT.INTEGRATION_iD = CI_ACCT_PER.ACCOUNT_ID(+)
    AND CI_ACCT_PER.MAIN_CUSTOMER_FLAG(+) = 'Y'
    AND CI_ACCT_PER.PERSON_ID = CI_PER.INTEGRATION_ID(+)
    AND CI_PER.INTEGRATION_ID = CI_PER_NAME.PERSON_ID(+)
    AND CI_PER_NAME.PRIMARY_NAME_FLAG(+) = 'Y'
    AND CI_ACCT.INTEGRATION_iD = CI_SA.ACCOUNT_ID
    AND CI_SA.INTEGRATION_ID = CI_SA_SP.SA_ID(+)      
    AND CI_SA_SP.SP_ID = CI_SP.INTEGRATION_ID(+)
    AND CI_SP.PREMISE_ID = CI_PREM_ON_SP.INTEGRATION_ID(+)
    AND CI_SA.SA_TYPE_CODE = CI_SA_TYPE_L.SA_TYPE_CODE
    AND CI_SA.CIS_DIVISION = CI_SA_TYPE_L.CIS_DIVISION
    AND CI_ACCT.INTEGRATION_ID = CI_ACCT_PER_filtered.ACCOUNT_ID (+)
    AND CI_ACCT_PER_filtered.RELATIONSHIP_TYPE_CODE(+)  IN ('ARCHSL','LER','ICHSSL', 'ISSL', 'LUTH', 'SEM')  --Hardcoded
    AND CI_ACCT_PER_filtered.RELATIONSHIP_TYPE_CODE = CI_ACCT_REL_TYP_L_filtered.ACCOUNT_REL_TYPE_CODE(+)
    AND CI_ACCT_REL_TYP_L_filtered.LANGUAGE_CODE(+) = 'ENG'
    AND CI_ACCT_PER_filtered.PERSON_ID =  CI_PER_NAME_filtered.PERSON_ID (+)
    AND CI_ACCT.MAILING_PREMISE_ID = CI_PREM.INTEGRATION_ID (+)
    AND CI_ACCT_PER.PERSON_ID = CI_PER_ADDR_OVRD.PERSON_ID (+)
    AND CI_ACCT_PER.ACCOUNT_ID = CI_PER_ADDR_OVRD.ACCOUNT_ID (+)
    AND CI_ACCT_PER.PERSON_ID = CI_PER_ADDR_SEAS.PERSON_ID (+)
    --Report Sepcific filter for data
   -- AND CI_ACCT.BILL_CYC_CD = '1A'    --20150309 bn - per email from Nicole/Rhonda/Ramona, they only want to see the filter where AGG is the Contract Rider.
    AND CI_SA.INTEGRATION_ID = CI_SA_CONTERM.SA_ID
    AND CI_SA_CONTERM.BILL_FACTOR_CODE = 'AGG'
;

			
			
--20150313 bn - for Residential Usage by Zip Code REPORT
CREATE OR REPLACE VIEW WC_CCB_USAGE_BILLS_SFS_V
AS
SELECT
    TO_CHAR(BSEG_F.END_DATE, 'MON-YY') || '::' || ACCT_D.CUSTOMER_CLASS_CODE || '::' || SUBSTR(ACCT_D.POSTAL,0,5) INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    ACCT_D.CUSTOMER_CLASS_CODE,
    SUBSTR(ACCT_D.POSTAL,0,5) ZIP_CODE,
    TO_CHAR(BSEG_F.END_DATE, 'MON-YY') BSEG_END_PERIOD,
    sum(ci_bseg_sq.BILLABLE_SERVICE_QUANTITY) BILLED_THERMS,
    COUNT(DISTINCT BSEG_F.BILL_ID) DISTINCT_BILL_ID
FROM
    WC_CCB_ACCOUNT_D ACCT_D,
    WC_CCB_BILL_SEGMENT_F BSEG_F,
    wc_ccb_bseg_sq_s CI_BSEG_SQ
WHERE 1=1
    AND ACCT_D.ROW_WID = BSEG_F.SA_ACCOUNT_WID  
    AND BSEG_F.INTEGRATION_ID = CI_BSEG_SQ.BILL_SEGMENT_ID
    AND CI_BSEG_SQ.UNIT_OF_MEASURE_CODE = 'TH'
    AND BSEG_F.CANCEL_REASON_CODE IS NULL
GROUP BY
    ACCT_D.CUSTOMER_CLASS_CODE,
    SUBSTR(ACCT_D.POSTAL,0,5),
    TO_CHAR(BSEG_F.END_DATE, 'MON-YY')
;

			
			
            
--20150420 BN - For Red Flag Audit REPORT
CREATE OR REPLACE VIEW MDW.WC_CCB_CREDIT_RATING_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT_CID,
   SA_CID,
   ACCOUNT_ID,
   CREDIT_RATING_HISTORY_ID,
   PAY_PLAN_ID,
   USER_ID,
   COLLECTION_PROCESS_ID,
   START_DATE,
   SEVERANCE_PROCESS_ID,
   END_DATE,
   AFFECT_CREDIT_RATING_BY,
   AFFECT_CASH_ONLY_SCORE_BY,
   CREATION_DATE,
   CREATED_BY,
   EVENT_SEQUENCE,
   VERSION,
   COMMENTS,
   WRITE_OFF_PROCESS_ID,
   START_CREDIT_RATING_POINT,
   DUP_SSN_FOUND,
   SSN
)
AS
   SELECT WC_CCB_CR_RAT_HIST_S.INTEGRATION_ID || '::' || WC_CCB_SA_S.INTEGRATION_ID,
          WC_CCB_CR_RAT_HIST_S.DATASOURCE_NUM_ID,
          WC_CCB_CR_RAT_HIST_S.W_INSERT_DT,
          WC_CCB_CR_RAT_HIST_S.W_UPDATE_DT,
          WC_CCB_CR_RAT_HIST_S.W_LOAD_NUMBER,
          WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID,
          WC_CCB_SA_S.INTEGRATION_ID,
          WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID,
          WC_CCB_CR_RAT_HIST_S.CREDIT_RATING_HISTORY_ID,
          WC_CCB_CR_RAT_HIST_S.PAY_PLAN_ID,
          WC_CCB_CR_RAT_HIST_S.USER_ID,
          WC_CCB_CR_RAT_HIST_S.COLLECTION_PROCESS_ID,
          WC_CCB_CR_RAT_HIST_S.START_DATE,
          WC_CCB_CR_RAT_HIST_S.SEVERANCE_PROCESS_ID,
          WC_CCB_CR_RAT_HIST_S.END_DATE,
          WC_CCB_CR_RAT_HIST_S.AFFECT_CREDIT_RATING_BY,
          WC_CCB_CR_RAT_HIST_S.AFFECT_CASH_ONLY_SCORE_BY,
          WC_CCB_CR_RAT_HIST_S.CREATION_DATE,
          WC_CCB_CR_RAT_HIST_S.CREATED_BY,
          WC_CCB_CR_RAT_HIST_S.EVENT_SEQUENCE,
          WC_CCB_CR_RAT_HIST_S.VERSION,
          WC_CCB_CR_RAT_HIST_S.COMMENTS,
          WC_CCB_CR_RAT_HIST_S.WRITE_OFF_PROCESS_ID,
          WC_CCB_C0_INSTALLATION_S.START_CREDIT_RATING_POINT,
          CASE WHEN DUP_SSN.ACCOUNT_ID IS NULL THEN 'N' ELSE 'Y' END DUP_SSN_FOUND,
          WC_CCB_ACCOUNT_D.PERSON_ID_NUMBER SSN
     FROM WC_CCB_CR_RAT_HIST_S, WC_CCB_C0_INSTALLATION_S, WC_CCB_SA_S, WC_CCB_SA_TYPE_S,
         (  --This subquery will give us all SSN that below to 2 or more person ids
                 SELECT DISTINCT ACCTPER1.ACCOUNT_ID
                 FROM
                    WC_CCB_PER_ID_S ID1, WC_CCB_PER_ID_S ID2, WC_CCB_ACCT_PER_S ACCTPER1, WC_CCB_ACCT_PER_S ACCTPER2
                 WHERE 1=1
                    AND ID1.ID_TYPE_CODE = 'SSN'
                    AND ID1.ID_TYPE_CODE = ID2.ID_TYPE_CODE
                    AND ID1.PERSON_ID_NUMBER = ID2.PERSON_ID_NUMBER
                    AND ID1.PERSON_ID <> ID2.PERSON_ID
                    AND ID1.PERSON_ID = ACCTPER1.PERSON_ID
                    AND ID2.PERSON_ID = ACCTPER2.PERSON_ID
                    and ACCTPER1.MAIN_CUSTOMER_FLAG = 'Y'    --20150421 BN - Adding filter to only get main person.
                    AND ACCTPER2.MAIN_CUSTOMER_FLAG = 'Y'    --20150421 BN - Adding filter to only get main person.
                    AND ACCTPER1.ACCOUNT_ID <> ACCTPER2.ACCOUNT_ID
             ) DUP_SSN,
         WC_CCB_ACCOUNT_D 
     WHERE WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID = WC_CCB_SA_S.ACCOUNT_ID
        AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.INTEGRATION_ID 
        AND WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE = 'G'
        AND WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID = DUP_SSN.ACCOUNT_ID (+)
        AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCOUNT_D.INTEGRATION_ID
        and wc_ccb_sa_s.SA_STATUS_FLAG <> '70'
        --20150420 BN - Adding custom logic for the Red Flag Audit report... Too many records are being returned.
        AND 
                --Do not want SAs where there was an Active Gas SA in the past 12 months prior to the current SA being started.
                NOT EXISTS (SELECT 1 FROM WC_CCB_SA_S T, WC_CCB_SA_TYPE_S T2
                        WHERE T.ACCOUNT_ID = WC_CCB_SA_S.ACCOUNT_ID    
							AND T.INTEGRATION_ID <> WC_CCB_SA_S.INTEGRATION_ID
                            AND NVL(T.END_DATE, SYSDATE) >= WC_CCB_SA_S.START_DATE-365      --To calculat past 12 months.
                            AND T.SA_TYPE_CODE || '::' || T.CIS_DIVISION = T2.INTEGRATION_ID 
                            AND T2.SERVICE_TYPE_CODE = 'G'
                            AND T.SA_STATUS_FLAG <> '70'
                        )
                        
union all
    --20150421 bn - Need to get all Accounts that the person has not had a Credit Review.
   SELECT WC_CCB_CR_RAT_HIST_S.INTEGRATION_ID || '::' || WC_CCB_SA_S.INTEGRATION_ID,
          WC_CCB_SA_S.DATASOURCE_NUM_ID,
          WC_CCB_SA_S.W_INSERT_DT,
          WC_CCB_SA_S.W_UPDATE_DT,
          WC_CCB_SA_S.W_LOAD_NUMBER,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_SA_S.INTEGRATION_ID,
          WC_CCB_SA_S.ACCOUNT_ID,
          WC_CCB_CR_RAT_HIST_S.CREDIT_RATING_HISTORY_ID,
          WC_CCB_CR_RAT_HIST_S.PAY_PLAN_ID,
          WC_CCB_CR_RAT_HIST_S.USER_ID,
          WC_CCB_CR_RAT_HIST_S.COLLECTION_PROCESS_ID,
          WC_CCB_CR_RAT_HIST_S.START_DATE,
          WC_CCB_CR_RAT_HIST_S.SEVERANCE_PROCESS_ID,
          WC_CCB_CR_RAT_HIST_S.END_DATE,
          0 AFFECT_CREDIT_RATING_BY,
          0 AFFECT_CASH_ONLY_SCORE_BY,
          WC_CCB_CR_RAT_HIST_S.CREATION_DATE,
          WC_CCB_CR_RAT_HIST_S.CREATED_BY,
          WC_CCB_CR_RAT_HIST_S.EVENT_SEQUENCE,
          WC_CCB_CR_RAT_HIST_S.VERSION,
          WC_CCB_CR_RAT_HIST_S.COMMENTS,
          WC_CCB_CR_RAT_HIST_S.WRITE_OFF_PROCESS_ID,
          WC_CCB_C0_INSTALLATION_S.START_CREDIT_RATING_POINT,
          CASE WHEN DUP_SSN.ACCOUNT_ID IS NULL THEN 'N' ELSE 'Y' END DUP_SSN_FOUND,
          WC_CCB_ACCOUNT_D.PERSON_ID_NUMBER SSN
     FROM WC_CCB_CR_RAT_HIST_S, WC_CCB_C0_INSTALLATION_S, WC_CCB_SA_S, WC_CCB_SA_TYPE_S,
         (  --This subquery will give us all SSN that below to 2 or more person ids
                 SELECT DISTINCT ACCTPER1.ACCOUNT_ID
                 FROM
                    WC_CCB_PER_ID_S ID1, WC_CCB_PER_ID_S ID2, WC_CCB_ACCT_PER_S ACCTPER1, WC_CCB_ACCT_PER_S ACCTPER2
                 WHERE 1=1
                    AND ID1.ID_TYPE_CODE = 'SSN'
                    AND ID1.ID_TYPE_CODE = ID2.ID_TYPE_CODE
                    AND ID1.PERSON_ID_NUMBER = ID2.PERSON_ID_NUMBER
                    AND ID1.PERSON_ID <> ID2.PERSON_ID
                    AND ID1.PERSON_ID = ACCTPER1.PERSON_ID
                    AND ID2.PERSON_ID = ACCTPER2.PERSON_ID
                    and ACCTPER1.MAIN_CUSTOMER_FLAG = 'Y'    --20150421 BN - Adding filter to only get main person.
                    AND ACCTPER2.MAIN_CUSTOMER_FLAG = 'Y'    --20150421 BN - Adding filter to only get main person.
                    AND ACCTPER1.ACCOUNT_ID <> ACCTPER2.ACCOUNT_ID
             ) DUP_SSN,
         WC_CCB_ACCOUNT_D 
     WHERE WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID (+) = WC_CCB_SA_S.ACCOUNT_ID
        AND WC_CCB_SA_S.SA_TYPE_CODE || '::' || WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.INTEGRATION_ID 
        AND WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE = 'G'
        AND WC_CCB_SA_S.ACCOUNT_ID = DUP_SSN.ACCOUNT_ID (+)
        AND WC_CCB_SA_S.ACCOUNT_ID = WC_CCB_ACCOUNT_D.INTEGRATION_ID
        and wc_ccb_sa_s.SA_STATUS_FLAG <> '70'
        and WC_CCB_CR_RAT_HIST_S.ACCOUNT_ID is null --20150421 bn - Need to show SAs that the Person has not had a CR run.
        --20150420 BN - Adding custom logic for the Red Flag Audit report... Too many records are being returned.
        AND 
                --Do not want SAs where there was an Active Gas SA in the past 12 months prior to the current SA being started.
                NOT EXISTS (SELECT 1 FROM WC_CCB_SA_S T, WC_CCB_SA_TYPE_S T2
                        WHERE T.ACCOUNT_ID = WC_CCB_SA_S.ACCOUNT_ID  
							AND T.INTEGRATION_ID <> WC_CCB_SA_S.INTEGRATION_ID
                            AND NVL(T.END_DATE, SYSDATE) >= WC_CCB_SA_S.START_DATE-365      --To calculat past 12 months.
                            AND T.SA_TYPE_CODE || '::' || T.CIS_DIVISION = T2.INTEGRATION_ID 
                            AND T2.SERVICE_TYPE_CODE = 'G'
                            AND T.SA_STATUS_FLAG <> '70'
                        )                        
                        
 ;
     
     
	 
--20150529 BN - FOR DIVERSION SA MGE WS3
CREATE OR REPLACE VIEW WC_CCB_DIVERSION_SA_FT_FS_V
AS
select 
    WC_CCB_FT_S.FT_ID INTEGRATION_ID,
    WC_CCB_SA_S.DATASOURCE_NUM_ID,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
    WC_CCB_FT_S.W_LOAD_NUMBER,
    WC_CCB_SA_S.ACCOUNT_ID ACCOUNT_CID,
    TO_CHAR(WC_CCB_FT_S.ACCOUNTING_DATE, 'MON-YY') ACCOUNTING_PERIOD,
    WC_CCB_FT_S.ACCOUNTING_DATE,
    WC_CCB_SA_S.ACCOUNT_ID,
    WC_CCB_SA_S.SA_ID,
    WC_CCB_FT_S.FT_ID,
    CASE WHEN FT_TYPE_FLAG IN ('BS','BX') THEN 1 ELSE 0 END BILLED_COUNT,                 
    CASE WHEN FT_TYPE_FLAG IN ('BS','BX') THEN nvl(CURRENT_AMOUNT,0) ELSE 0 END BILLED_AMOUNT,              --Changed to use Current Amount; not all bills had a payoff amount change.
    CASE WHEN FT_TYPE_FLAG IN ('PS','PX') THEN 1 ELSE 0 END PAID_COUNT, 
    CASE WHEN FT_TYPE_FLAG IN ('PS','PX') THEN nvl(PAYOFF_AMOUNT,0) ELSE 0 END PAID_AMOUNT,
    CASE WHEN FT_TYPE_FLAG IN ('AD','AX') THEN 1 ELSE 0 END ADJUSTMENT_COUNT, 
    CASE WHEN FT_TYPE_FLAG IN ('AD','AX') THEN nvl(CURRENT_AMOUNT,0) ELSE 0 END ADJUSTMENT_AMOUNT,          --Changed to use Current Amount
    FT_TYPE_FLAG,
    CURRENT_AMOUNT,
    PAYOFF_AMOUNT
from 
    WC_CCB_SA_S, WC_CCB_FT_S
where 1=1
    AND SA_TYPE_CODE IN ('GDIVCOM','GDIVIDOM','GDIVIND','GDIVIIND','GDIVIRES','GDIVRES')
    AND WC_CCB_FT_S.SA_ID = WC_CCB_SA_S.INTEGRATION_ID
    AND FROZEN_POSTED_TO_ACCOUNT_SW = 'Y'
;




--20150601 bn - Created for MGE WS3 M-POST FAs report.
--20150826 bn - updated integration id while rob was putting into prod.
create or replace view wc_ccb_pend_fa_active_sa_sfs_v
as
select 
    f.integration_id || '::' || sa.integration_id 	--20150826 bn - having just fa integration id failed in prod due to multiple sas being active for a single sp.  added sa id to integration id so that prod loads won't fail.
		integration_id,
    f.datasource_num_id,
    f.w_insert_dt w_insert_dt, 
    f.w_update_dt w_update_dt,
    f.w_load_number,
    f.fa_id,
    f.activity_type_code,
    f.fa_cancel_reason_code,
    f.fa_priority_flag,
    f.fa_created_by,
    f.schedule_date,
    f.fa_status_flag,
    f.eligible_for_dispatch_sw,
    f.dispatch_group_code,
    f.field_order_id,
    f.create_date, 
    f.test_selection_id,
    f.user_id,
    f.instructions,
    f.long_description,
    f.fa_version,
    f.appt_period_id,
    f.fa_external_id,
    f.fa_intermediate_status_flag,
    f.fa_reschedule_reason_code,
    f.fa_data_area,
    sa.account_id account_cid, 
    sa.integration_id sa_cid,
    s.premise_id premise_cid,
    f.service_point_id sp_cid
    
from 
    wc_ccb_fa_s f, 
    wc_ccb_sp_s s, 
    wc_ccb_sa_sp_s sasp, 
    wc_ccb_sa_s sa
where f.service_point_id = s.integration_id
--20150601 bn - will include filter on FA Type Code in report
--and f.activity_type_code = 'M-POST'
and f.fa_status_flag = 'P'
and s.integration_id = sasp.sp_id
and sasp.sa_id = sa.integration_id
and sa.sa_status_flag = '20'
;
	 		 
--20150603 BN - For the M-Collection FAs Daily Query to Manually Cancel Severance OBIEE Report.
CREATE OR REPLACE VIEW WC_CCB_DAILY_MCOLL_FA_SFS_V
AS
select 
    F.INTEGRATION_ID || '::' || sa.account_id INTEGRATION_ID, --20151210 bn - Changing the integration id to include account id.  We are running into an issue where ccb is allowing multiple active sas to be associated with a single sp.  I have notified LaVert and Dave Hendershot letting them know that any FA with this mentioned case will be in the report twice, once for each active sa's account.
    F.DATASOURCE_NUM_ID,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
    F.W_LOAD_NUMBER,
    sa.ACCOUNT_ID ACCOUNT_CID,
    trunc(f.CREATE_DATE) FA_CREATION_DATE_TRUNC,
    f.CREATE_DATE as FA_Creation_Date, 
    f.ACTIVITY_TYPE_CODE as FA_TYPE, 
    f.FA_ID, 
    f.FA_STATUS_FLAG, 
    r.ADHOC_CHARACTERISTIC_VALUE as Payment_Amount, 
    sa.ACCOUNT_ID, 
    p.address1, 
    p.city, 
    p.postal
from 
    wc_ccb_fa_s f, 
    wc_ccb_prem_s p, 
    wc_ccb_sp_s s, 
    wc_ccb_sa_sp_s sasp, 
    wc_ccb_sa_s sa, 
    (SELECT * FROM WC_CCB_FA_CHAR_S
           WHERE WC_CCB_FA_CHAR_S.SEQUENCE_NUMBER = (SELECT MAX(TMP.SEQUENCE_NUMBER) FROM WC_CCB_FA_CHAR_S TMP
                                                     WHERE TMP.FA_ID = WC_CCB_FA_CHAR_S.FA_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'CM-PYAMT')
                AND WC_CCB_FA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'CM-PYAMT'
          ) r --payment collected
where f.SERVICE_POINT_ID = s.INTEGRATION_ID
AND f.INTEGRATION_ID = r.FA_ID
and s.PREMISE_ID = p.INTEGRATION_ID
and f.ACTIVITY_TYPE_CODE = 'M-COLL'
and f.FA_STATUS_FLAG IN ('C', 'H', 'X')
and s.INTEGRATION_ID = sasp.sp_id
and sasp.sa_id = sa.INTEGRATION_ID
and sa.SA_STATUS_FLAG = '20'
;


--20150724 bn - tuning prod loads
create or replace view wc_ccb_fa_char_ds_v as select * from wc_ccb_fa_char_s;



--20150928 bn - marketer reports for crickette
--20160128 bn - duplicate record issue caused by prem chars that have effective dates.
--20160714 bn - changing MMBTU and MTRAN around, changing source of WNG, changing logic to get SA REL  <-- Corey is confirming the logic with Matt.
--20161206 RK - fix for mmbtu and mtran and marketer logic
CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_MARK_IMBAL_REPORT_SFS_V"
(
   "INTEGRATION_ID",
   "DATASOURCE_NUM_ID",
   "W_INSERT_DT",
   "W_UPDATE_DT",
   "W_LOAD_NUMBER",
   "ACCOUNT_CID",
   "SA_CID",
   "SPR_CD",
   "AGENT",
   "CHARACTERISTIC_VALUE",
   "POOLNAME",
   "WNG",
   "BLC",
   "TWNCD",
   "DESCRIPTION",
   "ACCOUNT_ID",
   "PERSON_NAME",
   "START_DATE",
   "END_DATE",
   "BILL_SEGMENT_ID",
   "BILL_SEGMENT_STATUS_FLAG",
   "MCF",
   "MMBTU",
   "MTRAN",
   "NOM",
   "IMB"
) AS
   SELECT a.integration_id 
          || '::' 
          || b.integration_id 
          || '::'             --|| c.integration_id             ---RK 20161206
          || d.integration_id --|| '::' || e.integration_id     ---RK 20161206
           integration_id,
          a.datasource_num_id datasource_num_id,
          SYSDATE w_insert_dt,
          SYSDATE w_update_dt,
          0 w_load_number,
          b.account_id account_cid,
          b.sa_id sa_cid,
          POOL.SPR_CD,                                --c.spr_cd,---RK 20161206
          d.description AS Agent,
          POOL.characteristic_value,   --e.characteristic_value, ---RK 20161206
          POOL.description AS PoolName, --f.description AS PoolName, ---RK 20161206
          --20160714 bn - c.sa_ext_ref_id AS WNG,
          l.adhoc_characteristic_value AS WNG, --20160714 bn - update per crickette for WNG
          g.characteristic_value AS BLC,
          h.characteristic_value AS TWNCD,
          i.description,
          b.account_id,
          k.person_name,
          a.start_date,
          a.end_date,
          a.bill_segment_id,
          A.BILL_SEGMENT_STATUS_FLAG,
          b2.billable_service_quantity AS MCF,
          c2.initial_service_quantity AS MMBTU,
          c2.billable_service_quantity AS MTRAN,
          d2.billable_service_quantity AS NOM,
          e2.billable_service_quantity AS IMB
     FROM wc_ccb_bseg_s a,
          wc_ccb_sa_s b,
          --   wc_ccb_sa_rel_s c,           ---RK 20161206
          wc_ccb_spr_s d,
          --    wc_ccb_sa_char_s e,        ---RK 20161206
          --    wc_ccb_char_val_l_s f,      ---RK 20161206
          wc_ccb_prem_char_s g,
          wc_ccb_prem_char_s h,
          wc_ccb_char_val_l_s i,
          wc_ccb_acct_per_s j,
          wc_ccb_per_name_s k,
          wc_ccb_bseg_sq_s b2,
          wc_ccb_bseg_sq_s c2,
          wc_ccb_bseg_sq_s d2,
          wc_ccb_bseg_sq_s e2,
          wc_ccb_sa_char_s l      --20160714 bn - update per crickette for WNG
                            ,
          wc_ccb_bill_s m,            ---RK 20161206
          (SELECT DISTINCT            ---RK 20161206
                  A.*,
                  C.DESCRIPTION,
                  B.CHARACTERISTIC_VALUE,
                  SA_REL_STATUS_FLAG
             FROM WC_CCB_SA_REL_FLAT_TEMP A,
                  WC_CCB_SA_CHAR_S b,
                  WC_CCB_SPR_S C
            WHERE     1 = 1
                  AND A.SA_ID = b.SA_ID
                  AND B.CHARACTERISTIC_TYPE_CODE = 'CM-MKTPL'
                  AND A.SPR_CD = C.SERVICE_PROVIDER_CODE) Pool
    WHERE     a.sa_id = b.integration_id
          --        AND b.integration_id = c.sa_id               ---RK 20161206
          AND a.bill_segment_status_flag = '50'
          AND a.BILL_ID = m.INTEGRATION_ID                       ---RK 20161206
          AND b.integration_id = POOL.SA_ID                      ---RK 20161206
          AND M.BILL_DATE BETWEEN pool.EFFECTIVE_DATE(+)
                              AND pool.to_EFFECTIVE_DATE(+)
          --    AND c.sa_relationship_type_code = 'MRKTR'         ---RK 20161206
          --    AND c.spr_cd = d.service_provider_code       ---RK 20161206
          AND pool.spr_cd = d.service_provider_code                   ---RK 20161206
          --  AND c.sa_id = e.sa_id       ---RK 20161206
          --  AND e.characteristic_type_code = 'CM-MKTPL'---RK 20161206
          --  AND e.characteristic_type_code = f.characteristic_type_code ---RK 20161206
          --  AND e.characteristic_value = f.characteristic_value ---RK 20161206

          AND b.characteristic_premise_id = g.premise_id
          AND g.characteristic_type_code = 'BTUGRP'
          AND g.premise_id = h.premise_id
          AND g.effective_date =
                 (SELECT MAX(effective_date)
                    FROM wc_ccb_prem_char_s tmp
                   WHERE     tmp.characteristic_type_code = 'BTUGRP'
                         AND tmp.premise_id = g.premise_id) --20160128 bn - dup issue
          AND h.characteristic_type_code = 'TWNCD'
          AND h.characteristic_type_code = i.characteristic_type_code
          AND h.characteristic_value = i.characteristic_value
          AND h.effective_date =
                 (SELECT MAX(effective_date)
                    FROM wc_ccb_prem_char_s tmp
                   WHERE     tmp.characteristic_type_code = 'TWNCD'
                         AND tmp.premise_id = h.premise_id) --20160128 bn - dup issue
          AND b.account_id = j.account_id
          AND j.main_customer_flag = 'Y'
          AND j.person_id = k.person_id
          AND k.primary_name_flag = 'Y'
          AND a.integration_id = b2.bill_segment_id(+)
          AND b2.sqi_code(+) = 'MCF'
          AND a.integration_id = c2.bill_segment_id(+)
          AND c2.sqi_code(+) = 'MMBTU'
          AND a.integration_id = d2.bill_segment_id(+)
          AND d2.sqi_code(+) = 'MMBTUN'
          AND a.integration_id = e2.bill_segment_id(+)
          AND e2.sqi_code(+) = 'IMB'
          AND b.integration_id = l.sa_id --20160714 bn - update per crickette for WNG
          AND l.characteristic_type_code = 'TRNSCNRT' --20160714 bn - update per crickette for WNG
          AND l.effective_date =  (SELECT MAX(t.effective_date)  FROM wc_ccb_sa_char_s t --20160714 bn - update per crickette for WNG
                   WHERE     t.sa_id = l.sa_id --20160714 bn - update per crickette for WNG
                         AND t.characteristic_type_code =
                                l.characteristic_type_code --20160714 bn - update per crickette for WNG
                                                          ) --20160714 bn - update per crickette for WNG
--20160714 bn - logic is flawed... multiple Marketers are being picked up for 1 account.
/* ---RK 20161206
          AND c.sa_rel_status_flag = 'A'
          AND c.effective_date =
                 (SELECT MAX(t.effective_date)
                    FROM wc_ccb_sa_rel_s t
                   WHERE     t.sa_id = b.integration_id
                         AND t.sa_rel_status_flag = 'A'
                         AND t.sa_relationship_type_code = 'MRKTR')*/
      ;   
	  
	  
--20150928 BN - NEW TABLE FOR MARKETER SUMMARY REPORT FOR CRICKETTE.
CREATE OR REPLACE VIEW WC_CCB_MARKETER_BAL_REP_SFS_V
AS
SELECT * FROM WC_CCB_MARKETER_BAL_REPORT_S;


--20151207 bn - for customer counts report for cliff / marketing
--20160119 bn - changing the STOP DATE to be defaulted to 2099 instead of sysdate+1.  
create or replace view WC_CCB_CUST_COUNT_REPORT_SFS_V as
     SELECT 
            WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE || '::' || 
            WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE || '::' || 
            WC_CCB_REV_CL_S.REVENUE_CLASS_CODE || '::' || 
            town_code.characteristic_value || '::' ||           --20140425 BN
            WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE || '::' ||       --20140425 BN
            WC_CCB_SA_S.SA_STATUS_FLAG || '::' ||               --20140425 BN
            substr(WC_CCB_PREM_S.POSTAL,0,5) || '::' || --20140619 BN - new requirement per bill to see Count of Active Customers by Zip Code by Rate Class
          --20151207 bn -  TO_CHAR((SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000), 'YYYYMMDD HH24:MM:SS') || '::' || 
            sp_type_code            --20150602 BN - modified due to issues explain in header of view.
            || '::' || wc_ccb_sa_s.sa_id
            || '::' || wc_ccb_sa_sp_s.integration_id
            || '::' || wc_ccb_sp_s.integration_id
            INTEGRATION_ID,
            3000 DATASOURCE_NUM_ID,
            SYSDATE W_UPDATE_DATE,
            SYSDATE W_INSERT_DATE,
            0 W_LOAD_NUMBER,            
           --20151207 bn - no longer needed - (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000) snapshot_date,  --This is when the nightly loads started
           --SYSDATE snapshot_date,
            WC_CCB_PREM_CHAR_S.CHARACTERISTIC_VALUE OFFICE_LOCATION,
            case when wc_ccb_sa_s.sa_type_code = 'GHRES' and wc_ccb_sa_s.cis_division = 'MGE'   --20151207 bn - per discussion with cliff, this logic needs to be implemented
                 then 'MGE-RES'
                 else  WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE
            end RATE_CLASS_CODE,
            case when wc_ccb_sa_s.sa_type_code = 'GHRES' and wc_ccb_sa_s.cis_division = 'MGE'   --20151207 bn - per discussion with cliff, this logic needs to be implemented
                 then 'MGE - Residential'
                 else  WC_CCB_CHAR_VAL_L_S_ratecls.DESCRIPTION
            end RATE_CLASS_DESCRIPTION,
            WC_CCB_REV_CL_S.REVENUE_CLASS_CODE,
            WC_CCB_REV_CL_S.DESCRIPTION REVENUE_CLASS_DESCRIPTION,
            
            --20151207 BN - We need this data at an SA level so we can calculate prior days counts - COUNT (DISTINCT wc_ccb_sa_s.sa_id) active_gas_sa_count,
            wc_ccb_sa_s.sa_id,  --20151207 bn
            
            TOWN_CODE.CHARACTERISTIC_VALUE TOWN_CODE,        --20140425 BN
            WC_CCB_CHAR_VAL_L_S_town_code.description town_code_name, --20151207 bn
            WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE,   --20140425 BN
            WC_CCB_SA_S.SA_STATUS_FLAG,      --20140425 BN
            substr(WC_CCB_PREM_S.POSTAL,0,5) POSTAL,   --20140619 BN - new requirement per bill to see Count of Active Customers by Zip Code by Rate Class
            wc_ccb_sa_s.cis_division,  --20150113 bn - For MGE WS3 - Adding CIS Division
            sp_type_code,     --20150410 bn - For Pams Count of Active Customers report (Order Control version)
            
            --20151207 bn - Additional Data for Customer Counts report
            WC_CCB_SA_SP_S.start_date,
            TRUNC(NVL(WC_CCB_SA_SP_S.STOP_DATE, to_date('1/1/2099','mm/dd/yyyy'))) stop_date
            
            
            
       --  wc_ccb_sa_s.sa_id
       FROM WC_CCB_SA_S,
            WC_CCB_SA_SP_S,
            WC_CCB_SP_S,
            WC_CCB_SA_TYPE_S,
            WC_CCB_REV_CL_S,
            WC_CCB_PREM_S,
            (SELECT *
               FROM WC_CCB_SA_CHAR_S
              WHERE     WC_CCB_SA_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_SA_CHAR_S TMP
                             WHERE     TMP.SA_ID = WC_CCB_SA_CHAR_S.SA_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'RATECLS'
                               --20151207 bn - only need the most recent char value -
                               --     AND tmp.effective_date <= (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000))
                                   and tmp.effective_date <= trunc(sysdate)) --20151207 bn - only need the most recent char value 
                    AND WC_CCB_SA_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_SA_CHAR_S_ratecls,
            (SELECT *
               FROM WC_CCB_CHAR_VAL_L_S
              WHERE CHARACTERISTIC_TYPE_CODE = 'RATECLS') WC_CCB_CHAR_VAL_L_S_ratecls,
            (SELECT *
               FROM WC_CCB_PREM_CHAR_S
              WHERE     WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'OFCLOC'
                              --20151207 bn - only need the most recent char value -
                               --      AND tmp.effective_date <= (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000))
                                   and tmp.effective_date <= trunc(sysdate))   --20151207 bn - only need the most recent char value 
                    AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'OFCLOC') WC_CCB_PREM_CHAR_S,
            (SELECT *
               FROM WC_CCB_PREM_CHAR_S
              WHERE     WC_CCB_PREM_CHAR_S.EFFECTIVE_DATE =
                           (SELECT MAX (TMP.EFFECTIVE_DATE)
                              FROM WC_CCB_PREM_CHAR_S TMP
                             WHERE     TMP.PREMISE_ID =
                                          WC_CCB_PREM_CHAR_S.PREMISE_ID
                                   AND TMP.CHARACTERISTIC_TYPE_CODE = 'TWNCD'
                               --20151207 bn - only need the most recent char value -
                               -- AND tmp.effective_date <= (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000)) 
                                   and tmp.effective_date <= trunc(sysdate))   --20151207 bn - only need the most recent char value 
                    AND WC_CCB_PREM_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'TWNCD') town_code,      --20140425 BN  
            (SELECT *
               FROM WC_CCB_CHAR_VAL_L_S
              WHERE CHARACTERISTIC_TYPE_CODE = 'TWNCD') WC_CCB_CHAR_VAL_L_S_town_code
                                  
      WHERE     1 = 1
            AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_SP_S.SA_ID
            AND WC_CCB_SA_SP_S.SP_ID = WC_CCB_SP_S.INTEGRATION_ID
            AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_S.INTEGRATION_ID  --20140619 BN - new requirement per bill to see Count of Active Customers by Zip Code by Rate Class
            AND WC_CCB_SP_S.PREMISE_ID = WC_CCB_PREM_CHAR_S.PREMISE_ID   --20140425 BN - ADDED OUTERJOIN
            AND WC_CCB_SP_S.PREMISE_ID = town_code.PREMISE_ID            --20140425 BN
            and town_code.characteristic_value = WC_CCB_CHAR_VAL_L_S_town_code.characteristic_value     --20151207 bn
            AND WC_CCB_SA_S.SA_TYPE_CODE = WC_CCB_SA_TYPE_S.SA_TYPE_CODE
            AND WC_CCB_SA_S.CIS_DIVISION = WC_CCB_SA_TYPE_S.CIS_DIVISION
            AND WC_CCB_SA_TYPE_S.REVENUE_CLASS_CODE =
                   WC_CCB_REV_CL_S.INTEGRATION_ID
            AND WC_CCB_SA_S.INTEGRATION_ID = WC_CCB_SA_CHAR_S_ratecls.SA_ID
            AND WC_CCB_SA_CHAR_S_ratecls.CHARACTERISTIC_VALUE =
                   WC_CCB_CHAR_VAL_L_S_ratecls.CHARACTERISTIC_VALUE
                   
            --20140131 BN 
            --AND WC_CCB_SA_S.SA_STATUS_FLAG IN ('10', '20', '30', '50')
    
     --20140425 bn - per meeting on 20140304, changing this logic to look at the SA SP Start and Stop Date
            --AND TRUNC(WC_CCB_SA_S.START_DATE) <= (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000)
            --AND TRUNC(NVL(WC_CCB_SA_S.END_DATE, SYSDATE+1)) >= (SELECT MAX(TRUNC(LOAD_DATE)) FROM WC_CDC_MD WHERE DATASOURCE_NUM_ID = 3000)
            AND WC_CCB_SA_S.SA_STATUS_FLAG <> '70'  --20140131  - ADDED SO THAT WE CAN LOAD HISTORICAL DATA per conversation with Corey.
            
            AND WC_CCB_SA_TYPE_S.SERVICE_TYPE_CODE in ( 'G', 'GU' ) --20140425 bn - Added 'GU' filter
                                                                    --Are we going to run into issue with Active SAs on Payment Arrangements?
                                                                    --Keri will let us know if we need to include GU
;                                                                    




--20151216 BN - New for Tax Exempt report.
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SA_CONTRACTTERM_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   BILL_FACTOR_CODE,
   CONTRACT_TERM_TYPE,
   END_DATE,
   PERCENT_EXEMPT,
   SA_ID,
   START_DATE,
   TAX_CERTIFICATION,
   TAX_EXEMPT_TYPE_CODE,
   TIME_OF_USER_GROUP_CODE,
   VAL,
   SA_CONTERM_VERSION,
   tax_exempt_description,
   account_id,
   SA_CID,
   ACCOUNT_CID
)
AS
   SELECT wc_Ccb_sa_conterm_s.INTEGRATION_ID,
          wc_Ccb_sa_conterm_s.DATASOURCE_NUM_ID,
          wc_Ccb_sa_conterm_s.W_INSERT_DT,
          wc_Ccb_sa_conterm_s.W_UPDATE_DT,
          wc_Ccb_sa_conterm_s.W_LOAD_NUMBER,
          wc_Ccb_sa_conterm_s.BILL_FACTOR_CODE,
          wc_Ccb_sa_conterm_s.CONTRACT_TERM_TYPE,
          wc_Ccb_sa_conterm_s.END_DATE,
          wc_Ccb_sa_conterm_s.PERCENT_EXEMPMT,
          wc_Ccb_sa_conterm_s.SA_ID,
          wc_Ccb_sa_conterm_s.START_DATE,
          wc_Ccb_sa_conterm_s.TAX_CERTIFICATION,
          wc_Ccb_sa_conterm_s.TAX_EXEMPT_TYPE_CODE,
          wc_Ccb_sa_conterm_s.TIME_OF_USER_GROUP_CODE,
          wc_Ccb_sa_conterm_s.VAL,
          wc_Ccb_sa_conterm_s.SA_CONTERM_VERSION,
          wc_ccb_tax_ex_type_s.tax_exempt_description,
          wc_ccb_sa_s.account_id,
          wc_Ccb_sa_conterm_s.SA_ID,
          wc_ccb_sa_s.account_id
     FROM wc_Ccb_sa_conterm_s, wc_ccb_tax_ex_type_s, wc_ccb_sa_s
     where wc_ccb_sa_conterm_s.tax_exempt_type_code = wc_ccb_tax_ex_type_s.integration_id (+)
        and wc_ccb_sa_conterm_s.sa_id = wc_ccb_sa_s.integration_id
;




--20160118 BN - FOR DP DATA REVIEW REPORT
create or replace view wc_ccb_dp_data_review_sfs_v as
select 
    ci_b_ln_char.INTEGRATION_ID,
    ci_b_ln_char.DATASOURCE_NUM_ID,
    ci_b_ln_char.W_INSERT_DT,
    ci_b_ln_char.W_UPDATE_DT,
    ci_b_ln_char.W_LOAD_NUMBER,
    ci_bill_chg.sa_id, 
    ci_lookup_val_l.description sa_status, 
	--20160325 bn - new logic per nargis
	case when instr(ci_b_ln_char.adhoc_characteristic_value,' ')=0 then substr(ci_b_ln_char.adhoc_characteristic_value, 3) else
    substr(ci_b_ln_char.adhoc_characteristic_value, 3,instr(ci_b_ln_char.adhoc_characteristic_value,' ')-3) end maximo_service_order_id,

  --20160325 bn - new logic per nargis  substr(ci_b_ln_char.adhoc_characteristic_value, 3) maximo_service_order_id,
    ci_b_ln_char.adhoc_characteristic_value maxi_service_order_id_nosubstr,
    ci_sa.sa_id sa_cid
from wc_ccb_sa_s ci_sa, 
     wc_ccb_bill_chg_s ci_bill_chg, 
     wc_ccb_b_chg_line_s ci_b_chg_line, 
     wc_ccb_b_ln_char_s ci_b_ln_char, 
     wc_ccb_lookup_val_s ci_lookup_val_l
where 1=1
    and ci_sa.integration_id = ci_bill_chg.sa_id
    and ci_bill_chg.integration_Id = ci_b_chg_line.billable_chg_id
    and ci_b_chg_line.billable_chg_id = ci_b_ln_char.billable_chg_id
    and ci_b_chg_line.line_seq = ci_b_ln_char.line_seq
    and ci_b_ln_char.characteristic_type_code = 'CI_SOLID'
    and ci_sa.sa_status_flag = ci_lookup_val_l.field_value
    and ci_lookup_val_l.field_name = 'SA_STATUS_FLG'
;


--20160216 rk - Debtnext coll agy payments to overpay SA
create or replace view WC_CCB_DBTNXT_DAILY_TRNS_SFS_V
as
SELECT 
      F.ACCOUNT_CID ||'::'|| e.SA_ID  ||'::'|| e.pay_segment_id INTEGRATION_ID, 
		  3000 DATASOURCE_NUM_ID, 
		  SYSDATE W_INSERT_DT, 
		  SYSDATE W_UPDATE_DT, 
		  0 W_LOAD_NUMBER,
      f.ACCOUNT_CID, a.TENDER_SOURCE_CODE, a.CREATE_DATE, 
      ' ' /*g.COLLECTION_AGENCY_CODE*/ coll_AGY_CID, B.TENDER_AMOUNT, 
      e.SA_ID sa_cid
  FROM WC_CCB_TNDR_CTL_S a,                                   /* CI_TNDR_CTL*/
       WC_CCB_PAY_TNDR_S B,                                  /* CI_PAY_TNDR */
       WC_CCB_PAY_EVENT_S c,                                /* CI_PAY_EVENT */
       WC_CCB_PAY_S d,                                            /* CI_PAY */
       WC_CCB_PAY_SEG_S e,                                    /* CI_PAY_SEG */
       WC_CCB_SA_S f--,                                               /* CI_SA */
 --WC_CCB_COLL_AGY_REF_HIST_F g
 WHERE     a.TENDER_SOURCE_CODE = 'LM160'
       AND a.TENDER_CONTROL_ID = b.TENDER_CONTROL_ID
       AND b.PAYMENT_EVENT_ID = c.PAYMENT_EVENT_ID
       AND d.PAY_EVENT_ID = c.PAYMENT_EVENT_ID
       AND d.PAYMENT_ID = e.payment_id
       AND e.SA_ID = f.SA_ID
       AND f.SA_TYPE_CODE = 'GOVRPY'
   ;
   
   
--20160216 rk - Meter reconnects without SA  
--20160304 rk - fix to date and removed connected
CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_FA_MTR_RCNCT_NOSA_SFS_V"
(
   "INTEGRATION_ID",
   "DATASOURCE_NUM_ID",
   "W_INSERT_DT",
   "W_UPDATE_DT",
   "W_LOAD_NUMBER",
   "FA_ID",
   "ACTIVITY_TYPE_CODE",
   "FA_CANCEL_REASON_CODE",
   "SERVICE_POINT_ID",
   "FA_PRIORITY_FLAG",
   "FA_CREATED_BY",
   "SCHEDULE_DATE",
   "FA_STATUS_FLAG",
   "ELIGIBLE_FOR_DISPATCH_SW",
   "DISPATCH_GROUP_CODE",
   "FIELD_ORDER_ID",
   "CREATE_DATE",
   "TEST_SELECTION_ID",
   "USER_ID",
   "INSTRUCTIONS",
   "LONG_DESCRIPTION",
   "FA_VERSION",
   "APPT_PERIOD_ID",
   "FA_EXTERNAL_ID",
   "FA_INTERMEDIATE_STATUS_FLAG",
   "FA_RESCHEDULE_REASON_CODE",
   "FA_DATA_AREA"
) AS
   SELECT "INTEGRATION_ID",
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "FA_ID",
          "ACTIVITY_TYPE_CODE",
          "FA_CANCEL_REASON_CODE",
          "SERVICE_POINT_ID",
          "FA_PRIORITY_FLAG",
          "FA_CREATED_BY",
          "SCHEDULE_DATE",
          "FA_STATUS_FLAG",
          "ELIGIBLE_FOR_DISPATCH_SW",
          "DISPATCH_GROUP_CODE",
          "FIELD_ORDER_ID",
          "CREATE_DATE",
          "TEST_SELECTION_ID",
          "USER_ID",
          "INSTRUCTIONS",
          "LONG_DESCRIPTION",
          "FA_VERSION",
          "APPT_PERIOD_ID",
          "FA_EXTERNAL_ID",
          "FA_INTERMEDIATE_STATUS_FLAG",
          "FA_RESCHEDULE_REASON_CODE",
          "FA_DATA_AREA"
     FROM WC_CCB_FA_S A
    WHERE     A.ACTIVITY_TYPE_CODE = 'M-RECON'             -- meter reconnects
          AND A.SCHEDULE_DATE >= trunc(SYSDATE-7) --20160304 rk
          AND EXISTS
                 (                            -- CONNECTED SP WITH NO SA_SP...
                  SELECT 1
                    FROM WC_CCB_SP_S D
                   WHERE --    D.SP_SOURCE_STATUS_FLAG = 'C'        -- CONNECTED --20160304 rk
                         --AND 
                         a.SERVICE_POINT_ID = d.SP_ID
                         AND a.SERVICE_POINT_ID NOT IN
                                (SELECT SP_ID
                                   FROM WC_CCB_SA_SP_S
                                  WHERE    STOP_DATE IS NULL
                                        OR STOP_DATE >= A.SCHEDULE_DATE))

--20160216 rk - Projected Severance Available Disconnects 
--20160301 rk - updates to tune odi load - temp tables
CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_PRJCTD_SV_AVL_DSC_SFS_V"
(
   "INTEGRATION_ID",
   "DATASOURCE_NUM_ID",
   "W_INSERT_DT",
   "W_UPDATE_DT",
   "W_LOAD_NUMBER",
   "DIVISION_CID",
   "ACCOUNT_CID",
   "NEXT_CR_RVW_DT",
   "CUSTOMER_CLASS_CODE",
   "COLLECTION_CLASS_CODE",
   "DEBT_CLASS_CODE",
   "INTERVAL1",
   "INTERVAL1_BAL",
   "INTERVAL2",
   "INTERVAL2_BAL"
) AS
   SELECT "INTEGRATION_ID",
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "DIVISION_CID",
          "ACCOUNT_ID",
          "NEXT_CR_RVW_DT",
          "CUSTOMER_CLASS_CODE",
          "COLLECTION_CLASS_CODE",
          "DEBT_CLASS_CODE",
          "INTERVAL1",
          "INTERVAL1_BAL",
          "INTERVAL2",
          "INTERVAL2_BAL"
     FROM ---     $250 @ 30 days or $100 @ 60 days for the RES Collection Class Control. only gas/utility debt
         (SELECT    account_id
                 || '::'
                 || next_cr_rvw_dt
                 || '::'
                 || temp_debt.debt_class_code
                    INTEGRATION_ID,
                 3000 DATASOURCE_NUM_ID,
                 SYSDATE W_INSERT_DT,
                 SYSDATE W_UPDATE_DT,
                 0 W_LOAD_NUMBER,
                 temp_debt.DIVISION_CID,
                 temp_debt.account_id,
                 temp_debt.next_cr_rvw_dt,
                 temp_debt.customer_class_code,
                 temp_debt.collection_class_code,
                 temp_debt.debt_class_code,
                 '30' interval1,
                 SUM(day30.bal30) AS INTERVAL1_BAL,
                 '60' interval2,
                 SUM(day60.bal60) AS INTERVAL2_BAL
            FROM /*wc_ccb_sa_s sa,
                 wc_ccb_sa_type_s sat,
                 wc_ccb_acct_s acct,
                 wc_ccb_adm_rvw_sch_s adm,
                (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal30
                     FROM wc_ccb_ft_s ft1
                    WHERE (   ft1.arrears_date < SYSDATE - 30
                           OR ft1.current_amount < 0)
                 GROUP BY ft1.sa_id) day30,
                 (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal60
                      FROM wc_ccb_ft_s ft1
                     WHERE (   ft1.arrears_date < SYSDATE - 60
                            OR ft1.current_amount < 0)
                  GROUP BY ft1.sa_id) day60,
                  */
                WC_CCB_FT_ARRRS_30_TEMP day30,          --rk20160301  odi tune
                 WC_CCB_FT_ARRRS_60_TEMP day60,         --rk20160301  odi tune
                 WC_CCB_DEBT_ACCOUNT_TEMP temp_debt
           WHERE /*   sa.sa_type_code = sat.sa_type_code
                AND sat.debt_class_code = 'RES'
                AND sa.account_id = acct.account_id
                AND acct.account_id = adm.acct_id
                AND acct.account_id = temp_debt.account_id
                AND adm.next_cr_rvw_dt BETWEEN TRUNC(SYSDATE)
                                           AND TRUNC(SYSDATE) + 30
                AND */
                temp_debt.sa_id = day30.sa_id(+)
                 AND temp_debt.sa_id = day60.sa_id(+)
                 AND TEMP_DEBT.debt_class_code = 'RES'
          GROUP BY temp_debt.DIVISION_CID,
                   temp_debt.account_id,
                   temp_debt.next_cr_rvw_dt,
                   temp_debt.customer_class_code,
                   temp_debt.collection_class_code,
                   temp_debt.debt_class_code
          HAVING SUM(bal30) > 250 OR SUM(bal60) > 100)
   UNION ALL
   ---   $1000 @ 15 days or $500 @ 45 days for industrial only gas/utility debt
   (SELECT    account_id
           || '::'
           || next_cr_rvw_dt
           || '::'
           || temp_debt.debt_class_code
              INTEGRATION_ID,
           3000 DATASOURCE_NUM_ID,
           SYSDATE W_INSERT_DT,
           SYSDATE W_UPDATE_DT,
           0 W_LOAD_NUMBER,
           temp_debt.DIVISION_CID,
           temp_debt.account_id,
           temp_debt.next_cr_rvw_dt,
           temp_debt.customer_class_code,
           temp_debt.collection_class_code,
           temp_debt.debt_class_code,
           '15' interval1,
           SUM(day15.bal15) AS INTERVAL1_BAL,
           '45' interval2,
           SUM(day45.bal45) AS INTERVAL2_BAL
      FROM /*wc_ccb_sa_s sa,
           wc_ccb_sa_type_s sat,
           wc_ccb_acct_s acct,
           wc_ccb_adm_rvw_sch_s adm,
          (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal15
               FROM wc_ccb_ft_s ft1
              WHERE (ft1.arrears_date < SYSDATE - 15 OR ft1.current_amount < 0)
           GROUP BY ft1.sa_id) day15,
           (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal45
                FROM wc_ccb_ft_s ft1
               WHERE (ft1.arrears_date < SYSDATE - 45 OR ft1.current_amount < 0)
            GROUP BY ft1.sa_id) day45,
             */
          WC_CCB_FT_ARRRS_15_TEMP day15,                --rk20160301  odi tune
           WC_CCB_FT_ARRRS_45_TEMP day45,               --rk20160301  odi tune
           WC_CCB_DEBT_ACCOUNT_TEMP temp_debt
     WHERE /*   sa.sa_type_code = sat.sa_type_code
          AND sat.debt_class_code = 'IND'
          AND sa.account_id = acct.account_id
          AND acct.account_id = adm.acct_id
          AND acct.account_id = temp_debt.account_id
          AND adm.next_cr_rvw_dt BETWEEN TRUNC(SYSDATE)
                                     AND TRUNC(SYSDATE) + 30
          AND */
          temp_debt.sa_id = day15.sa_id(+)
           AND temp_debt.sa_id = day45.sa_id(+)
           AND TEMP_DEBT.debt_class_code = 'IND'
    GROUP BY temp_debt.DIVISION_CID,
             temp_debt.account_id,
             temp_debt.next_cr_rvw_dt,
             temp_debt.customer_class_code,
             temp_debt.collection_class_code,
             temp_debt.debt_class_code
    HAVING SUM(bal15) > 1000 OR SUM(bal45) > 500)
   UNION ALL
   ---   $250 @ 30 days or $100 @ 51 days for commercial only gas/utility debt30
   (SELECT    account_id
           || '::'
           || next_cr_rvw_dt
           || '::'
           || temp_debt.debt_class_code
              INTEGRATION_ID,
           3000 DATASOURCE_NUM_ID,
           SYSDATE W_INSERT_DT,
           SYSDATE W_UPDATE_DT,
           0 W_LOAD_NUMBER,
           temp_debt.DIVISION_CID,
           temp_debt.account_id,
           temp_debt.next_cr_rvw_dt,
           temp_debt.customer_class_code,
           temp_debt.collection_class_code,
           temp_debt.debt_class_code,
           '30' interval1,
           SUM(day30.bal30) INTERVAL1_BAL,
           '51' interval2,
           SUM(day51.bal51) INTERVAL2_BAL
      FROM /*wc_ccb_sa_s sa,
           wc_ccb_sa_type_s sat,
           wc_ccb_acct_s acct,
           wc_ccb_adm_rvw_sch_s adm,
          (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal30
               FROM wc_ccb_ft_s ft1
              WHERE (ft1.arrears_date < SYSDATE - 30 OR ft1.current_amount < 0)
           GROUP BY ft1.sa_id) day30,
           (  SELECT ft1.sa_id, SUM (ft1.current_amount) AS bal51
                FROM wc_ccb_ft_s ft1
               WHERE (ft1.arrears_date < SYSDATE - 51 OR ft1.current_amount < 0)
            GROUP BY ft1.sa_id) day51,
             */
          WC_CCB_FT_ARRRS_30_TEMP day30,                --rk20160301  odi tune
           WC_CCB_FT_ARRRS_51_TEMP day51,               --rk20160301  odi tune
           WC_CCB_DEBT_ACCOUNT_TEMP temp_debt
     WHERE /*   sa.sa_type_code = sat.sa_type_code
          AND sat.debt_class_code = 'COM'
          AND sa.account_id = acct.account_id
          AND acct.account_id = adm.acct_id
          AND acct.account_id = temp_debt.account_id
          AND adm.next_cr_rvw_dt BETWEEN TRUNC(SYSDATE)
                                     AND TRUNC(SYSDATE) + 30
          AND */
          temp_debt.sa_id = day30.sa_id(+)
           AND temp_debt.sa_id = day51.sa_id(+)
           AND TEMP_DEBT.debt_class_code = 'COM'
    GROUP BY temp_debt.DIVISION_CID,
             temp_debt.account_id,
             temp_debt.next_cr_rvw_dt,
             temp_debt.customer_class_code,
             temp_debt.collection_class_code,
             temp_debt.debt_class_code
    HAVING SUM(bal30) > 250 OR SUM(bal51) > 100)
   
   
--20160229 BN - TO GET SCHOOL AGG INTO OBIEE.

CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SCHOOL_AGG_LGC_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT,
   BILL_ID,
   FT_ON_BILL_DATE,
   SA_TYPE,
   PERSON,
   TOWN_CODE,
   BILL_DATE,
   ACCOUNTING_DT,
   BILL_AMOUNT_DUE,
   BILL_SEGMENT_START_DATE,
   BILL_SEGMENT_END_DATE,
   THERMS,
   BILL_SEGMENT_AMOUNT,
   BILL_SEGMENT_FT_TYPE,
   SCHOOL_AGGREGATION_CODE,
   SCHOOL_AGG_CODE_DESCRIPTION,
   SCHOOL_AGGREGATOR,
   SPECIAL_HANDLING_CODE,
   RATE_CODE,
   SERVICE_ADDRESS1,
   SERVICE_ADDRESS2,
   SERVICE_CITY,
   SERVICE_STATE,
   SERVICE_ZIP,
   MAILING_ADDRESS1,
   MAILING_ADDRESS2,
   MAILING_CITY,
   MAILING_STATE,
   MAILING_ZIP,
   GRT_CALC_METHOD,
   GRT_RATE,
   BILL_CYCLE,
   ADJUSTMENT_ON_BILL_FLAG,
   CCF,
   AGG_START_DATE,
   AGG_END_DATE,
   BSEG_ID
)
AS
   SELECT to_char(rownum) INTEGRATION_ID,
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "ACCOUNT",
          "BILL_ID",
          "FT_ON_BILL_DATE",
          "SA_TYPE",
          "PERSON",
          "TOWN_CODE",
          "BILL_DATE",
          "ACCOUNTING_DT",
          "BILL_AMOUNT_DUE",
          "BILL_SEGMENT_START_DATE",
          "BILL_SEGMENT_END_DATE",
          "THERMS",
          "BILL_SEGMENT_AMOUNT",
          "BILL_SEGMENT_FT_TYPE",
          "SCHOOL_AGGREGATION_CODE",
          "SCHOOL_AGG_CODE_DESCRIPTION",
          "SCHOOL_AGGREGATOR",
          "SPECIAL_HANDLING_CODE",
          "RATE_CODE",
          "SERVICE_ADDRESS1",
          "SERVICE_ADDRESS2",
          "SERVICE_CITY",
          "SERVICE_STATE",
          "SERVICE_ZIP",
          "MAILING_ADDRESS1",
          "MAILING_ADDRESS2",
          "MAILING_CITY",
          "MAILING_STATE",
          "MAILING_ZIP",
          "GRT_CALC_METHOD",
          "GRT_RATE",
          "BILL_CYCLE",
          "ADJUSTMENT_ON_BILL_FLAG",
          "CCF",
          "AGG_START_DATE",
          "AGG_END_DATE",
          "BSEG_ID"
     FROM WC_CCB_SCHOOL_AGG_LGC_S;


CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_SCHOOL_AGG_MGE_FS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT,
   BILL_ID,
   FT_ON_BILL_DATE,
   SA_TYPE,
   PERSON,
   TOWN_CODE,
   BILL_DATE,
   ACCOUNTING_DT,
   BILL_AMOUNT_DUE,
   BILL_SEGMENT_START_DATE,
   BILL_SEGMENT_END_DATE,
   THERMS,
   BILL_SEGMENT_AMOUNT,
   BILL_SEGMENT_FT_TYPE,
   SCHOOL_AGGREGATION_CODE,
   SCHOOL_AGG_CODE_DESCRIPTION,
   SCHOOL_AGGREGATOR,
   SPECIAL_HANDLING_CODE,
   RATE_CODE,
   SERVICE_ADDRESS1,
   SERVICE_ADDRESS2,
   SERVICE_CITY,
   SERVICE_STATE,
   SERVICE_ZIP,
   MAILING_ADDRESS1,
   MAILING_ADDRESS2,
   MAILING_CITY,
   MAILING_STATE,
   MAILING_ZIP,
   GRT_CALC_METHOD,
   GRT_RATE,
   BILL_CYCLE,
   ADJUSTMENT_ON_BILL_FLAG,
   CCF,
   AGG_START_DATE,
   AGG_END_DATE,
   BSEG_ID
)
AS
   SELECT TO_CHAR(ROWNUM) INTEGRATION_ID,
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "ACCOUNT",
          "BILL_ID",
          "FT_ON_BILL_DATE",
          "SA_TYPE",
          "PERSON",
          "TOWN_CODE",
          "BILL_DATE",
          "ACCOUNTING_DT",
          "BILL_AMOUNT_DUE",
          "BILL_SEGMENT_START_DATE",
          "BILL_SEGMENT_END_DATE",
          "THERMS",
          "BILL_SEGMENT_AMOUNT",
          "BILL_SEGMENT_FT_TYPE",
          "SCHOOL_AGGREGATION_CODE",
          "SCHOOL_AGG_CODE_DESCRIPTION",
          "SCHOOL_AGGREGATOR",
          "SPECIAL_HANDLING_CODE",
          "RATE_CODE",
          "SERVICE_ADDRESS1",
          "SERVICE_ADDRESS2",
          "SERVICE_CITY",
          "SERVICE_STATE",
          "SERVICE_ZIP",
          "MAILING_ADDRESS1",
          "MAILING_ADDRESS2",
          "MAILING_CITY",
          "MAILING_STATE",
          "MAILING_ZIP",
          "GRT_CALC_METHOD",
          "GRT_RATE",
          "BILL_CYCLE",
          "ADJUSTMENT_ON_BILL_FLAG",
          "CCF",
          "AGG_START_DATE",
          "AGG_END_DATE",
          "BSEG_ID"
     FROM WC_CCB_SCHOOL_AGG_MGE_S;

   /*  --20160512 bn - this is now created in the etl process.
--20160401 bn - view for Service Worksheet report.
CREATE OR REPLACE VIEW WC_CCB_SERVICE_WKST_REP_FS_V AS
select  

    to_char(rownum) integration_id,
    3000 datasource_num_id,
    sysdate w_insert_dt,
    sysdate w_update_dt,
    0 w_load_number,
    wc_ccb_prem_s.integration_id premise_cid,
    wc_ccb_acct_s.integration_id account_cid,
    wc_ccb_sa_s.integration_id sa_cid,
    WC_CCB_PREM_S.PREMISE_ID,
    wc_ccb_acct_per_s.PERSON_ID,
        wc_ccb_acct_s.ACCOUNT_ID,
wc_ccb_sa_s.sa_id,
    WC_CCB_PER_NAME_S.PERSON_NAME,
    wc_ccb_sa_s.end_date, 
    wc_ccb_sa_s.sa_status_flag,
    DECODE(wc_ccb_sa_s.sa_status_flag,'5','Incomplete',
    '10','Pending Start',
    '20','Active',
    '30','Pending Stop',
    '40','Stopped',
    '50','Reactivated',
    '60','Closed',
    '70','Canceled') AS SA_STATUS_FLAG_DESCR,
     DECODE(wc_ccb_sa_s.sa_status_flag,'5','Incomplete',
    '10','Active',--'Pending Start',
    '20','Active',
    '30','Active',--'Pending Stop',
    '40','Stopped',
    '50','Active',--'Reactivated',
    '60','Closed',
    '70','Canceled') AS REPORT_SA_STAUS,
    WC_CCB_PER_PHONE_S.PHONE_NUMBER,
    WC_CCB_PER_PHONE_S.PHONE_TYPE_CODE
from
    wc_ccb_prem_s,
    wc_ccb_sp_s,
    wc_ccb_sa_sp_s,
    wc_ccb_sa_s,
    wc_ccb_acct_s,
    wc_ccb_acct_per_s,
    wc_ccb_per_s,
    wc_ccb_per_phone_s,
    wc_ccb_per_name_s,
    (select t.sp_id, max(nvl(t.stop_date,to_date('1/1/2099','mm/dd/yyyy'))) stop_date from wc_ccb_sa_sp_s t group by t.sp_id) max_sp_stop
where 1=1
    and wc_ccb_prem_s.integration_id = wc_ccb_sp_s.premise_id
    and wc_ccb_sp_s.integration_id = wc_ccb_sa_sp_s.sp_id
    and nvl(wc_ccb_sa_sp_s.stop_date,to_date('1/1/2099','mm/dd/yyyy')) = max_sp_stop.stop_date
    and wc_ccb_sa_sp_s.sp_id = max_sp_stop.sp_id
      --          = (select max(nvl(t.stop_date,to_date('1/1/2099','mm/dd/yyyy'))) from wc_ccb_sa_sp_s t where t.sp_id = wc_ccb_sa_sp_s.sp_id)       --Most Recent SA SP Relationship which will give you the most recent SA, whether Active or Stopped/Closed.
    and wc_ccb_sa_sp_s.sa_id = wc_ccb_sa_s.integration_id
    and wc_ccb_sa_s.sa_status_flag <> '70' --Never want to include Cancelled SAs
    and wc_ccb_sa_s.account_id = wc_ccb_acct_s.integration_id
    and wc_ccb_acct_s.integration_id = wc_ccb_acct_per_s.account_id(+)
    and wc_ccb_acct_per_s.main_customer_flag(+) = 'Y'  --To only get the Main Customer
    and wc_ccb_acct_per_s.person_id = wc_ccb_per_s.integration_id(+)
    and wc_ccb_per_s.integration_id = wc_ccb_per_name_s.person_id(+)
    and wc_ccb_per_name_s.primary_name_flag(+) = 'Y'  --To only get the Primary Name for a Person
    and wc_ccb_per_s.integration_id = wc_ccb_per_phone_s.person_id(+)
    --and WC_CCB_PREM_S.premise_id in ('5881860150','6013911108','9881860152','4981860156','1981860154','2981860155','8091860166','2084070348')
    --and WC_CCB_PREM_S.premise_id='2084070348'
;

*/

--20160428 BN - LARGE METER Audit 
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_MR_DS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   START_METER_READ_ID,
   START_METER_CONFIGURATION_ID,
   START_READ_DATE,
   START_USE_ON_BILL_SW,
   START_MR_VERSION,
   START_MR_SOURCE_CODE,
   START_METER_READER_ID,
   START_MR_DATA_AREA
)
AS
   SELECT "INTEGRATION_ID",
          "DATASOURCE_NUM_ID",
          "W_INSERT_DT",
          "W_UPDATE_DT",
          "W_LOAD_NUMBER",
          "START_METER_READ_ID",
          "START_METER_CONFIGURATION_ID",
          "START_READ_DATE",
          "START_USE_ON_BILL_SW",
          "START_MR_VERSION",
          "START_MR_SOURCE_CODE",
          "START_METER_READER_ID",
          "START_MR_DATA_AREA"
     FROM wc_ccb_mr_s;      


/* --20160621 bn - tuning required this to be created as a table in the odi procedure 
--20160428 BN - LARGE METER Audit
CREATE OR REPLACE VIEW WC_CCB_LARGE_METER_READ_FS_V
AS

select
WC_CCB_MTR_S.INTEGRATION_ID || '::' || WC_CCB_SA_S.SA_ID || '::' || WC_CCB_MR_S.START_METER_READ_ID || '::' ||WC_CCB_REG_READ_S.START_REGISTER_READING_ID AS INTEGRATION_ID,
WC_CCB_MTR_S.DATASOURCE_NUM_ID,
SYSDATE AS W_INSERT_DT,
SYSDATE AS W_UPDATE_DT,
WC_CCB_MTR_S.W_LOAD_NUMBER,

WC_CCB_MTR_S.METER_ID AS METER_CID,
WC_CCB_ACCT_S.ACCOUNT_ID AS ACCOUNT_CID,
WC_CCB_PREM_S.PREMISE_ID AS PREMISE_CID,
WC_CCB_SP_S.SP_ID AS SP_CID,
WC_CCB_SA_S.SA_ID AS SA_CID,
WC_CCB_MR_S.START_METER_READ_ID AS METER_READ_CID,

WC_CCB_MTR_S.BADGE_NUMBER,
WC_CCB_MR_S.START_READ_DATE,
WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE,
WC_CCB_REG_READ_S.START_READ_SEQUENCE,
CASE WHEN WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE='001' AND WC_CCB_REG_READ_S.START_READ_SEQUENCE ='2' THEN WC_CCB_REG_READ_S.START_REGISTER_READING ELSE NULL END AS UNCORRECTED_READ,--FOR UNCORRECTED READS, BRING SEQUENCE 2 READING
CASE WHEN  WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE='002' THEN  WC_CCB_REG_READ_S.START_REGISTER_READING ELSE NULL END AS CORRECTED_READ

FROM WC_CCB_MTR_S,
  WC_CCB_MTR_CONFIG_S,
  WC_CCB_SP_MTR_HIST_S,
  WC_CCB_SA_SP_S,
  WC_CCB_SP_S,
  WC_CCB_PREM_S,
  WC_CCB_SA_S,
  WC_CCB_ACCT_S,
  WC_CCB_MR_S,
  WC_CCB_REG_READ_S,
  (SELECT *
  FROM WC_CCB_MTR_CHAR_S
  WHERE WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN'
  AND WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE             =
    (SELECT MAX(TMP.EFFECTIVE_DATE)
    FROM WC_CCB_MTR_CHAR_S TMP
    WHERE TMP.METER_ID               = WC_CCB_MTR_CHAR_S.METER_ID
    AND TMP.CHARACTERISTIC_TYPE_CODE = 'MTRDSGN'
    )
  ) WC_CCB_MTR_CHAR_S_MTRDSGN  
WHERE 1                                   =1
AND WC_CCB_MTR_S.METER_ID                 =WC_CCB_MTR_CONFIG_S.METER_ID (+)
AND WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID   =WC_CCB_SP_MTR_HIST_S.METER_CONFIG_ID(+)
AND WC_CCB_SP_MTR_HIST_S.REMOVAL_DATE(+) IS NULL
AND WC_CCB_SP_MTR_HIST_S.SP_ID            =WC_CCB_SP_S.integration_id(+)
AND WC_CCB_SP_S.integration_id                     =WC_CCB_SA_SP_S.SP_ID(+)
AND SYSDATE BETWEEN WC_CCB_SA_SP_S.START_DATE AND NVL(WC_CCB_SA_SP_S.STOP_DATE, SYSDATE+1)
AND WC_CCB_SA_SP_S.SA_ID                           =WC_CCB_SA_S.SA_ID (+)
AND WC_CCB_SA_S.ACCOUNT_ID                         =WC_CCB_ACCT_S.ACCOUNT_ID (+)
AND WC_CCB_MTR_S.integration_Id                          = WC_CCB_MTR_CHAR_S_MTRDSGN.METER_ID (+)
AND WC_CCB_SP_S.PREMISE_ID                         =WC_CCB_PREM_S.integration_id(+)
AND WC_CCB_MTR_CONFIG_S.integration_id            = WC_CCB_MR_S.START_METER_CONFIGURATION_ID (+)
AND WC_CCB_MR_S.integration_id                = WC_CCB_REG_READ_S.START_METER_READ_ID (+)
AND WC_CCB_MTR_CHAR_S_MTRDSGN.CHARACTERISTIC_VALUE ='2'  --LARGE METERS
AND WC_CCB_SA_S.SA_STATUS_FLAG                     ='20' --ACTIVE SA
AND WC_CCB_SA_S.CIS_DIVISION                       ='LGC'
AND WC_CCB_MR_S.start_mr_source_code='M' --20160511 NM updated to bring only manual reads per testing feedback
AND ((WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE   ='001'
AND WC_CCB_REG_READ_S.START_READ_SEQUENCE          ='2' )   --for uncorrected reads, bring sequence 2 reading
OR WC_CCB_MTR_CONFIG_S.METER_CONFIG_TYPE_CODE      ='002' ) --for corrected reads, bring sequence 1 reading
*/
--AND wc_ccb_mtr_s.badge_number                     IN ('000011682','001181290','610001288','001524124','000014451','001181215','000017537','001486119','000073484','001488409')
  --AND WC_CCB_MTR_CONFIG_S.METER_CONFIG_ID = '9805160127' --badge number 001488409
/*ORDER BY wc_ccb_mtr_s.meter_id,
  WC_CCB_MR_S.start_read_date,
  WC_CCB_REG_READ_S.START_READ_SEQUENCE */
 /* ;     
  */
  
  
  --20160517 bn - tuning for ft gl adj tmp2 load
create index wc_ccb_ft_s_idx8 on wc_ccb_ft_s (sibling_id, ft_type_flag) nologging parallel 8;
alter index wc_ccb_ft_s_idx8 noparallel;



--20160520 bn - for zero use reports
CREATE INDEX MDW.WC_CCB_BILL_S_IDX9 ON MDW.WC_CCB_BILL_S
(BILL_DATE, BILL_STATUS_FLAG) nologging;
CREATE INDEX MDW.WC_CCB_SP_CHAR_S_IDX1 ON MDW.WC_CCB_SP_CHAR_S
(CHARACTERISTIC_TYPE, SP_ID, EFFECTIVE_DATE)
NOLOGGING;




/******************************************************************************
   NAME:     WC_CCB_METER_AMR_ERT_FS_V    
   PURPOSE:     New for New Meter Report

   REVISIONS:

   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0         6/6/2016         Brock Nosbisch    Initial

   NOTES:

******************************************************************************/


CREATE OR REPLACE VIEW WC_CCB_METER_AMR_ERT_FS_V AS
SELECT
WC_CCB_MTR_S.METER_ID || '::' || WC_CCB_MTR_EQ_S.EQUIPMENT_ID AS INTEGRATION_ID,
3000 AS DATASOURCE_NUM_ID,
SYSDATE AS W_INSERT_DT,
SYSDATE AS W_UPDATE_DT,
0 AS W_LOAD_NUMBER,
WC_CCB_MTR_S.METER_ID AS METER_CID,
WC_CCB_MTR_EQ_S.EQUIPMENT_ID AS ITEM_CID,
WC_CCB_MTR_S.BADGE_NUMBER AS METER_BADGE_NUMBER,
MTR_CHAR_SITE.METER_SITE,
WC_CCB_MTR_S.MANUFACTURER_CODE AS METER_MANUFACTURER_CODE,
WC_CCB_MTR_EQ_S.ITEM_BADGE_NUMBER,
WC_CCB_MTR_EQ_S.ITEM_MANUFACTURER_CODE,
WC_CCB_MTR_EQ_S.ITEM_TYPE_CODE,
WC_CCB_MTR_EQ_S.INSTALL_DATE
FROM 
WC_CCB_MTR_S,
(SELECT METER_ID,DECODE(CHARACTERISTIC_VALUE,'1','SITE ONE','2','MGE',CHARACTERISTIC_VALUE) AS METER_SITE
 FROM WC_CCB_MTR_CHAR_S
           WHERE WC_CCB_MTR_CHAR_S.EFFECTIVE_DATE = (SELECT MAX(TMP.EFFECTIVE_DATE) FROM WC_CCB_MTR_CHAR_S TMP
                                                     WHERE TMP.METER_ID = WC_CCB_MTR_CHAR_S.METER_ID
                                                           AND TMP.CHARACTERISTIC_TYPE_CODE = 'CM-MTSTE')
                AND WC_CCB_MTR_CHAR_S.CHARACTERISTIC_TYPE_CODE = 'CM-MTSTE'
          ) MTR_CHAR_SITE ,
(SELECT 
WC_CCB_MTR_EQ_S.METER_ID,
WC_CCB_MTR_EQ_S.EQUIPMENT_ID,
WC_CCB_ITEM_S.BADGE_NUMBER AS ITEM_BADGE_NUMBER,
WC_CCB_ITEM_S.MANUFACTURER_CODE AS ITEM_MANUFACTURER_CODE,
WC_CCB_ITEM_S.ITEM_TYPE_CODE,
WC_CCB_MTR_EQ_S.INSTALL_DATE
--WC_CCB_MTR_EQ_S.REMOVAL_DATE
FROM WC_CCB_MTR_EQ_S, WC_CCB_ITEM_S
WHERE 1=1
AND WC_CCB_MTR_EQ_S.EQUIPMENT_ID=WC_CCB_ITEM_S.ITEM_ID(+)
AND WC_CCB_MTR_EQ_S.INSTALL_DATE=(SELECT MAX(TEMP.INSTALL_DATE) FROM WC_CCB_MTR_EQ_S TEMP WHERE TEMP.METER_ID = WC_CCB_MTR_EQ_S.METER_ID)
AND WC_CCB_MTR_EQ_S.REMOVAL_DATE(+) IS NULL
AND WC_CCB_ITEM_S.ITEM_TYPE_CODE IN ('AMR','ERT'))WC_CCB_MTR_EQ_S
WHERE 1=1
AND WC_CCB_MTR_S.METER_ID = WC_CCB_MTR_EQ_S.METER_ID (+)
AND WC_CCB_MTR_S.METER_ID=MTR_CHAR_SITE.METER_ID(+)
--AND WC_CCB_MTR_S.METER_ID IN ('4798739501','0260021426','7717901135','7687970663')
--AND WC_CCB_MTR_S.METER_ID IN ('3112897290','1702155783')
UNION ALL
--SECOND SQL GIVES ALL AMR/ERT WITH NO ASSOCIATED METER.
SELECT 
NULL || '::' || WC_CCB_ITEM_S.ITEM_ID AS INTEGRATION_ID,
3000 AS DATASOURCE_NUM_ID,
SYSDATE AS W_INSERT_DT,
SYSDATE AS W_UPDATE_DT,
0 AS W_LOAD_NUMBER,
NULL AS METER_CID,
WC_CCB_ITEM_S.ITEM_ID AS ITEM_CID,
NULL AS METER_BADGE_NUMBER,
NULL AS METER_SITE,
NULL AS METER_MANUFACTURER_CODE,
WC_CCB_ITEM_S.BADGE_NUMBER AS ITEM_BADGE_NUMBER,
WC_CCB_ITEM_S.MANUFACTURER_CODE AS ITEM_MANUFACTURER_CODE,
WC_CCB_ITEM_S.ITEM_TYPE_CODE,
NULL AS INSTALL_DATE
FROM WC_CCB_MTR_EQ_S, WC_CCB_ITEM_S
WHERE 1=1
AND WC_CCB_ITEM_S.ITEM_ID = WC_CCB_MTR_EQ_S.EQUIPMENT_ID(+)
AND WC_CCB_MTR_EQ_S.EQUIPMENT_ID IS NULL
AND WC_CCB_ITEM_S.ITEM_TYPE_CODE IN ('AMR','ERT')
--AND WC_CCB_MTR_EQ_S.METER_ID IN ('4798739501','0260021426','7717901135')
;



--20160615 bn - for Long Bill report.
create or replace view WC_CCB_LONG_BILL_REPORT_SFS_V as
select
   wc_ccb_bseg_s.integration_id,
   wc_ccb_bseg_s.datasource_num_id,
   sysdate w_insert_dt,
   sysdate w_update_dt,
   wc_ccb_bseg_s.w_load_number,
   wc_ccb_sa_s.cis_division,
   wc_ccb_bill_s.bill_date,
   wc_ccb_bill_s.account_id,
   wc_ccb_sa_s.sa_id,
   wc_ccb_sa_s.start_date sa_start_date,
   wc_ccb_bseg_s.start_date bseg_start_date,
   wc_ccb_bseg_s.end_date bseg_end_date,
   wc_ccb_bseg_sq_s.billable_service_quantity,
   wc_ccb_bseg_s.closing_bill_segment_sw
from
    wc_ccb_bseg_sq_long_bill_tmp wc_ccb_bseg_sq_s,
    wc_ccb_bseg_s,
    wc_ccb_bill_s,
    wc_ccb_sa_s
where 1=1
    and wc_ccb_bseg_sq_s.bill_segment_id = wc_ccb_bseg_s.integration_id
    and wc_ccb_bseg_s.bill_id = wc_ccb_bill_s.integration_id
    and wc_ccb_bseg_s.sa_id = wc_ccb_sa_s.integration_id
    and wc_ccb_bill_s.bill_status_flag = 'C'
    and wc_ccb_bseg_s.bill_segment_status_flag = '50'
   -- and wc_ccb_bseg_sq_s.sqi_code = 'DAYBP'
   -- and wc_ccb_bseg_sq_s.billable_service_quantity > 35;         
   ;
   
   
--20160805 bn - new for vikas
CREATE OR REPLACE FORCE VIEW MDW.WC_CCB_ACTIVE_SA_DISC_SP_SFS_V
(
   INTEGRATION_ID,
   DATASOURCE_NUM_ID,
   W_INSERT_DT,
   W_UPDATE_DT,
   W_LOAD_NUMBER,
   ACCOUNT_ID,
   SA_ID,
   SA_TYPE_CODE,
   ADDRESS1,
   SP_ID
)
AS
   SELECT    wc_ccb_sa_s.ACCOUNT_ID
          || '::'
          || wc_ccb_sa_s.SA_ID
          || '::'
          || wc_ccb_sp_s.sp_id
             INTEGRATION_ID,
          4000 DATASOURCE_NUM_ID,
          SYSDATE W_INSERT_DT,
          SYSDATE W_UPDATE_DT,
          0 W_LOAD_NUMBER,
          wc_ccb_sa_s.ACCOUNT_ID,
          wc_ccb_sa_s.sa_id,
          wc_ccb_sa_s.SA_TYPE_CODE,
          wc_ccb_prem_s.address1,
          wc_ccb_sp_s.sp_id
     FROM wc_ccb_sp_s,
          wc_ccb_sa_sp_s,
          wc_ccb_sa_s,
          wc_ccb_prem_s
    WHERE     wc_ccb_sp_s.SP_SOURCE_STATUS_FLAG = 'D'
          AND wc_ccb_sp_s.integration_id = wc_ccb_sa_sp_s.sp_id
          AND wc_ccb_sa_sp_s.sa_id = wc_ccb_sa_s.integration_id
          AND wc_ccb_sp_s.PREMISE_ID = wc_ccb_prem_s.integration_id
          AND wc_ccb_sa_s.SA_STATUS_FLAG = '20';
		  
		  
		  
		  --20160830 bn - from vikas
		    CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_UNPAID_PLG_CUST_SFS_V" ("INTEGRATION_ID", "DATASOURCE_NUM_ID", "W_INSERT_DT", "W_UPDATE_DT", "W_LOAD_NUMBER", "ACCOUNT", "PLEDGE_AMOUNT", "C1SA", "PLEDGE_ID", "AGENCY", "PLEDGE_DT", "SERVICE_TASK_ID", "PAYMENT_DATE", "PAYMENT_AMOUNT", "TENDER_AMOUNT") AS 
  SELECT x.SERVICE_TASK_ID
    ||'::'
    ||X.account
    ||'::'
    ||Y.PAYMENT_EVENT_ID
    ||'::'
    ||Y.PAYMENT_TENDER_ID
    ||'::'
    ||Y.payment_id   INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    sysdate W_INSERT_DT,
    sysdate W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    x.account,
    x.amount PLEDGE_AMOUNT,
    x.C1SA,
    x.PLEDGE_ID,
    x.agency,
    x.PLEDGE_DT,
    x.SERVICE_TASK_ID,
    Y.PAYMENT_DATE,
    Y.PAYMENT_AMOUNT,
    Y.TENDER_AMOUNT
     FROM
    (SELECT a.SERVICE_TASK_ID,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'ACCOUNT', a.SEARCH_CHARACTERISTIC_VALUE))  AS ACCOUNT,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'C1-SA', a.SEARCH_CHARACTERISTIC_VALUE))    AS C1SA,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'LAGENCY', a.SEARCH_CHARACTERISTIC_VALUE))  AS AGENCY,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'LFNDTYP', a.SEARCH_CHARACTERISTIC_VALUE))  AS LFNDTYP,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'PLDGAMT', a.SEARCH_CHARACTERISTIC_VALUE))  AS AMOUNT,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'PLGDID', a.SEARCH_CHARACTERISTIC_VALUE))   AS PLEDGE_ID,
      to_date(MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'PLGDT', a.SEARCH_CHARACTERISTIC_VALUE)),'YYYY/MM/DD')    AS PLEDGE_DT,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'PLGDWBID', a.SEARCH_CHARACTERISTIC_VALUE)) AS PLGDWBID,
      MIN(DECODE (trim(a.CHARACTERISTIC_TYPE), 'SVTKACCT', a.SEARCH_CHARACTERISTIC_VALUE)) AS SVTKACCT
    FROM WC_CCB_F1_SVC_TASK_CHAR_S a ,
      (SELECT PF.CM_PLEDGE_ID ,
        FTC.T_ID
      FROM WC_CCB_CM_PLG_ACTNL_STGUP_S PF,
        (SELECT ADHOC_CHARACTERISTIC_VALUE P_ID,
          WC_CCB_F1_SVC_TASK_CHAR_S.SERVICE_TASK_ID T_ID
        FROM WC_CCB_F1_SVC_TASK_CHAR_S
        WHERE WC_CCB_F1_SVC_TASK_CHAR_S.CHARACTERISTIC_TYPE = 'PLGDID'
        ) FTC
      WHERE PF.CM_PLEDGE_ID = FTC.P_ID
        -- AND PF.BATCH_NBR      = '11380'
      ) b
    WHERE a.SERVICE_TASK_ID = b.T_ID
    GROUP BY a.SERVICE_TASK_ID
    ) X,
    (SELECT CPE.PAYMENT_EVENT_ID,
      CPE.PAYMENT_DATE,
      CP.PAYMENT_AMOUNT,
      CP.ACCOUNT_ID,
      CPT.payor_account_id,
      CPT.TENDER_TYPE_CODE,
      CPT.customer_id,
      CP.payment_id,
      CPT.PAYMENT_TENDER_ID,
      CPT.TENDER_AMOUNT
    FROM wc_ccb_pay_event_s CPE,
      WC_CCB_PAY_S CP,
      WC_CCB_PAY_TNDR_S CPT
    WHERE CPE.PAYMENT_EVENT_ID = CP.PAY_EVENT_ID
    AND CPE.PAYMENT_EVENT_ID   = CPT.PAYMENT_EVENT_ID
    AND CP.PAY_EVENT_ID        = CPT.PAYMENT_EVENT_ID
    AND CP.ACCOUNT_ID          = CPT.PAYOR_ACCOUNT_ID
    ) Y
  WHERE x.account = y.account_id
  AND y.PAYMENT_DATE > x.pledge_dt
  AND Y.PAYMENT_AMOUNT = X.amount

;


--20160908 bn - from vikas
CREATE OR REPLACE VIEW "MDW"."WC_CCB_ECIP_SYNC_SFS_V"
AS
  SELECT s.ACCOUNT_ID
    ||'::'
    ||s.SA_TYPE_CODE INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID ,
    sysdate W_INSERT_DT,
    sysdate W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    s.ACCOUNT_ID,
    s.SA_TYPE_CODE,
    s.SA_STATUS_FLAG,
    SUM(f.PAYOFF_AMOUNT) PAYOFF_AMOUNT,
    SUM(f.CURRENT_AMOUNT)CURRENT_AMOUNT
  FROM WC_CCB_SA_S s,
    WC_CCB_FT_S f,
    WC_CCB_COLL_AGY_REF_S ca
  WHERE s.SA_ID                 = f.SA_ID
  AND s.ACCOUNT_ID              = ca.ACCT_ID
  AND s.SA_STATUS_FLAG NOT     IN ('60', '70', '20', '30', '05', '10')
  AND ca.collection_agency_code = 'DTN'
  AND ca.REFERRAL_STATUS_FLAG   = 'A'
  AND EXISTS
    (SELECT *
    FROM WC_CCB_ACCT_S a,
      WC_CCB_PAY_TNDR_S pt,
      WC_CCB_TNDR_CTL_S tt,
      WC_CCB_PAY_S pp
    WHERE a.ACCOUNT_ID         = s.ACCOUNT_ID
    AND pt.TENDER_CONTROL_ID   = tt.TENDER_CONTROL_ID
    AND pp.ACCOUNT_ID          = a.ACCOUNT_ID
    AND pp.PAY_EVENT_ID        = pt.PAYMENT_EVENT_ID
    AND pp.PAYMENT_STATUS_FLAG = '50'
    AND tt.TENDER_SOURCE_CODE IN ('ECIP', 'EA')
    AND ca.START_DATE         <= TRUNC(tt.CREATE_DATE)
    )
  GROUP BY s.ACCOUNT_ID,
    s.SA_TYPE_CODE,
    s.SA_STATUS_FLAG,
    s.TOTAL_TO_BILL_AMOUNT
  HAVING SUM(f.PAYOFF_AMOUNT) <> SUM(f.CURRENT_AMOUNT)
  ORDER BY s.ACCOUNT_ID;


  --20161221 - from cm migration 
  CREATE OR REPLACE VIEW "MDW"."WC_CCB_ECIP_SYNC_SFS_V"
AS
  SELECT s.ACCOUNT_ID
    ||'::'
    ||s.SA_TYPE_CODE INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID ,
    sysdate W_INSERT_DT,
    sysdate W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    s.ACCOUNT_ID,
    s.SA_TYPE_CODE,
    s.SA_STATUS_FLAG,
    SUM(f.PAYOFF_AMOUNT) PAYOFF_AMOUNT,
    SUM(f.CURRENT_AMOUNT)CURRENT_AMOUNT
  FROM WC_CCB_SA_S s,
    WC_CCB_FT_S f,
    WC_CCB_COLL_AGY_REF_S ca
  WHERE s.SA_ID                 = f.SA_ID
  AND s.ACCOUNT_ID              = ca.ACCT_ID
  AND s.SA_STATUS_FLAG NOT     IN ('60', '70', '20', '30', '05', '10')
  AND ca.collection_agency_code = 'DTN'
  AND ca.REFERRAL_STATUS_FLAG   = 'A'
  AND EXISTS
    (SELECT *
    FROM WC_CCB_ACCT_S a,
      WC_CCB_PAY_TNDR_S pt,
      WC_CCB_TNDR_CTL_S tt,
      WC_CCB_PAY_S pp
    WHERE a.ACCOUNT_ID         = s.ACCOUNT_ID
    AND pt.TENDER_CONTROL_ID   = tt.TENDER_CONTROL_ID
    AND pp.ACCOUNT_ID          = a.ACCOUNT_ID
    AND pp.PAY_EVENT_ID        = pt.PAYMENT_EVENT_ID
    AND pp.PAYMENT_STATUS_FLAG = '50'
    AND tt.TENDER_SOURCE_CODE IN ('ECIP', 'EA')
    AND ca.START_DATE         <= TRUNC(tt.CREATE_DATE)
    )
  GROUP BY s.ACCOUNT_ID,
    s.SA_TYPE_CODE,
    s.SA_STATUS_FLAG,
    s.TOTAL_TO_BILL_AMOUNT
  HAVING SUM(f.PAYOFF_AMOUNT) <> SUM(f.CURRENT_AMOUNT)
  ORDER BY s.ACCOUNT_ID;

  
  /*****************************************************************************************************************
NAME:        <WC_CCB_TAX_EXEMPT_LL_SFS_V>
PURPOSE:     <shows new Landlord SAs that previously had a Tax Exemption on the prior Closed SA for the same SP>
 
REVISIONS:
 
Ver       Date                     	Author           		Description
-----     ---------------           -------------------  	------------------------------------
1.0       <29-DEC-16>       		<Vikas Thallapally>	<Short Description of change>
 
NOTES:
  -
  
*************************************************************************************************************************************/
  CREATE OR REPLACE FORCE VIEW "MDW"."WC_CCB_TAX_EXEMPT_LL_SFS_V" ("INTEGRATION_ID", "DATASOURCE_NUM_ID", "W_INSERT_DT", "W_UPDATE_DT", "W_LOAD_NUMBER", "ACCOUNT", "OLD_SA_ID", "NEW_SA_ID", "START_DATE", "BILL_FACTOR_CODE", "TAX_EXEMPT_TYPE_CODE", "TAX_EXEMPT_DESCRIPTION", "ADDRESS1", "CITY", "POSTAL", "STATE") AS 
  SELECT wc_ccb_acct_s.integration_id
    ||'::'
    ||sa2.sa_id
    ||'::'
    ||wc_ccb_sa_conterm_s.integration_id INTEGRATION_ID,
    3000 DATASOURCE_NUM_ID,
    SYSDATE W_INSERT_DT,
    SYSDATE W_UPDATE_DT,
    0 W_LOAD_NUMBER,
    wc_ccb_acct_s.integration_id Account,
    wc_Ccb_sa_s.sa_id OLD_SA_ID,
    sa2.sa_id NEW_SA_ID,
    sa2.START_DATE,
    wc_ccb_sa_conterm_s.BILL_FACTOR_CODE,
    wc_ccb_sa_conterm_s.TAX_EXEMPT_TYPE_CODE,
    TT.TAX_EXEMPT_DESCRIPTION,
    prem.ADDRESS1,
    prem.CITY,
    prem.POSTAL,
    prem.STATE
  FROM mdw.wc_ccb_acct_s,
    mdw.wc_Ccb_sa_s ,
    mdw.wc_ccb_sa_conterm_s,
    mdw.wc_ccb_sa_type_s,
    mdw.wc_Ccb_sa_s sa2,
    mdw.wc_ccb_sa_conterm_s saconterm2,
    mdw.wc_ccb_prem_s prem,
    mdw.wc_ccb_sa_type_s satype2,
    mdw.WC_CCB_TAX_EX_TYPE_S TT
  WHERE 1=1
    --and wc_ccb_sa_s.integration_id = '0038231594'
  AND wc_ccb_sa_s.account_id                 = wc_ccb_acct_s.integration_id
  AND wc_Ccb_sa_s.premise_cid                = prem.premise_id
  AND wc_Ccb_sa_s.account_id                 = sa2.account_id
  AND sa2.premise_cid                        = wc_ccb_sa_s.premise_cid
  AND sa2.integration_id                    <> wc_ccb_sa_s.integration_Id
  AND wc_Ccb_Sa_s.integration_id             = wc_ccb_sa_conterm_s.sa_id
  AND wc_ccb_sa_conterm_s.TAX_EXEMPT_TYPE_CODE = TT.TAX_EXEMPT_TYPE_CODE
  AND sa2.premise_cid                        = prem.premise_id
  AND wc_ccb_sa_conterm_s.CONTRACT_TERM_TYPE = 'T'
  AND sa2.integration_id                     = saconterm2.sa_id (+)
  AND saconterm2.CONTRACT_TERM_TYPE(+)       = 'T'
  AND sa2.sa_status_flag                     = '20'
  AND saconterm2.sa_id                      IS NULL
  AND wc_ccb_sa_s.sa_type_code               = wc_ccb_sa_type_s.sa_type_code
  AND wc_ccb_sa_s.cis_division               = wc_ccb_sa_type_s.cis_division
  AND wc_ccb_sa_type_s.service_type_code     = 'G'
  AND sa2.sa_type_code                       = satype2.sa_type_code
  AND sa2.cis_division                       = satype2.cis_division
  AND satype2.service_type_code              = 'G'
    --AND wc_ccb_sa_s.integration_id = '0038231594'
    --and wc_ccb_acct_s.integration_id = '7569570000'
;


